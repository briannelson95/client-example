import { ToggleArrowRightIcon } from '@sanity/icons';
import { Box, Flex, Inline, Text } from '@sanity/ui';
import React, { useCallback, useEffect, useState } from 'react';
import styled from 'styled-components';
const HeaderButton = styled.button `
  display: block;
  -webkit-font-smoothing: inherit;
  appearance: none;
  font: inherit;
  background: none;
  width: 100%;
  text-align: left;
  border: 0;
  margin: 0;
  padding: 0;
  outline: none;
`;
const ToggleArrow = styled(ToggleArrowRightIcon) `
  transform: ${(props) => (props.open ? 'rotate(90deg)' : '')};
`;
const Header = styled(Flex) `
  cursor: default;
`;
const IconBox = styled(Box) `
  & > div > svg {
    transform: rotate(0);
    transition: transform 100ms;
  }

  &[data-open] > div > svg {
    transform: rotate(90deg);
  }
`;
export function Details(props) {
    const { children, open: openProp, icon, title = 'Details', ...restProps } = props;
    const [open, setOpen] = useState(openProp || false);
    const handleToggle = useCallback(() => setOpen((v) => !v), []);
    useEffect(() => setOpen(openProp || false), [openProp]);
    return (React.createElement(Box, { ...restProps },
        React.createElement(HeaderButton, { type: "button", onClick: handleToggle },
            React.createElement(Header, { align: "center" },
                React.createElement(Inline, null,
                    React.createElement(IconBox, { "data-open": open ? '' : undefined },
                        React.createElement(Text, { size: 1 },
                            React.createElement(ToggleArrow, { open: open }))),
                    icon && React.createElement(Box, { marginLeft: 1 }, icon),
                    React.createElement(Box, { flex: 1, marginLeft: 1 },
                        React.createElement(Text, { size: 1, weight: "medium" }, title))))),
        React.createElement(Box, { hidden: !open, marginTop: 3 }, children)));
}
//# sourceMappingURL=Details.js.map