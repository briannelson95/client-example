import { Card, Code, Container, Flex, LayerProvider } from '@sanity/ui';
import { useBoolean, useNumber, useString } from '@sanity/ui-workshop';
import React, { useCallback, useMemo, useState } from 'react';
import { useCurrentUser } from '../../../../datastores';
const DEBUG = false;
const noop = () => undefined;
export default function ExampleStory() {
    const inputId = 'test';
    const validationErrors = useBoolean('Validation errors', false, 'Props');
    const title = useString('Title', 'Title', 'Props');
    const description = useString('Description', 'Description', 'Props');
    const isChanged = useBoolean('Changed', false, 'Props');
    const level = useNumber('Level', 0, 'Props');
    const [focused, setFocused] = useState(false);
    const user = useCurrentUser();
    const presence = useMemo(() => user
        ? [
            {
                user,
                path: ['title'],
                sessionId: 'foo',
                lastActiveAt: new Date().toUTCString(),
            },
        ]
        : [], [user]);
    const validation = useMemo(() => validationErrors
        ? [
            {
                level: 'error',
                item: {
                    message: 'Something is not right',
                    // children?: ValidationError[]
                    // operation?: 'AND' | 'OR'
                    paths: [],
                    cloneWithMessage: noop,
                },
                path: [],
            },
        ]
        : [], [validationErrors]);
    const handleBlur = useCallback(() => setFocused(false), []);
    const handleFocus = useCallback(() => setFocused(true), []);
    return (React.createElement(Flex, { align: "center", height: "fill", justify: "center", padding: 4, sizing: "border" },
        React.createElement(Container, { width: 1 },
            React.createElement(LayerProvider, null),
            DEBUG && (React.createElement(Card, { marginTop: 4, overflow: "auto", padding: 3, radius: 2, scheme: "dark" },
                React.createElement(Code, { language: "json", size: 1 }, JSON.stringify(user, null, 2)))))));
}
//# sourceMappingURL=example.js.map