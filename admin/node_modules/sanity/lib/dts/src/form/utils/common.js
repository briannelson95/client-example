import React, { useMemo } from 'react';
export function isThenable(value) {
    return typeof value?.then === 'function';
}
const warningMap = new Map();
export function isTrueIsh(checkProperty, checkPropertyName, { document, parent, value, currentUser }) {
    let result = false;
    if (typeof checkProperty === 'boolean' || !checkProperty) {
        return checkProperty;
    }
    try {
        result = checkProperty({
            document,
            parent,
            value,
            currentUser,
        });
    }
    catch (err) {
        console.error(`An error occurred while running the callback from \`${checkPropertyName}\`: ${err.message}`);
        return false;
    }
    if (isThenable(result) && !warningMap.has(checkPropertyName)) {
        warningMap.set(checkPropertyName, true);
        console.warn(`The \`${checkPropertyName}\` option is either a promise or a promise returning function. Async callbacks for \`${checkPropertyName}\` option is not currently supported.`);
        return false;
    }
    if (typeof result === 'undefined' && !warningMap.has(checkPropertyName)) {
        warningMap.set(checkPropertyName, true);
        console.warn(`The \`${checkPropertyName}\` option is either a promise or a promise returning function. Async callbacks for \`${checkPropertyName}\` option is not currently supported.`);
    }
    return result;
}
export function omitDeprecatedRole(user) {
    if (user?.role) {
        const { role, ...rest } = user;
        return rest;
    }
    return user;
}
export function useCheckCondition(checkProperty, checkPropertyName, context) {
    return useMemo(() => {
        return isTrueIsh(checkProperty, checkPropertyName, context);
    }, [checkProperty, checkPropertyName, context]);
}
export function mappedChildren({ children, childProps }) {
    if (!Array.isArray(children)) {
        children = [children];
    }
    return React.Children.map(children, function (child) {
        if (React.isValidElement(child)) {
            return React.cloneElement(child, childProps);
        }
        return child;
    });
}
//# sourceMappingURL=common.js.map