import { ConditionalProperty, ConditionalPropertyCallbackContext, CurrentUser } from '@sanity/types';
import React from 'react';
export declare function isThenable(value: any): boolean;
export declare function isTrueIsh(checkProperty: ConditionalProperty, checkPropertyName: string, { document, parent, value, currentUser }: ConditionalPropertyCallbackContext): boolean | undefined;
export declare function omitDeprecatedRole(user: CurrentUser): Omit<CurrentUser, 'role'>;
export declare function useCheckCondition(checkProperty: ConditionalProperty, checkPropertyName: string, context: ConditionalPropertyCallbackContext): boolean | undefined;
declare type ChildrenWithPropsProps = {
    children: React.ReactNode | React.ReactNode[];
    childProps: Record<string, unknown>;
};
export declare function mappedChildren({ children, childProps }: ChildrenWithPropsProps): {}[] | null | undefined;
export {};
//# sourceMappingURL=common.d.ts.map