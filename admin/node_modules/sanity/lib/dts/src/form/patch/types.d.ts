import { Path } from '@sanity/types';
/**
 * @alpha
 */
export declare type FormPatchJSONValue = number | string | boolean | {
    [key: string]: FormPatchJSONValue;
} | FormPatchJSONValue[];
/**
 * @alpha
 */
export declare type FormPatchOrigin = 'remote' | 'local' | 'internal';
/**
 * @alpha
 */
export declare type FormSetPatch = {
    path: Path;
    type: 'set';
    origin?: FormPatchOrigin;
    value: FormPatchJSONValue;
};
/**
 * @alpha
 */
export declare type FormIncPatch = {
    path: Path;
    type: 'inc';
    origin?: FormPatchOrigin;
    value: FormPatchJSONValue;
};
/**
 * @alpha
 */
export declare type FormDecPatch = {
    path: Path;
    type: 'dec';
    origin?: FormPatchOrigin;
    value: FormPatchJSONValue;
};
/**
 * @alpha
 */
export declare type FormSetIfMissingPatch = {
    path: Path;
    origin?: FormPatchOrigin;
    type: 'setIfMissing';
    value: FormPatchJSONValue;
};
/**
 * @alpha
 */
export declare type FormUnsetPatch = {
    path: Path;
    origin?: FormPatchOrigin;
    type: 'unset';
};
/**
 * @alpha
 */
export declare type FormInsertPatchPosition = 'before' | 'after';
/**
 * @alpha
 */
export declare type FormInsertPatch = {
    path: Path;
    origin?: FormPatchOrigin;
    type: 'insert';
    position: FormInsertPatchPosition;
    items: FormPatchJSONValue[];
};
/**
 * @alpha
 */
export declare type FormDiffMatchPatch = {
    path: Path;
    type: 'diffMatchPatch';
    origin?: FormPatchOrigin;
    value: string;
};
/**
 * @alpha
 */
export declare type FormPatch = FormSetPatch | FormSetIfMissingPatch | FormUnsetPatch | FormInsertPatch | FormDiffMatchPatch;
/**
 * @alpha
 */
export declare type PatchArg = FormPatch | FormPatch[];
//# sourceMappingURL=types.d.ts.map