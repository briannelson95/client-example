/* eslint-disable react/no-unused-prop-types */
import React, { createContext, useContext, useMemo } from 'react';
import { startsWith } from '@sanity/util/paths';
const ValidationContext = createContext([]);
export function ValidationProvider(props) {
    return (React.createElement(ValidationContext.Provider, { value: props.validation }, props.children));
}
export function useValidationMarkers() {
    const ctx = useContext(ValidationContext);
    if (!ctx) {
        throw new Error('Form context not provided');
    }
    return ctx;
}
export function useChildValidation(path) {
    const validation = useValidationMarkers();
    return useMemo(() => validation
        .filter((item) => startsWith(path, item.path))
        .map((marker) => ({
        message: marker.item.message,
        level: marker.level,
        path: marker.path,
    })), [path, validation]);
}
//# sourceMappingURL=Validation.js.map