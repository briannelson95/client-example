import React, { useCallback } from 'react';
import { Card, Text, Flex } from '@sanity/ui';
import { SanityPreview } from '../../../preview';
import { IntentLink } from '../../../router';
import { useSchema } from '../../../hooks';
export const DocumentList = ({ asset, assetType, referringDocuments, }) => {
    const count = referringDocuments.length;
    const hasResults = count > 0;
    const filenamePlaceholder = asset.originalFilename ? (React.createElement("strong", null, asset.originalFilename)) : (`this ${assetType}`);
    if (!hasResults) {
        return (React.createElement(Text, { size: [1, 1, 2, 2], as: "h2", weight: "regular" },
            "No documents are using ",
            filenamePlaceholder));
    }
    return (React.createElement(React.Fragment, null,
        React.createElement(Card, { borderBottom: true, marginTop: 2, paddingBottom: 2, marginBottom: 1 },
            React.createElement(Text, { as: "h2", size: [1, 1, 2, 2], weight: "regular", textOverflow: "ellipsis" },
                count,
                " ",
                count === 1 ? `document is` : `documents are`,
                " using ",
                filenamePlaceholder)),
        referringDocuments.map((document) => (React.createElement(DocumentLink, { key: document._id, document: document })))));
};
const DocumentLink = ({ document }) => {
    const schema = useSchema();
    const LinkComponent = useCallback((linkProps) => (React.createElement(IntentLink, { ...linkProps, params: { id: document._id, type: document._type }, intent: "edit" })), [document]);
    return (React.createElement(Card, { as: LinkComponent, paddingY: 2, paddingX: 1, radius: 2, key: document._id, "data-as": "a", tabIndex: 0 },
        React.createElement(Flex, { align: "center", gap: 2 },
            React.createElement(SanityPreview, { layout: "default", value: { _type: 'reference', _ref: document._id }, schemaType: schema.get(document._type) }))));
};
//# sourceMappingURL=DocumentList.js.map