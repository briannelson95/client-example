/* eslint-disable react/no-unused-prop-types */
import React, { useContext, createContext, useMemo } from 'react';
import { startsWith } from '@sanity/util/paths';
const PresenceContext = createContext([]);
export function PresenceProvider(props) {
    return (React.createElement(PresenceContext.Provider, { value: props.presence }, props.children));
}
export function useFormFieldPresence() {
    const ctx = useContext(PresenceContext);
    if (!ctx) {
        throw new Error('Form context not provided');
    }
    return ctx;
}
export function useChildPresence(path) {
    const presence = useFormFieldPresence();
    return useMemo(() => presence.filter((item) => startsWith(path, item.path)), [path, presence]);
}
//# sourceMappingURL=Presence.js.map