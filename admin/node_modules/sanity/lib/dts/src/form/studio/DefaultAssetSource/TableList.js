import React from 'react';
import { Box, Card, Flex, Grid, Label, Spinner, Stack, useMediaIndex } from '@sanity/ui';
import { AssetRow } from './AssetRow';
const STYLES_FILENAME = { paddingLeft: '2.2rem' };
const STYLES_GRID = { gridTemplateColumns: '3fr 1fr 1fr 2fr 30px' };
export function TableList(props) {
    const mediaIndex = useMediaIndex();
    const isMobile = mediaIndex < 2;
    const { assets, onClick, onKeyPress, onDeleteFinished, selectedAssets, isLoading } = props;
    return (React.createElement(Box, { padding: 4 },
        React.createElement(Card, { borderBottom: true, paddingBottom: 2, marginBottom: 1 }, isMobile ? (React.createElement(Grid, { style: STYLES_GRID },
            React.createElement(Box, { flex: 2, paddingLeft: 5 },
                React.createElement(Label, { muted: true, size: 1 }, "Filename")))) : (React.createElement(Grid, { gap: 1, style: STYLES_GRID },
            React.createElement(Box, { flex: 2, style: STYLES_FILENAME },
                React.createElement(Label, { muted: true, size: 1 }, "Filename")),
            React.createElement(Box, { flex: 1 },
                React.createElement(Label, { muted: true, size: 1 }, "Size")),
            React.createElement(Box, { flex: 1 },
                React.createElement(Label, { muted: true, size: 1 }, "Type")),
            React.createElement(Box, { flex: 1 },
                React.createElement(Label, { muted: true, size: 1 }, "Date added"))))),
        React.createElement(Stack, null,
            isLoading && assets.length === 0 && (React.createElement(Box, { paddingTop: 4, paddingBottom: 2 },
                React.createElement(Flex, { justify: "center" },
                    React.createElement(Spinner, { muted: true })))),
            assets.map((asset) => (React.createElement(AssetRow, { key: asset._id, asset: asset, isMobile: isMobile, isSelected: selectedAssets.some((selected) => selected._id === asset._id), onClick: onClick, onKeyPress: onKeyPress, onDeleteFinished: onDeleteFinished }))))));
}
//# sourceMappingURL=TableList.js.map