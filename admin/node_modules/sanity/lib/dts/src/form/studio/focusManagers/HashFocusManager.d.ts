import { Path } from '@sanity/types';
import React from 'react';
export declare type HashFocusManagerChildArgs = {
    onFocus: (path: Path) => void;
    onBlur: () => void;
    focusPath: Path;
};
export interface HashFocusManagerProps {
    focusPath: any | null;
    onFocus: () => void;
    onBlur: () => void;
    children: (arg0: HashFocusManagerChildArgs) => any;
}
export interface HashFocusManagerState {
    focusPath: Array<any>;
}
/**
 * An example of how to sync focus path through document.location.hash
 */
export declare class HashFocusManager extends React.Component<HashFocusManagerProps, HashFocusManagerState> {
    state: {
        focusPath: Path;
    };
    componentDidMount(): void;
    componentWillUnmount(): void;
    handleHashChange: () => void;
    handleFocus: (focusPath: Path) => void;
    handleBlur: () => void;
    render(): any;
}
//# sourceMappingURL=HashFocusManager.d.ts.map