/// <reference types="react" />
import { ObjectSchemaType, Path, ValidationMarker } from '@sanity/types';
import { FormFieldPresence } from '../../presence';
import { PatchChannel, PatchEvent } from '../patch';
import { ObjectFormNode } from '../store/types/nodes';
import { StateTree } from '../store';
/**
 * @alpha
 */
export interface StudioFormBuilderProps extends Omit<ObjectFormNode, 'level' | 'path' | 'presence' | 'validation'> {
    /**
     * @internal Considered internal â€“ do not use.
     */
    __internal_patchChannel: PatchChannel;
    autoFocus?: boolean;
    changesOpen?: boolean;
    collapsedFieldSets: StateTree<boolean> | undefined;
    collapsedPaths: StateTree<boolean> | undefined;
    focusPath: Path;
    focused: boolean | undefined;
    id: string;
    onChange: (changeEvent: PatchEvent) => void;
    onPathBlur: (path: Path) => void;
    onPathFocus: (path: Path) => void;
    onPathOpen: (path: Path) => void;
    onFieldGroupSelect: (path: Path, groupName: string) => void;
    onSetFieldSetCollapsed: (path: Path, collapsed: boolean) => void;
    onSetPathCollapsed: (path: Path, collapsed: boolean) => void;
    presence: FormFieldPresence[];
    readOnly?: boolean;
    schemaType: ObjectSchemaType;
    validation: ValidationMarker[];
    value: {
        [field in string]: unknown;
    } | undefined;
}
/**
 * @alpha
 */
export declare function StudioFormBuilder(props: StudioFormBuilderProps): JSX.Element;
//# sourceMappingURL=StudioFormBuilder.d.ts.map