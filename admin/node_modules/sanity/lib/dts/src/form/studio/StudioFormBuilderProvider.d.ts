import { ObjectSchemaType, Path, ValidationMarker } from '@sanity/types';
import React from 'react';
import { PatchChannel, PatchEvent } from '../patch';
import { ObjectMember, StateTree } from '../store';
import { FormFieldGroup } from '../types';
import { FormFieldPresence } from '../../presence';
/**
 * @alpha This API might change.
 */
export interface StudioFormBuilderProviderProps {
    /**
     * @internal Considered internal, do not use.
     */
    __internal_patchChannel: PatchChannel;
    autoFocus?: boolean;
    changesOpen?: boolean;
    children?: React.ReactNode;
    collapsedFieldSets: StateTree<boolean> | undefined;
    collapsedPaths: StateTree<boolean> | undefined;
    focusPath: Path;
    focused: boolean | undefined;
    groups: FormFieldGroup[];
    id: string;
    members: ObjectMember[];
    onChange: (changeEvent: PatchEvent) => void;
    onPathBlur: (path: Path) => void;
    onPathFocus: (path: Path) => void;
    onPathOpen: (path: Path) => void;
    onFieldGroupSelect: (path: Path, groupName: string) => void;
    onSetPathCollapsed: (path: Path, collapsed: boolean) => void;
    onSetFieldSetCollapsed: (path: Path, collapsed: boolean) => void;
    presence: FormFieldPresence[];
    readOnly?: boolean;
    schemaType: ObjectSchemaType;
    validation: ValidationMarker[];
    value: {
        [field in string]: unknown;
    } | undefined;
}
/**
 * Default wiring for `FormBuilderProvider` when used with Sanity
 *
 * @alpha This API might change.
 */
export declare function StudioFormBuilderProvider(props: StudioFormBuilderProviderProps): JSX.Element;
//# sourceMappingURL=StudioFormBuilderProvider.d.ts.map