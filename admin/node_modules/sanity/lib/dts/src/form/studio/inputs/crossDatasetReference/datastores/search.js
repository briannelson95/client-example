import { map } from 'rxjs/operators';
import { collate } from '../../../../../util';
import { createWeightedSearch } from '../../../../../search';
export function search(client, textTerm, type, options) {
    const searchWeighted = createWeightedSearch(type.to.map((crossDatasetType) => ({
        name: crossDatasetType.type,
        // eslint-disable-next-line camelcase
        __experimental_search: crossDatasetType.__experimental_search,
    })), client, options);
    return searchWeighted(textTerm, { includeDrafts: false }).pipe(
    // pick the 100 best matches
    map((results) => results.map((result) => result.hit)), map(collate), map((collated) => collated.map((entry) => ({
        id: entry.id,
        type: entry.type,
        published: entry.published,
    }))));
}
//# sourceMappingURL=search.js.map