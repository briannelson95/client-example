import { DocumentStore } from '../../datastores';
import { DocumentVersionEvent } from '../../datastores/document/document-pair/checkoutPair';
import { IdPair } from '../../datastores/document/types';
import { FormPatch } from '../patch';
export declare function checkoutPair(documentStore: DocumentStore, idPair: IdPair): {
    draft: {
        events: import("rxjs").Observable<DocumentVersionEvent | null>;
        patch(patches: FormPatch[]): void;
        consistency$: import("rxjs").Observable<boolean>;
        remoteSnapshot$: import("rxjs").Observable<import("../../datastores").RemoteSnapshotVersionEvent>;
        create: (document: Partial<import("@sanity/types").SanityDocument>) => import("../../datastores").MutationPayload;
        createIfNotExists: (document: import("@sanity/types").SanityDocument) => import("../../datastores").MutationPayload;
        createOrReplace: (document: import("@sanity/types").SanityDocument) => import("../../datastores").MutationPayload;
        delete: () => import("../../datastores").MutationPayload;
        mutate: (mutations: import("../../datastores").MutationPayload[]) => void;
        commit: () => import("rxjs").Observable<never>;
    };
    published: {
        events: import("rxjs").Observable<DocumentVersionEvent | null>;
        patch(patches: FormPatch[]): void;
        consistency$: import("rxjs").Observable<boolean>;
        remoteSnapshot$: import("rxjs").Observable<import("../../datastores").RemoteSnapshotVersionEvent>;
        create: (document: Partial<import("@sanity/types").SanityDocument>) => import("../../datastores").MutationPayload;
        createIfNotExists: (document: import("@sanity/types").SanityDocument) => import("../../datastores").MutationPayload;
        createOrReplace: (document: import("@sanity/types").SanityDocument) => import("../../datastores").MutationPayload;
        delete: () => import("../../datastores").MutationPayload;
        mutate: (mutations: import("../../datastores").MutationPayload[]) => void;
        commit: () => import("rxjs").Observable<never>;
    };
};
//# sourceMappingURL=formBuilderValueStore.d.ts.map