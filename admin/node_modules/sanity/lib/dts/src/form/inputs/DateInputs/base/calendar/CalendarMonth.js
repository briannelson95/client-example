import { Box, Grid, Text } from '@sanity/ui';
import { isSameDay, isSameMonth } from 'date-fns';
import React from 'react';
import { CalendarDay } from './CalendarDay';
import { WEEK_DAY_NAMES } from './constants';
import { getWeeksOfMonth } from './utils';
export function CalendarMonth(props) {
    return (React.createElement(Box, { "aria-hidden": props.hidden || false, "data-ui": "CalendarMonth" },
        React.createElement(Grid, { gap: 1, style: { gridTemplateColumns: 'repeat(7, minmax(44px, 46px))' } },
            WEEK_DAY_NAMES.map((weekday) => (React.createElement(Box, { key: weekday, paddingY: 2 },
                React.createElement(Text, { size: 1, weight: "medium", style: { textAlign: 'center' } }, weekday)))),
            getWeeksOfMonth(props.date).map((week, weekIdx) => week.days.map((date, dayIdx) => {
                const focused = props.focused && isSameDay(date, props.focused);
                const selected = props.selected && isSameDay(date, props.selected);
                const isToday = isSameDay(date, new Date());
                const isCurrentMonth = props.focused && isSameMonth(date, props.focused);
                return (React.createElement(CalendarDay, { date: date, focused: focused, isCurrentMonth: isCurrentMonth, isToday: isToday, 
                    // eslint-disable-next-line react/no-array-index-key
                    key: `${weekIdx}-${dayIdx}`, onSelect: props.onSelect, selected: selected }));
            })))));
}
//# sourceMappingURL=CalendarMonth.js.map