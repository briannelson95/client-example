import React from 'react';
import { Box, Text, Inline } from '@sanity/ui';
import { AccessDeniedIcon, UploadIcon } from '@sanity/icons';
export function DropMessage(props) {
    const { hoveringFiles, types, resolveUploader } = props;
    const acceptedFiles = hoveringFiles.filter((file) => types.some((type) => resolveUploader(type, file)));
    const rejectedFilesCount = hoveringFiles.length - acceptedFiles.length;
    const multiple = types.length > 1;
    return (React.createElement(React.Fragment, null, acceptedFiles.length > 0 ? (React.createElement(React.Fragment, null,
        React.createElement(Inline, { space: 2 },
            React.createElement(Text, null,
                React.createElement(UploadIcon, null)),
            React.createElement(Text, null,
                "Drop to upload",
                ' ',
                multiple && (React.createElement(React.Fragment, null,
                    acceptedFiles.length,
                    " file",
                    acceptedFiles.length > 1 ? 's' : '')))),
        rejectedFilesCount > 0 && (React.createElement(Box, { marginTop: 4 },
            React.createElement(Inline, { space: 2 },
                React.createElement(Text, { muted: true, size: 1 },
                    React.createElement(AccessDeniedIcon, null)),
                React.createElement(Text, { muted: true, size: 1 },
                    rejectedFilesCount,
                    " file",
                    rejectedFilesCount > 1 ? 's' : '',
                    " can't be uploaded here")))))) : (React.createElement(Inline, { space: 2 },
        React.createElement(Text, null,
            React.createElement(AccessDeniedIcon, null)),
        React.createElement(Text, null,
            "Can't upload ",
            hoveringFiles.length > 1 ? 'any of these files' : 'this file',
            " here")))));
}
//# sourceMappingURL=DropMessage.js.map