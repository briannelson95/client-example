import React from 'react';
import { TextArea } from '@sanity/ui';
import styled from 'styled-components';
import { set, unset } from '../patch';
import { ChangeIndicator } from '../../components/changeIndicators';
const StyledTextArea = styled(TextArea) `
  &[data-as='textarea'] {
    resize: vertical;
  }
`;
export const TextInput = React.forwardRef(function TextInput(props, forwardedRef) {
    const { changed, focused, id, onBlur, onChange, onFocus, path, readOnly, schemaType, validationError, value, } = props;
    const handleChange = React.useCallback((event) => {
        const inputValue = event.currentTarget.value;
        onChange(inputValue ? set(inputValue) : unset());
    }, [onChange]);
    return (React.createElement(ChangeIndicator, { path: path, isChanged: changed, hasFocus: !!focused },
        React.createElement(StyledTextArea, { id: id, customValidity: validationError, value: value || '', readOnly: Boolean(readOnly), placeholder: schemaType.placeholder, onChange: handleChange, onFocus: onFocus, onBlur: onBlur, rows: typeof schemaType.rows === 'number' ? schemaType.rows : 10, ref: forwardedRef })));
});
//# sourceMappingURL=TextInput.js.map