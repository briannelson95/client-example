import { Box, Card, Code, Flex, Popover, Stack, Text, useClickOutside } from '@sanity/ui';
import React, { useCallback } from 'react';
import { BulbOutlineIcon, UnknownIcon } from '@sanity/icons';
import { resolveTypeName } from '@sanity/util/content';
import styled from 'styled-components';
const PopoverCard = styled(Card) `
  max-width: ${({ theme }) => theme.sanity.container[1]}px;
`;
export function ItemWithMissingType(props) {
    const { value, onFocus, vertical, ...rest } = props;
    const [showDetails, setShowDetails] = React.useState(false);
    const [popoverRef, setPopoverRef] = React.useState(null);
    useClickOutside(() => setShowDetails(false), [popoverRef]);
    const handleKeyDown = React.useCallback((e) => {
        if (e.key === 'Escape' || e.key === 'Tab') {
            setShowDetails(false);
        }
    }, []);
    const handleShowDetails = useCallback(() => {
        setShowDetails((v) => !v);
    }, []);
    const typeName = resolveTypeName(value);
    return (React.createElement(Popover, { open: showDetails, ref: setPopoverRef, onKeyDown: handleKeyDown, portal: true, constrainSize: true, tone: "default", content: React.createElement(PopoverCard, { margin: 1, padding: 3, onKeyDown: handleKeyDown, tabIndex: 0, overflow: "auto" },
            React.createElement(Stack, { space: 4 },
                React.createElement(Box, null,
                    React.createElement(Text, { weight: "semibold" }, "Why is this happening?")),
                React.createElement(Text, { size: 1 },
                    "The current schema does not declare items of type ",
                    React.createElement("code", null, typeName),
                    " as valid for this list. This could mean that the type has been removed as a valid item type, or that someone else has added it to their own local schema that is not yet deployed."),
                React.createElement(Box, null,
                    React.createElement(Text, { size: 1 },
                        React.createElement(BulbOutlineIcon, null),
                        " You can still move or delete this item, but it cannot be edited since the schema definition for its type is nowhere to be found.")),
                React.createElement(Stack, { space: 2 },
                    React.createElement(Text, { size: 1, weight: "semibold" }, "JSON representation of this item:"),
                    React.createElement(Card, { padding: 2, overflow: "auto", border: true },
                        React.createElement(Code, { size: 1, as: "pre" }, JSON.stringify(value, null, 2)))))) },
        React.createElement(Card, { as: "button", type: "button", radius: 2, tone: "inherit", padding: 2, onFocus: onFocus, onClick: handleShowDetails, onKeyDown: handleKeyDown, ...rest },
            vertical && (React.createElement(Stack, { space: 4 },
                React.createElement(Text, { align: "center" },
                    React.createElement(UnknownIcon, null)),
                React.createElement(Text, { size: 1, align: "center" },
                    "Item type ",
                    React.createElement("code", null, typeName),
                    " not defined for this list"))),
            !vertical && (React.createElement(Flex, { align: "center" },
                React.createElement(Box, { marginRight: 3 },
                    React.createElement(Text, null,
                        React.createElement(UnknownIcon, null))),
                React.createElement(Box, { flex: 1 },
                    React.createElement(Text, { size: 1, textOverflow: "ellipsis" },
                        "Item type ",
                        React.createElement("code", null, typeName),
                        " not defined for this list")))))));
}
//# sourceMappingURL=ItemWithMissingType.js.map