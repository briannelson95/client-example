/// <reference types="react" />
import type { PortableTextBlock } from '@sanity/portable-text-editor';
import type { Path } from '@sanity/types';
/**
 * @alpha
 */
export declare type ObjectEditData = {
    editorPath: Path;
    formBuilderPath: Path;
    kind: 'annotation' | 'blockObject' | 'inlineObject';
    editorHTMLElementRef?: React.MutableRefObject<HTMLElement | null>;
};
/**
 * @alpha
 */
export interface RenderBlockActionsProps {
    block: PortableTextBlock;
    value: PortableTextBlock[] | undefined;
    set: (block: PortableTextBlock) => void;
    unset: () => void;
    insert: (block: PortableTextBlock | PortableTextBlock[]) => void;
}
/**
 * @alpha
 */
export declare type RenderBlockActionsCallback = (props: RenderBlockActionsProps) => React.ReactNode;
//# sourceMappingURL=types.d.ts.map