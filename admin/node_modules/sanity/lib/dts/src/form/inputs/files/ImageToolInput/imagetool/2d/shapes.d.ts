import type { Crop } from '../types';
export declare class Size {
    height: number;
    width: number;
    constructor(height: number, width: number);
}
export declare class Point {
    x: number;
    y: number;
    constructor(x: number, y: number);
}
declare class HLine {
    y: number;
    _left: number;
    _right: number;
    constructor(y: number, left: number, right: number);
    get right(): Point;
    get left(): Point;
    get length(): number;
}
declare class Corners {
    rect: Rect;
    constructor(rect: Rect);
    get top(): HLine;
    get bottom(): HLine;
}
export declare class Rect {
    left: number;
    top: number;
    width: number;
    height: number;
    static fromEdges({ left, right, top, bottom }: Crop): Rect;
    constructor(left?: number, top?: number, width?: number, height?: number);
    setTopLeft(left: number | undefined, top: number | undefined): Rect;
    setSize(width: number | undefined, height: number | undefined): Rect;
    setCenter(x: number, y: number): Rect;
    get center(): Point;
    get corners(): Corners;
    get right(): number;
    get bottom(): number;
    multiply(rect: Rect): Rect;
    grow(delta: number): Rect;
    shrink(delta: number): Rect;
    cropRelative(crop: Rect): Rect;
    clamp(bounds: Rect): Rect;
}
export {};
//# sourceMappingURL=shapes.d.ts.map