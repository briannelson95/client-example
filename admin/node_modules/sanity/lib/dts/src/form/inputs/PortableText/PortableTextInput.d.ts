import { ArraySchemaType, ObjectSchemaType } from '@sanity/types';
import { OnCopyFn, OnPasteFn, PortableTextBlock, HotkeyOptions } from '@sanity/portable-text-editor';
import React from 'react';
import { ArrayOfObjectsItemMember, ObjectFormNode } from '../../store';
import type { ArrayOfObjectsInputProps, PortableTextMarker, RenderCustomMarkers } from '../../types';
import { PortableTextEditorElement } from './Compositor';
import { RenderBlockActionsCallback } from './types';
export declare type PTObjectMember = ArrayOfObjectsItemMember<ObjectFormNode<{
    [x: string]: unknown;
}, ObjectSchemaType>>;
export interface PortableTextMemberItem {
    kind: 'annotation' | 'textBlock' | 'objectBlock' | 'inlineObject';
    key: string;
    member: PTObjectMember;
    node: ObjectFormNode;
    elementRef?: React.MutableRefObject<PortableTextEditorElement> | undefined;
}
/**
 * @alpha
 */
export interface PortableTextInputProps extends ArrayOfObjectsInputProps<PortableTextBlock, ArraySchemaType> {
    hotkeys?: HotkeyOptions;
    markers?: PortableTextMarker[];
    onCopy?: OnCopyFn;
    onPaste?: OnPasteFn;
    renderBlockActions?: RenderBlockActionsCallback;
    renderCustomMarkers?: RenderCustomMarkers;
}
/**
 * The root Portable Text Input component
 *
 * @alpha
 */
export declare function PortableTextInput(props: PortableTextInputProps): JSX.Element;
//# sourceMappingURL=PortableTextInput.d.ts.map