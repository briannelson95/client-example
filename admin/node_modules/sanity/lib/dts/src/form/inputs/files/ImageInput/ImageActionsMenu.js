import React, { useCallback, useState } from 'react';
import { EllipsisVerticalIcon, CropIcon } from '@sanity/icons';
import { Menu, Popover, useClickOutside, useGlobalKeyDown } from '@sanity/ui';
import { MenuActionsWrapper, ButtonContainer } from './ImageActionsMenu.styled';
export function ImageActionsMenu(props) {
    const { onEdit, children, showEdit, isMenuOpen, onMenuOpen } = props;
    const [menuElement, setMenuRef] = useState(null);
    const [menuButtonRef, setMenuButtonRef] = useState(null);
    const handleClick = React.useCallback(() => onMenuOpen(true), [onMenuOpen]);
    const handleClickOutside = useCallback(() => {
        onMenuOpen(false);
    }, [onMenuOpen]);
    const handleGlobalKeyDown = useCallback((e) => {
        if (e.key === 'Escape') {
            onMenuOpen(false);
            menuButtonRef?.focus();
        }
    }, [menuButtonRef, onMenuOpen]);
    useClickOutside(handleClickOutside, [menuElement]);
    useGlobalKeyDown(handleGlobalKeyDown);
    return (React.createElement(MenuActionsWrapper, { "data-buttons": true, space: 1, padding: 2 },
        showEdit && (React.createElement(ButtonContainer, { icon: CropIcon, mode: "ghost", onClick: onEdit, "data-testid": "options-menu-edit-details" })),
        React.createElement(Popover, { content: React.createElement(Menu, { ref: setMenuRef, shouldFocus: "first" }, children), portal: true, constrainSize: true, open: isMenuOpen },
            React.createElement(ButtonContainer, { icon: EllipsisVerticalIcon, mode: "ghost", "data-testid": "options-menu-button", onClick: handleClick, ref: setMenuButtonRef }))));
}
//# sourceMappingURL=ImageActionsMenu.js.map