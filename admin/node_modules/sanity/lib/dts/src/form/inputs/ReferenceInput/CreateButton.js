/* eslint-disable complexity */
/* eslint-disable max-nested-callbacks,no-nested-ternary */
import React from 'react';
import { AddIcon } from '@sanity/icons';
import { Box, Button, Menu, MenuButton, MenuItem, Tooltip } from '@sanity/ui';
import { InsufficientPermissionsMessage } from '../../../components/InsufficientPermissionsMessage';
function ConditionalTooltip(props) {
    const { enabled, ...rest } = props;
    return enabled ? React.createElement(Tooltip, { ...rest }) : React.createElement(React.Fragment, null, props.children);
}
const INLINE_BLOCK_STYLE = { display: 'inline-flex' };
const FULL_WIDTH = { width: '100%' };
export function CreateButton(props) {
    const { createOptions, onCreate, id, ...rest } = props;
    const canCreateAny = createOptions.some((option) => option.permission.granted);
    if (!canCreateAny) {
        return (React.createElement(Tooltip, { content: React.createElement(Box, { padding: 2 },
                React.createElement(InsufficientPermissionsMessage, { operationLabel: "create a new reference" })) },
            React.createElement("div", { style: INLINE_BLOCK_STYLE },
                React.createElement(Button, { text: "Create new", mode: "ghost", disabled: true, icon: AddIcon, style: FULL_WIDTH }))));
    }
    return createOptions.length > 1 ? (React.createElement(MenuButton, { button: React.createElement(Button, { ...rest, text: "Create new\u2026", mode: "ghost", icon: AddIcon }), id: id, menu: React.createElement(Menu, { ref: props.menuRef }, createOptions.map((createOption) => (React.createElement(ConditionalTooltip, { enabled: !createOption.permission.granted, key: createOption.id, content: React.createElement(Box, { padding: 2 },
                React.createElement(InsufficientPermissionsMessage, { operationLabel: "create this type of document" })), portal: true },
            React.createElement("div", null,
                React.createElement(MenuItem, { disabled: !createOption.permission.granted, icon: createOption.icon, text: createOption.title, onClick: () => onCreate(createOption) })))))), placement: "right", popover: { portal: true, tone: 'default', constrainSize: true } })) : (React.createElement(Button, { ...rest, text: "Create new", mode: "ghost", disabled: !createOptions[0].permission.granted, onClick: () => onCreate(createOptions[0]), icon: AddIcon }));
}
//# sourceMappingURL=CreateButton.js.map