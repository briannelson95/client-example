import { AssetFromSource, FileSchemaType } from '@sanity/types';
import { FormPatch, PatchEvent } from '../../../patch';
import { Uploader, UploaderResolver, UploadOptions } from '../../../studio/uploads/types';
declare type DOMFile = globalThis.File;
interface Props {
    assetFromSource: AssetFromSource[];
    onChange: (patch: FormPatch | FormPatch[] | PatchEvent) => void;
    type: FileSchemaType;
    resolveUploader: UploaderResolver;
    uploadWith: (uploader: Uploader, file: DOMFile, assetDocumentProps?: UploadOptions) => void;
    isImage?: boolean;
}
export declare function handleSelectAssetFromSource({ assetFromSource, onChange, type, resolveUploader, uploadWith, isImage, }: Props): void;
export {};
//# sourceMappingURL=assetSource.d.ts.map