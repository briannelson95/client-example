import { Card, Container, Flex } from '@sanity/ui';
import { useAction } from '@sanity/ui-workshop';
import React, { useMemo, useState } from 'react';
import { useSchema } from '../../../../hooks';
import { ReviewChangesContextProvider } from '../../../studio/contexts/reviewChanges/ReviewChangesProvider';
import { createPatchChannel } from '../../../patch/PatchChannel';
export default function ReferenceInputStory() {
    const schema = useSchema();
    const documentType = schema.get('referenceTest');
    const schemaType = documentType.fields?.find((f) => f.name === 'selfRef');
    const patchChannel = useMemo(() => createPatchChannel(), []);
    const [value] = useState(undefined);
    const [focusPath] = useState([]);
    const onBlur = useAction('onBlur');
    const onChange = useAction('onChange');
    const onFocus = useAction('onFocus');
    const path = useMemo(() => ['selfRef'], []);
    return (React.createElement(Card, { height: "fill" },
        React.createElement(Flex, { align: "center", height: "fill", justify: "center", padding: 4, sizing: "border" },
            React.createElement(Container, { width: 0 },
                React.createElement(ReviewChangesContextProvider, { changesOpen: false }, "TODO")))));
}
//# sourceMappingURL=ReferenceInputStory.js.map