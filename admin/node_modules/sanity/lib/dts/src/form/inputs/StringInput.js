import React from 'react';
import { TextInput } from '@sanity/ui';
import { set, unset } from '../patch';
import { ChangeIndicator } from '../../components/changeIndicators';
export function StringInput(props) {
    const { value, readOnly, id, path, focused, focusRef, schemaType, validationError, onFocus, onBlur, onChange, changed, } = props;
    const placeholder = schemaType.placeholder;
    const handleChange = React.useCallback((event) => {
        const inputValue = event.currentTarget.value;
        onChange(inputValue ? set(inputValue) : unset());
    }, [onChange]);
    return (React.createElement(ChangeIndicator, { path: path, isChanged: changed, hasFocus: !!focused },
        React.createElement(TextInput, { id: id, customValidity: validationError, value: value || '', readOnly: Boolean(readOnly), placeholder: placeholder, onChange: handleChange, onFocus: onFocus, onBlur: onBlur, ref: focusRef })));
}
//# sourceMappingURL=StringInput.js.map