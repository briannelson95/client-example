/* eslint-disable import/no-unresolved */
import React, { useCallback } from 'react';
import styled from 'styled-components';
import { Box, Card, Checkbox, Flex, Switch } from '@sanity/ui';
import { set } from '../patch';
import { ChangeIndicator } from '../../components/changeIndicators';
import { FormFieldHeaderText } from '../components/formField/FormFieldHeaderText';
import { FormFieldStatus } from '../components/formField/FormFieldStatus';
const CenterAlignedBox = styled(Box) `
  align-self: center;
`;
const ZeroLineHeightBox = styled(Box) `
  line-height: 0;
`;
export const BooleanInput = React.forwardRef(function BooleanInput(props, ref) {
    const { id, value, schemaType, readOnly, onBlur, onFocus, onChange, path, focused, changed } = props;
    const layout = schemaType.options?.layout || 'switch';
    const handleChange = useCallback((event) => {
        onChange(set(event.currentTarget.checked));
    }, [onChange]);
    const indeterminate = typeof value !== 'boolean';
    const checked = value || false;
    const LayoutSpecificInput = layout === 'checkbox' ? Checkbox : Switch;
    return (React.createElement(ChangeIndicator, { path: path, isChanged: changed, hasFocus: !!focused },
        React.createElement(Card, { border: true, radius: 1 },
            React.createElement(Flex, null,
                React.createElement(ZeroLineHeightBox, { padding: 3 },
                    React.createElement(LayoutSpecificInput, { id: id, ref: ref, label: schemaType.title, readOnly: Boolean(readOnly), onBlur: onBlur, onChange: handleChange, onFocus: onFocus, indeterminate: indeterminate, checked: checked, style: { margin: -4 }, disabled: readOnly })),
                React.createElement(Box, { flex: 1, paddingY: 3 },
                    React.createElement(FormFieldHeaderText, { description: schemaType.description, inputId: id, 
                        // validation={validation}
                        title: schemaType.title })),
                React.createElement(CenterAlignedBox, { paddingX: 3, paddingY: 1 },
                    React.createElement(FormFieldStatus, { maxAvatars: 1, position: "top" }))))));
});
//# sourceMappingURL=BooleanInput.js.map