import type { CSSProperties } from 'react';
import { Crop, Hotspot, CropMethod } from './types';
interface Options {
    image?: {
        aspectRatio: number;
    } | {
        height: number;
        width: number;
    };
    container?: {
        aspectRatio: number;
    } | {
        height: number;
        width: number;
    };
    hotspot?: Hotspot;
    crop?: Crop;
    align?: CropAlignment;
}
interface CSSBox {
    width: number;
    height: number;
    left: number;
    top: number;
}
interface CropAlignment {
    x: 'left' | 'right' | 'center';
    y: 'top' | 'bottom' | 'center';
}
interface HotspotCropStyleResult {
    crop: CSSBox;
    image: CSSBox;
    method: CropMethod;
}
export interface CalculatedStyles {
    container: CSSProperties;
    padding: CSSProperties;
    crop: CSSProperties;
    image: CSSProperties;
    debug: {
        result: HotspotCropStyleResult;
    };
}
export declare function calculateStyles(options?: Options): CalculatedStyles;
export {};
//# sourceMappingURL=calculateStyles.d.ts.map