import { defaultRenderInput } from '../../form/studio/defaults';
function _collectMiddleware(middlewares, plugins) {
    for (const plugin of plugins) {
        // Recursive
        if (plugin.plugins) {
            _collectMiddleware(middlewares, plugin.plugins);
        }
        if (plugin.form?.renderInput) {
            middlewares.push(plugin.form?.renderInput);
        }
    }
}
/**
 * @internal
 */
export function _createRenderInput(config) {
    return (props) => {
        const middlewares = [];
        if (config.plugins) {
            _collectMiddleware(middlewares, config.plugins);
        }
        if (config.form?.renderInput) {
            middlewares.push(config.form?.renderInput);
        }
        // Initialize the callback chain
        let next = defaultRenderInput;
        for (const middleware of middlewares) {
            const defaultRender = next;
            next = (inputProps) => {
                return middleware(inputProps, defaultRender) || defaultRender(inputProps);
            };
        }
        return next(props);
    };
}
//# sourceMappingURL=_renderInput.js.map