import { Schema, AssetSource } from '@sanity/types';
import type { Template, TemplateResponse } from '../templates';
import { DocumentActionComponent } from '../desk/actions';
import { DocumentBadgeComponent } from '../desk/badges';
import type { AsyncConfigPropertyReducer, ConfigContext, ConfigPropertyReducer, DocumentActionsContext, DocumentBadgesContext, NewDocumentOptionsContext, ResolveProductionUrlContext, Tool, _DocumentLanguageFilterComponent, _DocumentLanguageFilterContext } from './types';
export declare const initialDocumentBadges: DocumentBadgeComponent[];
export declare const initialDocumentActions: DocumentActionComponent[];
export declare const initialLanguageFilter: _DocumentLanguageFilterComponent[];
export declare const schemaTypesReducer: ConfigPropertyReducer<Schema.TypeDefinition[], Omit<ConfigContext, 'schema' | 'currentUser' | 'client'>>;
export declare const resolveProductionUrlReducer: AsyncConfigPropertyReducer<string | undefined, ResolveProductionUrlContext>;
export declare const toolsReducer: ConfigPropertyReducer<Tool[], ConfigContext>;
export declare const schemaTemplatesReducer: ConfigPropertyReducer<Template[], ConfigContext>;
export declare const documentBadgesReducer: ConfigPropertyReducer<DocumentBadgeComponent[], DocumentBadgesContext>;
export declare const documentActionsReducer: ConfigPropertyReducer<DocumentActionComponent[], DocumentActionsContext>;
export declare const newDocumentOptionsResolver: ConfigPropertyReducer<TemplateResponse[], NewDocumentOptionsContext>;
export declare const fileAssetSourceResolver: ConfigPropertyReducer<AssetSource[], ConfigContext>;
export declare const imageAssetSourceResolver: ConfigPropertyReducer<AssetSource[], ConfigContext>;
/**
 * @internal
 */
export declare const _documentLanguageFilterReducer: ConfigPropertyReducer<_DocumentLanguageFilterComponent[], _DocumentLanguageFilterContext>;
//# sourceMappingURL=configPropertyReducers.d.ts.map