import { PluginOptions, ConfigPropertyReducer, AsyncConfigPropertyReducer } from './types';
interface ResolveConfigPropertyOptions<TValue, TContext> {
    propertyName: string;
    config: PluginOptions;
    context: TContext;
    initialValue: TValue;
    reducer: ConfigPropertyReducer<TValue, TContext>;
}
interface AsyncResolveConfigPropertyOptions<TValue, TContext> {
    propertyName: string;
    config: PluginOptions;
    context: TContext;
    initialValue: TValue;
    asyncReducer: AsyncConfigPropertyReducer<TValue, TContext>;
}
export declare function resolveConfigProperty<TValue, TContext>(options: ResolveConfigPropertyOptions<TValue, TContext>): TValue;
export declare function resolveConfigProperty<TValue, TContext>(options: AsyncResolveConfigPropertyOptions<TValue, TContext>): Promise<TValue>;
export {};
//# sourceMappingURL=resolveConfigProperty.d.ts.map