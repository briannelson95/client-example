import React, { useMemo } from 'react';
import styled from 'styled-components';
import { Box, Flex } from '@sanity/ui';
import { useDocumentPane } from '../useDocumentPane';
import { DocumentStatusBarActions, HistoryStatusBarActions } from './DocumentStatusBarActions';
import { DocumentSparkline } from './sparkline/DocumentSparkline';
const DocumentActionsBox = styled(Box) `
  min-width: 10em;
  max-width: 16em;
`;
export function DocumentStatusBar(props) {
    const { actionsBoxRef } = props;
    const { badges, historyController } = useDocumentPane();
    const showingRevision = historyController.onOlderRevision();
    return useMemo(() => (React.createElement(Box, { paddingLeft: 2, paddingRight: [2, 3], paddingY: 2 },
        React.createElement(Flex, { align: "center" },
            React.createElement(Box, { flex: [1, 2] }, badges && React.createElement(DocumentSparkline, null)),
            React.createElement(DocumentActionsBox, { flex: 1, marginLeft: [1, 3], ref: actionsBoxRef }, showingRevision ? React.createElement(HistoryStatusBarActions, null) : React.createElement(DocumentStatusBarActions, null))))), [actionsBoxRef, badges, showingRevision]);
}
//# sourceMappingURL=DocumentStatusBar.js.map