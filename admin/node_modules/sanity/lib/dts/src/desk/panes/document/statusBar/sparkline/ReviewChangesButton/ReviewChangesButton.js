import React, { useMemo } from 'react';
import { Box, Button, Flex, Stack, Text, Tooltip } from '@sanity/ui';
import { useTimeAgo } from '../../../../../../hooks';
import { AnimatedStatusIcon } from './AnimatedStatusIcon';
const ReviewButton = React.forwardRef(function ReviewButton(props, ref) {
    const { collapsed, status, lastUpdated, ...rest } = props;
    const lastUpdatedTime = useTimeAgo(lastUpdated || '', { minimal: true });
    const lastUpdatedTimeAgo = useTimeAgo(lastUpdated || '', { minimal: true, agoSuffix: true });
    const buttonProps = useMemo(() => {
        if (status === 'syncing') {
            return {
                text: 'Saving...',
                tone: undefined,
            };
        }
        if (status === 'changes') {
            return {
                text: lastUpdatedTime,
                tone: 'caution',
            };
        }
        if (status === 'saved') {
            return {
                text: 'Saved!',
                tone: 'positive',
            };
        }
        return {};
    }, [status, lastUpdatedTime]);
    if (!status) {
        return null;
    }
    return (React.createElement(Tooltip, { portal: true, disabled: status !== 'changes', content: React.createElement(Stack, { padding: 3, space: 3 },
            React.createElement(Text, { size: 1, weight: "semibold" }, "Review changes"),
            React.createElement(Text, { size: 1, muted: true },
                "Changes saved ",
                lastUpdatedTimeAgo)) },
        React.createElement(Button, { mode: "bleed", justify: "flex-start", tone: buttonProps?.tone, ...rest, "data-testid": "review-changes-button", ref: ref },
            React.createElement(Flex, { align: "center" },
                React.createElement(Box, { marginRight: collapsed ? 0 : 3 },
                    React.createElement(Text, null,
                        React.createElement(AnimatedStatusIcon, { status: status }))),
                !collapsed && (React.createElement(Text, { size: 1, weight: "medium" }, buttonProps?.text))))));
});
export const ReviewChangesButton = React.memo(ReviewButton);
//# sourceMappingURL=ReviewChangesButton.js.map