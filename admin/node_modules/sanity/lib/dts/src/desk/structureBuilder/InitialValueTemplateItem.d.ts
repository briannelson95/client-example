import { InitialValueTemplateItem } from '../../templates';
import { Serializable, SerializeOptions, SerializePath } from './StructureNodes';
import { MenuItem } from './MenuItem';
import { StructureContext } from './types';
export declare class InitialValueTemplateItemBuilder implements Serializable<InitialValueTemplateItem> {
    protected _context: StructureContext;
    protected spec: Partial<InitialValueTemplateItem>;
    constructor(_context: StructureContext, spec?: Partial<InitialValueTemplateItem>);
    id(id: string): InitialValueTemplateItemBuilder;
    getId(): Partial<InitialValueTemplateItem>['id'];
    title(title: string): InitialValueTemplateItemBuilder;
    getTitle(): Partial<InitialValueTemplateItem>['title'];
    description(description: string): InitialValueTemplateItemBuilder;
    getDescription(): Partial<InitialValueTemplateItem>['description'];
    templateId(templateId: string): InitialValueTemplateItemBuilder;
    getTemplateId(): Partial<InitialValueTemplateItem>['templateId'];
    parameters(parameters: {
        [key: string]: any;
    }): InitialValueTemplateItemBuilder;
    getParameters(): Partial<InitialValueTemplateItem>['parameters'];
    serialize({ path, index, hint }?: SerializeOptions): InitialValueTemplateItem;
    clone(withSpec?: Partial<InitialValueTemplateItem>): InitialValueTemplateItemBuilder;
}
export declare function defaultInitialValueTemplateItems(context: StructureContext): InitialValueTemplateItemBuilder[];
export declare function maybeSerializeInitialValueTemplateItem(item: InitialValueTemplateItem | InitialValueTemplateItemBuilder, index: number, path: SerializePath): InitialValueTemplateItem;
export declare function menuItemsFromInitialValueTemplateItems(context: StructureContext, templateItems: InitialValueTemplateItem[]): MenuItem[];
//# sourceMappingURL=InitialValueTemplateItem.d.ts.map