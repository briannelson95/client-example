import { getTypeNamesFromFilter } from './DocumentList';
export const DEFAULT_INTENT_HANDLER = Symbol('Document type list canHandleIntent');
export const defaultIntentChecker = (intentName, params, { pane }) => {
    const isEdit = intentName === 'edit';
    const isCreate = intentName === 'create';
    const typedSpec = pane;
    const paneFilter = typedSpec.options?.filter || '';
    const paneParams = typedSpec.options?.params || {};
    const typeNames = typedSpec.schemaTypeName
        ? [typedSpec.schemaTypeName]
        : getTypeNamesFromFilter(paneFilter, paneParams);
    const initialValueTemplates = typedSpec.initialValueTemplates || [];
    if (isCreate && params.template) {
        return initialValueTemplates.some((tpl) => tpl.templateId === params.template);
    }
    return ((isEdit && params.id && typeNames.includes(params.type)) ||
        (isCreate && typeNames.includes(params.type)));
};
defaultIntentChecker.identity = DEFAULT_INTENT_HANDLER;
//# sourceMappingURL=Intent.js.map