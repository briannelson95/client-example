/// <reference types="react" />
import { SchemaType } from '@sanity/types';
import { SerializeOptions, Serializable, Collection, CollectionBuilder } from './StructureNodes';
import { ChildResolver } from './ChildResolver';
import { StructureContext } from './types';
export declare type UnserializedListItemChild = Collection | CollectionBuilder | ChildResolver;
export declare type ListItemChild = Collection | ChildResolver | undefined;
export interface ListItemSerializeOptions extends SerializeOptions {
    titleIsOptional?: boolean;
}
export interface ListItemDisplayOptions {
    showIcon?: boolean;
}
export interface ListItemInput {
    id: string;
    title?: string;
    icon?: React.ComponentType | React.ReactNode;
    child?: ListItemChild;
    displayOptions?: ListItemDisplayOptions;
    schemaType?: SchemaType | string;
}
export interface ListItem {
    id: string;
    type: string;
    title?: string;
    icon?: React.ComponentType | React.ReactNode;
    child?: ListItemChild;
    displayOptions?: ListItemDisplayOptions;
    schemaType?: SchemaType;
}
export interface UnserializedListItem {
    id: string;
    title: string;
    icon?: React.ComponentType | React.ReactNode;
    child?: UnserializedListItemChild;
    displayOptions?: ListItemDisplayOptions;
    schemaType?: SchemaType | string;
}
export declare type PartialListItem = Partial<UnserializedListItem>;
export declare class ListItemBuilder implements Serializable<ListItem> {
    protected _context: StructureContext;
    protected spec: PartialListItem;
    constructor(_context: StructureContext, spec?: ListItemInput);
    id(id: string): ListItemBuilder;
    getId(): PartialListItem['id'];
    title(title: string): ListItemBuilder;
    getTitle(): PartialListItem['title'];
    icon(icon: React.ComponentType | React.ReactNode): ListItemBuilder;
    showIcon(enabled?: boolean): ListItemBuilder;
    getShowIcon(): boolean | undefined;
    getIcon(): PartialListItem['icon'];
    child(child: UnserializedListItemChild): ListItemBuilder;
    getChild(): PartialListItem['child'];
    schemaType(schemaType: SchemaType | string): ListItemBuilder;
    getSchemaType(): PartialListItem['schemaType'];
    serialize(options?: ListItemSerializeOptions): ListItem;
    clone(withSpec?: PartialListItem): ListItemBuilder;
}
//# sourceMappingURL=ListItem.d.ts.map