/// <reference types="react" />
import { SchemaType, SortOrdering, SortOrderingItem } from '@sanity/types';
import { Intent } from './Intent';
import { SerializeOptions, Serializable, SerializePath } from './StructureNodes';
import { StructureContext } from './types';
export declare function maybeSerializeMenuItem(item: MenuItem | MenuItemBuilder, index: number, path: SerializePath): MenuItem;
export declare type MenuItemActionType = string | ((params: Record<string, string> | undefined, scope?: any) => void);
export declare type MenuItemParamsType = Record<string, string | unknown | undefined>;
export interface MenuItem {
    title: string;
    action?: MenuItemActionType;
    intent?: Intent;
    group?: string;
    icon?: React.ComponentType | React.ReactNode;
    params?: MenuItemParamsType;
    showAsAction?: boolean;
}
export declare type PartialMenuItem = Partial<MenuItem>;
export declare class MenuItemBuilder implements Serializable<MenuItem> {
    protected _context: StructureContext;
    protected spec: PartialMenuItem;
    constructor(_context: StructureContext, spec?: MenuItem);
    action(action: MenuItemActionType): MenuItemBuilder;
    getAction(): PartialMenuItem['action'];
    intent(intent: Intent): MenuItemBuilder;
    getIntent(): PartialMenuItem['intent'];
    title(title: string): MenuItemBuilder;
    getTitle(): string | undefined;
    group(group: string): MenuItemBuilder;
    getGroup(): PartialMenuItem['group'];
    icon(icon: React.ComponentType | React.ReactNode): MenuItemBuilder;
    getIcon(): PartialMenuItem['icon'];
    params(params: MenuItemParamsType): MenuItemBuilder;
    getParams(): PartialMenuItem['params'];
    showAsAction(showAsAction?: boolean): MenuItemBuilder;
    getShowAsAction(): PartialMenuItem['showAsAction'];
    serialize(options?: SerializeOptions): MenuItem;
    clone(withSpec?: PartialMenuItem): MenuItemBuilder;
}
export interface SortMenuItem extends MenuItem {
    params: {
        by: SortOrderingItem[];
    };
}
export declare function getOrderingMenuItem(context: StructureContext, ordering: SortOrdering, extendedProjection?: string): MenuItemBuilder;
export declare function getOrderingMenuItemsForSchemaType(context: StructureContext, typeName: SchemaType | string): MenuItemBuilder[];
//# sourceMappingURL=MenuItem.d.ts.map