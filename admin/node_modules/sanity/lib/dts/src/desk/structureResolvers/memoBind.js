/* eslint-disable @typescript-eslint/ban-types */
// `WeakMap`s require the first type param to extend `object`
const bindCache = new WeakMap();
export function memoBind(obj, methodKey) {
    const boundMethods = bindCache.get(obj) || new Map();
    if (boundMethods) {
        const bound = boundMethods.get(methodKey);
        if (bound)
            return bound;
    }
    const method = obj[methodKey];
    if (typeof method !== 'function') {
        throw new Error(`Expected property \`${methodKey}\` to be a function but got ${typeof method} instead.`);
    }
    const bound = method.bind(obj);
    boundMethods.set(methodKey, bound);
    bindCache.set(obj, boundMethods);
    return bound;
}
//# sourceMappingURL=memoBind.js.map