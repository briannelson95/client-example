import React, { useMemo } from 'react';
import styled from 'styled-components';
import { Box, Dialog, Button, Text, Spinner, Grid, Flex } from '@sanity/ui';
import { useId } from '@reach/auto-id';
import { DocTitle } from '../DocTitle';
import { useReferringDocuments } from './useReferringDocuments';
import { ConfirmDeleteDialogBody } from './ConfirmDeleteDialogBody';
export const DialogBody = styled(Flex).attrs({
    padding: 4,
    direction: 'column',
    height: 'fill',
}) `
  box-sizing: border-box;
`;
export const LoadingContainer = styled(Flex).attrs({
    align: 'center',
    direction: 'column',
    justify: 'center',
}) `
  height: 300px;
`;
/**
 * A confirmation dialog used to prevent unwanted document deletes. Loads all
 * the referencing internal and cross-data references prior to showing the
 * delete button.
 */
export function ConfirmDeleteDialog({ id, type, action = 'delete', onCancel, onConfirm, }) {
    const dialogId = `deletion-confirmation-${useId()}`;
    const { internalReferences, crossDatasetReferences, isLoading, totalCount, projectIds } = useReferringDocuments(id);
    const capitalizedAction = `${action.substring(0, 1).toUpperCase()}${action.substring(1)}`;
    const documentTitle = React.createElement(DocTitle, { document: useMemo(() => ({ _id: id, _type: type }), [id, type]) });
    const showConfirmButton = !isLoading;
    return (React.createElement(Dialog, { width: 1, id: dialogId, header: `${capitalizedAction} document?`, footer: React.createElement(Grid, { columns: showConfirmButton ? 2 : 1, gap: 2, paddingX: 4, paddingY: 3 },
            React.createElement(Button, { mode: "ghost", onClick: onCancel, text: "Cancel" }),
            showConfirmButton && (React.createElement(Button, { "data-testid": "confirm-delete-button", text: totalCount > 0 ? `${capitalizedAction} anyway` : `${capitalizedAction} now`, tone: "critical", onClick: onConfirm }))), onClose: onCancel, onClickOutside: onCancel },
        React.createElement(DialogBody, null, crossDatasetReferences && internalReferences && !isLoading ? (React.createElement(ConfirmDeleteDialogBody, { crossDatasetReferences: crossDatasetReferences, internalReferences: internalReferences, documentTitle: documentTitle, isLoading: isLoading, totalCount: totalCount, action: action, projectIds: projectIds, onReferenceLinkClick: onCancel })) : (React.createElement(LoadingContainer, { "data-testid": "loading-container" },
            React.createElement(Spinner, { muted: true }),
            React.createElement(Box, { marginTop: 3 },
                React.createElement(Text, { align: "center", muted: true, size: 1 }, "Looking for referring documents\u2026")))))));
}
//# sourceMappingURL=ConfirmDeleteDialog.js.map