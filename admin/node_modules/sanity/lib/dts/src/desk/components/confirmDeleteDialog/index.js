import React, { useCallback, useState } from 'react';
import { Box, Flex, Button, Dialog, Text, ErrorBoundary } from '@sanity/ui';
import { useId } from '@reach/auto-id';
import { ConfirmDeleteDialog } from './ConfirmDeleteDialog';
function ConfirmDeleteDialogContainer(props) {
    const id = useId();
    const [error, setError] = useState(null);
    const handleRetry = useCallback(() => setError(null), []);
    return error ? (React.createElement(Dialog, { id: `dialog-error-${id}`, "data-testid": "confirm-delete-error-dialog", header: "Error", footer: React.createElement(Flex, { paddingX: 4, paddingY: 3, direction: "column" },
            React.createElement(Button, { mode: "ghost", text: "Retry", onClick: handleRetry })), onClose: props.onCancel },
        React.createElement(Box, { padding: 4 },
            React.createElement(Text, null, "An error occurred while loading referencing documents.")))) : (React.createElement(ErrorBoundary, { onCatch: setError },
        React.createElement(ConfirmDeleteDialog, { ...props })));
}
export { ConfirmDeleteDialogContainer as ConfirmDeleteDialog };
//# sourceMappingURL=index.js.map