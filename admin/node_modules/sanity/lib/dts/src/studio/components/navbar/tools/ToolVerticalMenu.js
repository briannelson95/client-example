import React, { forwardRef, useMemo } from 'react';
import { Button, Stack } from '@sanity/ui';
import { PlugIcon } from '@sanity/icons';
import { startCase } from 'lodash';
import { ToolLink } from './ToolLink';
export function ToolVerticalMenu(props) {
    const { activeToolName, isVisible, tools } = props;
    return useMemo(() => (React.createElement(Stack, { as: "ul", space: [1, 2] }, tools.map((tool) => {
        const title = tool?.title || startCase(tool.name) || undefined;
        const Link = forwardRef(function Link(linkProps, ref) {
            return React.createElement(ToolLink, { ...linkProps, ref: ref, name: tool.name });
        });
        return (React.createElement(Stack, { as: "li", key: tool.name },
            React.createElement(Button, { as: Link, icon: tool.icon || PlugIcon, justify: "flex-start", mode: "bleed", selected: activeToolName === tool.name, tabIndex: isVisible ? 0 : -1, text: title })));
    }))), [activeToolName, isVisible, tools]);
}
//# sourceMappingURL=ToolVerticalMenu.js.map