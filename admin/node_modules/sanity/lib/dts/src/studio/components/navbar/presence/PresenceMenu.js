import { CogIcon, UsersIcon } from '@sanity/icons';
import { AvatarStack, Box, Button, Card, Menu, MenuButton, MenuDivider, MenuItem, Stack, Text, } from '@sanity/ui';
import React, { useMemo } from 'react';
import styled from 'styled-components';
import { UserAvatar } from '../../../../components/UserAvatar';
import { useGlobalPresence } from '../../../../datastores';
import { useColorScheme } from '../../../colorScheme';
import { useWorkspace } from '../../../workspace';
import { StatusButton } from '../../StatusButton';
import { PresenceMenuItem } from './PresenceMenuItem';
const MAX_AVATARS = 4;
const AvatarStackCard = styled(Card) `
  background: transparent;
`;
const StyledMenu = styled(Menu) `
  max-width: 350px;
  min-width: 250px;
`;
const FooterStack = styled(Stack) `
  position: sticky;
  bottom: 0;
`;
export function PresenceMenu(props) {
    const { collapse } = props;
    const presence = useGlobalPresence();
    const { projectId } = useWorkspace();
    const hasPresence = presence.length > 0;
    const { scheme } = useColorScheme();
    const button = useMemo(() => {
        if (collapse) {
            return (React.createElement(StatusButton, { icon: UsersIcon, mode: "bleed", active: hasPresence, statusTone: "positive" }));
        }
        return (React.createElement(Button, { mode: "bleed", padding: 1 },
            React.createElement(AvatarStackCard, null,
                React.createElement(AvatarStack, { maxLength: MAX_AVATARS }, presence.map((item) => (React.createElement(UserAvatar, { key: item.user.id, user: item.user })))))));
    }, [collapse, hasPresence, presence]);
    const popoverProps = useMemo(() => ({
        constrainSize: true,
        portal: true,
        scheme: scheme,
    }), [scheme]);
    return (React.createElement(MenuButton, { id: "global-presence-menu", button: button, menu: React.createElement(StyledMenu, { padding: 1 },
            hasPresence && (React.createElement(Stack, { space: 2 }, presence.map((item) => (React.createElement(PresenceMenuItem, { key: item.user.id, presence: item }))))),
            !hasPresence && (React.createElement(Box, { paddingX: 3, paddingY: 4 },
                React.createElement(Stack, { space: 3 },
                    React.createElement(Text, { weight: "semibold", size: 2 }, "No one else is here"),
                    React.createElement(Text, { size: 1, muted: true }, "Invite people to the project to see their online status.")))),
            React.createElement(FooterStack, { space: 1 },
                React.createElement(MenuDivider, null),
                React.createElement(MenuItem, { as: "a", href: `https://sanity.io/manage/project/${projectId}`, iconRight: CogIcon, paddingY: 4, rel: "noopener noreferrer", target: "_blank", text: "Manage members" }))), popover: popoverProps }));
}
//# sourceMappingURL=PresenceMenu.js.map