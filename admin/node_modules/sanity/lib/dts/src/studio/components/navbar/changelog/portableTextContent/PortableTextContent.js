import React from 'react';
import { PortableText } from '@portabletext/react';
import { Box, Card, Code, Heading, Stack, Text } from '@sanity/ui';
import urlBuilder from '@sanity/image-url';
import { getProject } from '@sanity/asset-utils';
import { ImageCard, ListBox, ListBoxOuter, RootBox, SpaceBox } from './PortableTextContent.styles';
function Image({ value }) {
    if (!value?.asset) {
        return null;
    }
    const project = getProject(value.asset);
    const url = urlBuilder(project).image(value).fit('max').auto('format').url();
    const { asset, alt, caption } = value;
    const { dimensions, lqip } = asset?.metadata || {};
    const aspectRatio = (dimensions.height / dimensions.width) * 100;
    return (React.createElement(SpaceBox, { marginY: 4 },
        React.createElement(Stack, { space: 3, as: "figure" },
            React.createElement(ImageCard, { radius: 1, shadow: 1, overflow: "hidden", "$aspectRatio": aspectRatio, "$lqip": lqip },
                React.createElement("img", { src: url, alt: alt || caption, referrerPolicy: "strict-origin-when-cross-origin" })),
            caption && (React.createElement(Text, { align: "center", as: "figcaption", muted: true, size: 1 }, value.caption)))));
}
const components = {
    types: {
        image: ({ value }) => React.createElement(Image, { value: value }),
        code: ({ value }) => (React.createElement(SpaceBox, { marginY: 4 },
            React.createElement(Card, { padding: 3, tone: "transparent", radius: 1, overflow: "auto" },
                React.createElement(Code, { size: 1, language: value?.language }, value?.code)))),
    },
    block: {
        h1: ({ children }) => (React.createElement(SpaceBox, { marginBottom: 4, marginTop: 5 },
            React.createElement(Heading, { size: 5 }, children))),
        h2: ({ children }) => (React.createElement(SpaceBox, { marginBottom: 4, marginTop: 5 },
            React.createElement(Heading, { size: 4 }, children))),
        h3: ({ children }) => (React.createElement(SpaceBox, { marginBottom: 4, marginTop: 5 },
            React.createElement(Heading, { size: 3 }, children))),
        h4: ({ children }) => (React.createElement(SpaceBox, { marginBottom: 4, marginTop: 5 },
            React.createElement(Heading, { size: 2 }, children))),
        h5: ({ children }) => (React.createElement(SpaceBox, { marginBottom: 4, marginTop: 5 },
            React.createElement(Heading, { size: 1 }, children))),
        h6: ({ children }) => (React.createElement(SpaceBox, { marginBottom: 4, marginTop: 5 },
            React.createElement(Heading, { size: 0 }, children))),
        normal: ({ children }) => (React.createElement(SpaceBox, { marginY: 4 },
            React.createElement(Text, { as: "p", muted: true, size: 1 }, children))),
    },
    list: {
        bullet: ({ children }) => (React.createElement(SpaceBox, { "data-list-type": "bullet", marginBottom: 4 },
            React.createElement(Box, { as: "ul" }, children))),
        number: ({ children }) => (React.createElement(SpaceBox, { "data-list-type": "number", marginBottom: 4 },
            React.createElement(Box, { as: "ol" }, children))),
    },
    listItem: {
        bullet: ({ children }) => (React.createElement(ListBoxOuter, { marginBottom: 1, forwardedAs: "li" },
            React.createElement(ListBox, null,
                React.createElement(Text, { muted: true, size: 1, "data-list-prefix": "bullet" }),
                React.createElement(Text, { muted: true, size: 1 }, children)))),
        number: ({ children }) => (React.createElement(ListBoxOuter, { marginBottom: 1, forwardedAs: "li" },
            React.createElement(ListBox, null,
                React.createElement(Text, { muted: true, "data-list-prefix": "number", size: 1 }),
                React.createElement(Text, { muted: true, size: 1 }, children)))),
    },
};
export function PortableTextContent(props) {
    const { value } = props;
    return (React.createElement(RootBox, null,
        React.createElement(PortableText, { value: value, components: components })));
}
//# sourceMappingURL=PortableTextContent.js.map