import React, { useEffect } from 'react';
import { Flex, Box, Card, Code, Text } from '@sanity/ui';
import { startCase } from 'lodash';
import styled from 'styled-components';
const ListItem = styled(Flex) ``;
const ErrorMessageRoot = styled(Box).attrs({ padding: 4 }) ``;
export function ErrorMessage({ error, message, path, stack }) {
    useEffect(() => {
        console.error(error);
    }, [error]);
    const last = path[path.length - 1];
    return (React.createElement(ErrorMessageRoot, { forwardedAs: Flex, direction: "column", gap: 4 },
        React.createElement(Flex, { direction: "column", gap: 2 },
            React.createElement(Text, { weight: "semibold", size: 3 },
                startCase(last.type),
                " Error")),
        React.createElement(Card, { tone: "critical", overflow: "auto", padding: 4 },
            React.createElement(Code, null, message)),
        React.createElement(Flex, { as: "ul", direction: "column", gap: 2 }, path.map(({ name, type }, index) => (React.createElement(ListItem, { forwardedAs: "li", gap: 2, align: "center", key: index },
            React.createElement(Box, null,
                React.createElement(Code, null, name)),
            React.createElement(Box, null,
                React.createElement(Text, { muted: true, size: 1 }, type)))))),
        stack && (React.createElement("details", null,
            React.createElement(Text, { as: "summary" }, "Stack Trace"),
            React.createElement(Box, { overflow: "auto", marginTop: 4 },
                React.createElement(Code, null, stack))))));
}
//# sourceMappingURL=ErrorMessage.js.map