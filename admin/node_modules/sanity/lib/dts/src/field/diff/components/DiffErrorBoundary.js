import React from 'react';
import { ErrorOutlineIcon } from '@sanity/icons';
import { Box, Card, Flex, Text } from '@sanity/ui';
import { isDev } from '../../../environment';
export class DiffErrorBoundary extends React.Component {
    constructor() {
        super(...arguments);
        this.state = {};
    }
    static getDerivedStateFromError(error) {
        return { error };
    }
    // eslint-disable-next-line class-methods-use-this
    componentDidCatch(error) {
        console.error('Error rendering diff component: ');
        console.error(error);
    }
    render() {
        const { error } = this.state;
        if (!error) {
            return this.props.children;
        }
        return (React.createElement(Card, { padding: 3, radius: 2, tone: "critical" },
            React.createElement(Flex, null,
                React.createElement(Text, { size: 1 },
                    React.createElement(ErrorOutlineIcon, null)),
                React.createElement(Box, { paddingLeft: 3 },
                    React.createElement(Text, { as: "h3", size: 1, weight: "medium" }, "Rendering the changes to this field caused an error"),
                    isDev && (React.createElement(Box, { marginTop: 2 },
                        React.createElement(Text, { as: "p", size: 1 }, "Check the developer console for more information")))))));
    }
}
//# sourceMappingURL=DiffErrorBoundary.js.map