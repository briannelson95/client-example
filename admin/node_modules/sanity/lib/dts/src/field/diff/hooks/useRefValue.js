import { useEffect, useState } from 'react';
import { useClient } from '../../../hooks';
export function useRefValue(refId) {
    const [value, setValue] = useState(undefined);
    const client = useClient();
    useEffect(() => {
        if (!refId) {
            return undefined;
        }
        const subscription = client.observable.getDocument(refId).subscribe(setValue);
        return () => {
            subscription.unsubscribe();
        };
    }, [client, refId]);
    // Always return undefined in the case of a falsey ref to prevent bug
    // when going from an ID to an undefined state
    return refId ? value : undefined;
}
//# sourceMappingURL=useRefValue.js.map