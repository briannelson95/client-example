import { Card } from '@sanity/ui';
import React, { createContext, forwardRef, useContext } from 'react';
import styled, { css } from 'styled-components';
export const StyledCard = styled(Card)(() => {
    return css `
    /* TextWithTone uses its own logic to set color, and we therefore need */
    /* to override this logic in order to set the correct color in different states */
    &[data-selected],
    &[data-pressed],
    &:active {
      [data-ui='TextWithTone'] {
        color: inherit;
      }
    }
  `;
});
const PreviewCardContext = createContext({ selected: false });
export function usePreviewCard() {
    const context = useContext(PreviewCardContext);
    if (!context) {
        throw new Error('PreviewCard: missing context value');
    }
    return context;
}
export const PreviewCard = forwardRef(function PreviewCard(props, ref) {
    const { children, selected, as, ...rest } = props;
    return (React.createElement(StyledCard, { "data-ui": "PreviewCard", ...rest, forwardedAs: as, selected: selected, ref: ref },
        React.createElement(PreviewCardContext.Provider, { value: { selected } }, children)));
});
//# sourceMappingURL=PreviewCard.js.map