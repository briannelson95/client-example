import { Menu, MenuButton, MenuDivider, MenuItem } from '@sanity/ui';
import React from 'react';
const MENU_BUTTON_POPOVER_PROPS = {
    portal: true,
    constrainSize: true,
};
export function CollapseOverflowMenu(props) {
    const { disableRestoreFocusOnClose, menuButton, menuButtonProps, menuOptionsArray, onMenuClose } = props;
    return (React.createElement(MenuButton, { __unstable_disableRestoreFocusOnClose: disableRestoreFocusOnClose, id: "menu-button", onClose: onMenuClose, popover: MENU_BUTTON_POPOVER_PROPS, ...menuButtonProps, button: menuButton, menu: React.createElement(Menu, null, menuOptionsArray.map((c, index) => {
            const { 
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            collapsedProps = {}, 
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            expandedProps = {}, 
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            tooltipProps = {}, 
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            tooltipText, 
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            dividerBefore, 
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            fontSize, 
            // eslint-disable-next-line @typescript-eslint/no-unused-vars
            padding, text, icon, selected, ...rest } = c.props;
            return (React.createElement(React.Fragment, { key: c.key },
                dividerBefore && index !== 0 && React.createElement(MenuDivider, null),
                React.createElement(MenuItem, { text: text, icon: icon, pressed: selected, ...rest })));
        })) }));
}
//# sourceMappingURL=CollapseOverflowMenu.js.map