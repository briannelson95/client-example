import { withPropsStream } from 'react-props-stream';
import { concat, of } from 'rxjs';
import { distinctUntilChanged, map, switchMap } from 'rxjs/operators';
export const WithReferringDocuments = withPropsStream(connect, function _WithReferringDocuments({ children, ...props }) {
    return children(props);
});
function connect(receivedProps$) {
    return receivedProps$.pipe(distinctUntilChanged((prev, next) => prev.id === next.id), switchMap((receivedProps) => concat(of({ ...receivedProps, referringDocuments: [], isLoading: true }), receivedProps.documentStore
        .listenQuery('*[references($docId)] [0...101]', { docId: receivedProps.id }, { tag: 'with-referring-documents' })
        .pipe(map((docs) => ({
        ...receivedProps,
        referringDocuments: docs,
        isLoading: false,
    }))))));
}
//# sourceMappingURL=WithReferringDocuments.js.map