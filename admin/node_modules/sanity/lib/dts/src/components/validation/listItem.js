import React, { useCallback } from 'react';
import { WarningOutlineIcon, ErrorOutlineIcon, InfoOutlineIcon } from '@sanity/icons';
import { Box, Text, MenuItem, Stack, Flex } from '@sanity/ui';
import styled from 'styled-components';
const StyledText = styled(Text) `
  white-space: initial;
`;
const MENU_ITEM_TONES = {
    error: 'critical',
    warning: 'caution',
    info: 'primary',
};
export function ListItem(props) {
    const { marker, onClick, path, truncate } = props;
    const handleClick = useCallback(() => {
        if (onClick) {
            onClick(marker.path);
        }
    }, [marker.path, onClick]);
    const menuItemTone = MENU_ITEM_TONES[marker?.level] || undefined;
    const children = (React.createElement(Flex, null,
        React.createElement(Box, null,
            React.createElement(Text, { size: 1 },
                marker.level === 'error' && React.createElement(ErrorOutlineIcon, null),
                marker.level === 'warning' && React.createElement(WarningOutlineIcon, null),
                marker.level === 'info' && React.createElement(InfoOutlineIcon, null))),
        React.createElement(Stack, { space: 2, flex: 1, paddingLeft: 3 },
            path && (React.createElement(StyledText, { size: 1, weight: "semibold" }, path)),
            marker.item.message && (React.createElement(StyledText, { muted: true, size: 1, textOverflow: truncate ? 'ellipsis' : undefined }, marker.item.message)))));
    return (React.createElement(MenuItem, { padding: 1, onClick: handleClick, radius: 2, tone: menuItemTone },
        React.createElement(Box, { padding: 2 }, children)));
}
//# sourceMappingURL=listItem.js.map