import React from 'react';
import { getDevicePixelRatio } from 'use-device-pixel-ratio';
import { PREVIEW_MEDIA_SIZE } from '../constants';
import { renderPreviewMedia, renderPreviewNode } from '../helpers';
import { RootSpan, MediaSpan, TextSpan } from './InlinePreview.styled';
const DEFAULT_MEDIA_DIMENSIONS = {
    ...PREVIEW_MEDIA_SIZE.inline,
    fit: 'crop',
    aspect: 1,
    dpr: getDevicePixelRatio(),
};
export function InlinePreview(props) {
    const { title, fallbackTitle = 'Untitled', media, mediaDimensions = DEFAULT_MEDIA_DIMENSIONS, } = props;
    return (React.createElement(RootSpan, { "data-testid": "inline-preview" },
        media && (React.createElement(MediaSpan, { "data-testid": "inline-preview-media" },
            renderPreviewMedia(media, 'inline', mediaDimensions),
            React.createElement("span", null))),
        React.createElement(TextSpan, { "data-testid": "inline-preview-title", size: 1 }, renderPreviewNode(title, 'inline', fallbackTitle))));
}
//# sourceMappingURL=InlinePreview.js.map