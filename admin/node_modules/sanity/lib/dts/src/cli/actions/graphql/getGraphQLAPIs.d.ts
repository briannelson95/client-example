import type { CliCommandContext, GraphQLAPIConfig } from '@sanity/cli';
import type { Schema } from '@sanity/types';
import type { SchemaDefinitionish } from './types';
interface ResolvedSerializableProperties {
    projectId: string;
    dataset: string;
    schemaTypes: SchemaDefinitionish[];
}
interface ResolvedSourceProperties {
    projectId: string;
    dataset: string;
    schema: Schema;
}
export declare type TypeResolvedGraphQLAPI = Omit<GraphQLAPIConfig, 'workspace' | 'source'> & ResolvedSerializableProperties;
export declare type ResolvedGraphQLAPI = Omit<GraphQLAPIConfig, 'workspace' | 'source'> & ResolvedSourceProperties;
export declare function getGraphQLAPIs(cliContext: CliCommandContext): Promise<ResolvedGraphQLAPI[]>;
export {};
//# sourceMappingURL=getGraphQLAPIs.d.ts.map