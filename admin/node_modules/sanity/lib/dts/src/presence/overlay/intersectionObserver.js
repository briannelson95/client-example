import { Subject, Observable } from 'rxjs';
import { filter } from 'rxjs/operators';
export const createIntersectionObserver = (options) => {
    const entries$ = new Subject();
    const intersectionObserver = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
            entries$.next(entry);
        });
    }, options);
    return {
        observe: (element) => {
            return new Observable((subscriber) => {
                const subscription = entries$
                    .pipe(filter((entry) => entry.target === element))
                    .subscribe(subscriber);
                intersectionObserver.observe(element);
                return () => {
                    subscription.unsubscribe();
                    intersectionObserver.unobserve(element);
                };
            });
        },
    };
};
//# sourceMappingURL=intersectionObserver.js.map