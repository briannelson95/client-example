import { SanityClient } from '@sanity/client';
import { Observable } from 'rxjs';
import { Schema } from '@sanity/types';
import { IdPair } from '../types';
import { HistoryStore } from '../../history';
import { OperationsAPI } from './operations';
export declare function emitOperation(operationName: keyof OperationsAPI, idPair: IdPair, typeName: string, extraArgs: any[]): void;
export interface OperationError {
    type: 'error';
    op: keyof OperationsAPI;
    id: string;
    error: Error;
}
export interface OperationSuccess {
    type: 'success';
    op: keyof OperationsAPI;
    id: string;
}
export declare type OperationEventsListener = (idPair: IdPair, typeName?: string) => Observable<OperationSuccess | OperationError>;
export declare function getOperationEvents(ctx: {
    client: SanityClient;
    historyStore: HistoryStore;
    schema: Schema;
}): OperationEventsListener;
//# sourceMappingURL=operationEvents.d.ts.map