import type { SanityClient } from '@sanity/client';
import { SanityDocument, TransactionLogEventWithMutations } from '@sanity/types';
import { Observable } from 'rxjs';
import { Timeline, TimelineController } from './history';
export interface HistoryStore {
    getDocumentAtRevision: (documentId: string, revision: string) => Promise<SanityDocument | undefined>;
    getHistory: (documentIds: string[], options?: {
        time?: string;
        revision?: string;
    }) => Promise<{
        documents: SanityDocument[];
    }>;
    getTransactions: (documentIds: string[]) => Promise<TransactionLogEventWithMutations[]>;
    restore: (id: string, targetId: string, rev: string) => Observable<SanityDocument>;
    getTimeline: (options: {
        publishedId: string;
        enableTrace?: boolean;
    }) => Timeline;
    getTimelineController: (options: {
        client: SanityClient;
        documentId: string;
        documentType: string;
        timeline: Timeline;
    }) => Observable<{
        historyController: TimelineController;
    }>;
}
export declare const removeMissingReferences: (doc: SanityDocument, existingIds: Record<string, boolean | undefined>) => SanityDocument;
export interface HistoryStoreOptions {
    client: SanityClient;
}
export declare function createHistoryStore({ client }: HistoryStoreOptions): HistoryStore;
//# sourceMappingURL=createHistoryStore.d.ts.map