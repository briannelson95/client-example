"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.uploaders = void 0;

var _operators = require("rxjs/operators");

var _patch = require("../../patch");

var _uploadImage = require("./uploadImage");

var _uploadFile = require("./uploadFile");

const UPLOAD_IMAGE = {
  type: 'image',
  accepts: 'image/*',
  upload: (client, file, type, options) => (0, _uploadImage.uploadImage)(client, file, options)
};
const UPLOAD_FILE = {
  type: 'file',
  accepts: '',
  upload: (client, file, type, options) => (0, _uploadFile.uploadFile)(client, file, options)
};
const UPLOAD_TEXT = {
  type: 'string',
  accepts: 'text/*',
  upload: (client, file, type, options) => (0, _uploadFile.uploadFile)(client, file, options).pipe((0, _operators.map)(content => ({
    type: 'uploadEvent',
    patches: [(0, _patch.set)(content)]
  }))) // Todo: promote this to a "first-class" form-builder abstraction
  // and make it possible to register custom uploaders

};
const uploaders = [UPLOAD_IMAGE, UPLOAD_TEXT, UPLOAD_FILE].map((uploader, i) => ({ ...uploader,
  priority: i
}));
exports.uploaders = uploaders;