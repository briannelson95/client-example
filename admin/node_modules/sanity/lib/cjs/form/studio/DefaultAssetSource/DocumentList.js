"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DocumentList = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _preview = require("../../../preview");

var _router = require("../../../router");

var _hooks = require("../../../hooks");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const DocumentList = _ref => {
  let {
    asset,
    assetType,
    referringDocuments
  } = _ref;
  const count = referringDocuments.length;
  const hasResults = count > 0;
  const filenamePlaceholder = asset.originalFilename ? /*#__PURE__*/_react.default.createElement("strong", null, asset.originalFilename) : "this ".concat(assetType);

  if (!hasResults) {
    return /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: [1, 1, 2, 2],
      as: "h2",
      weight: "regular"
    }, "No documents are using ", filenamePlaceholder);
  }

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ui.Card, {
    borderBottom: true,
    marginTop: 2,
    paddingBottom: 2,
    marginBottom: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    as: "h2",
    size: [1, 1, 2, 2],
    weight: "regular",
    textOverflow: "ellipsis"
  }, count, " ", count === 1 ? "document is" : "documents are", " using ", filenamePlaceholder)), referringDocuments.map(document => /*#__PURE__*/_react.default.createElement(DocumentLink, {
    key: document._id,
    document: document
  })));
};

exports.DocumentList = DocumentList;

const DocumentLink = _ref2 => {
  let {
    document
  } = _ref2;
  const schema = (0, _hooks.useSchema)();
  const LinkComponent = (0, _react.useCallback)(linkProps => /*#__PURE__*/_react.default.createElement(_router.IntentLink, _extends({}, linkProps, {
    params: {
      id: document._id,
      type: document._type
    },
    intent: "edit"
  })), [document]);
  return /*#__PURE__*/_react.default.createElement(_ui.Card, {
    as: LinkComponent,
    paddingY: 2,
    paddingX: 1,
    radius: 2,
    key: document._id,
    "data-as": "a",
    tabIndex: 0
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center",
    gap: 2
  }, /*#__PURE__*/_react.default.createElement(_preview.SanityPreview, {
    layout: "default",
    value: {
      _type: 'reference',
      _ref: document._id
    },
    schemaType: schema.get(document._type)
  })));
};