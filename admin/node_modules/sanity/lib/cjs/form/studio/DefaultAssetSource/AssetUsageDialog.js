"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AssetUsageDialog = AssetUsageDialog;

var _react = _interopRequireWildcard(require("react"));

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _WithReferringDocuments = require("../../../components/WithReferringDocuments");

var _datastores = require("../../../datastores");

var _SpinnerWithText = require("../../components/SpinnerWithText");

var _DocumentList = require("./DocumentList");

var _ConfirmMessage = require("./ConfirmMessage");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const MODE_CONFIRM_DELETE = 'confirmDelete';
const MODE_LIST_USAGE = 'listUsage';

function AssetUsageDialog(props) {
  const documentStore = (0, _datastores.useDocumentStore)();
  return /*#__PURE__*/_react.default.createElement(_WithReferringDocuments.WithReferringDocuments, {
    documentStore: documentStore,
    id: props.asset._id
  }, _ref => {
    let {
      isLoading,
      referringDocuments
    } = _ref;
    return /*#__PURE__*/_react.default.createElement(InnerAssetUsageDialog, _extends({}, props, {
      assetIsLoading: isLoading,
      referringDocuments: referringDocuments
    }));
  });
}

const InnerAssetUsageDialog = _ref2 => {
  let {
    asset,
    assetType = 'image',
    mode = MODE_LIST_USAGE,
    isDeleting = false,
    assetIsLoading = false,
    referringDocuments = [],
    onClose,
    onDelete
  } = _ref2;
  const isListMode = mode === MODE_LIST_USAGE;
  const defaultHeaderTitle = isListMode ? "Documents using ".concat(assetType) : "Delete ".concat(assetType);
  const [canDelete, setCanDelete] = (0, _react.useState)(false);
  const [isLoadingParent, setIsLoadingParent] = (0, _react.useState)(true);
  const [publishedDocuments, setPublishedDocuments] = (0, _react.useState)([]);
  const showActionFooter = mode === MODE_CONFIRM_DELETE;
  const hasResults = publishedDocuments.length > 0;
  const showDocumentList = mode === MODE_LIST_USAGE || hasResults;
  const noPaddingOnStack = mode === MODE_CONFIRM_DELETE && !hasResults;
  const footer = showActionFooter ? /*#__PURE__*/_react.default.createElement(_ui.Grid, {
    padding: 2,
    gap: 2,
    columns: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
    mode: "bleed",
    text: "Cancel",
    onClick: onClose
  }), /*#__PURE__*/_react.default.createElement(_ui.Button, {
    text: "Delete",
    tone: "critical",
    icon: _icons.TrashIcon,
    onClick: onDelete,
    loading: isDeleting,
    disabled: !canDelete
  })) : undefined;
  (0, _react.useEffect)(() => {
    const drafts = referringDocuments.reduce((acc, doc) => doc._id.startsWith('drafts.') ? acc.concat(doc._id.slice(7)) : acc, []);
    const documentsWithoutDrafts = referringDocuments.filter(doc => !drafts.includes(doc._id));
    setPublishedDocuments(documentsWithoutDrafts);
    setCanDelete(documentsWithoutDrafts.length === 0 && !assetIsLoading);
    setIsLoadingParent(assetIsLoading);
  }, [assetIsLoading, referringDocuments]);
  return /*#__PURE__*/_react.default.createElement(_ui.Dialog, {
    id: "asset-dialog",
    header: defaultHeaderTitle,
    width: 1,
    onClose: onClose,
    footer: footer,
    __unstable_autoFocus: !isLoadingParent
  }, isLoadingParent && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    padding: 4
  }, /*#__PURE__*/_react.default.createElement(_SpinnerWithText.SpinnerWithText, {
    text: "Loading..."
  })), !isLoadingParent && /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    paddingX: noPaddingOnStack ? 0 : [2, 3, 4],
    paddingY: noPaddingOnStack ? 0 : [3, 3, 3, 4],
    space: 1
  }, mode === MODE_CONFIRM_DELETE && /*#__PURE__*/_react.default.createElement(_ConfirmMessage.ConfirmMessage, {
    asset: asset,
    assetType: assetType,
    hasResults: hasResults
  }), showDocumentList && /*#__PURE__*/_react.default.createElement(_DocumentList.DocumentList, {
    asset: asset,
    referringDocuments: publishedDocuments,
    assetType: assetType
  })));
};