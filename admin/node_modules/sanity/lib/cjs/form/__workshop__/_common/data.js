"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DUMMY_DOCUMENT_ID = void 0;
exports.getDummyDocument = getDummyDocument;
exports.getDummySchema = getDummySchema;
exports.schemaListOptions = void 0;
exports.wrapSchema = wrapSchema;

var _mapValues2 = _interopRequireDefault(require("lodash/mapValues"));

var _keyBy2 = _interopRequireDefault(require("lodash/keyBy"));

var _schema = _interopRequireDefault(require("@sanity/schema"));

var _simpleDummySchema = _interopRequireDefault(require("./schema/simpleDummySchema"));

var _simpleFieldGroupSchema = _interopRequireDefault(require("./schema/simpleFieldGroupSchema"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const DUMMY_DOCUMENT_ID = '10053a07-8647-4ebd-9d1d-33a512d30d3a';
exports.DUMMY_DOCUMENT_ID = DUMMY_DOCUMENT_ID;

function wrapSchema(schema) {
  return {
    name: 'test',
    types: [schema]
  };
}

const schemaMap = [{
  name: 'simple',
  title: 'Simple',
  schema: _simpleDummySchema.default
}, {
  name: 'simpleFieldGroup',
  title: 'Simple w/ Field Group',
  schema: _simpleFieldGroupSchema.default
}];
const schemaListOptions = (0, _mapValues2.default)((0, _keyBy2.default)(schemaMap, 'title'), 'name');
exports.schemaListOptions = schemaListOptions;

function getDummyDocument() {
  return {
    _createdAt: '2021-11-04T15:41:48Z',
    _id: DUMMY_DOCUMENT_ID,
    _rev: '5hb8s6-k75-ip4-4bq-5ztbf3fbx',
    _type: 'book',
    _updatedAt: '2021-11-05T12:34:29Z',
    title: 'Hello world',
    person: {
      name: 'Fred'
    }
  };
}

function getDummySchema(props) {
  const {
    schemaKey = 'simple'
  } = props;
  const schemaType = schemaMap.find(s => s.name === schemaKey);
  const schema = schemaType === null || schemaType === void 0 ? void 0 : schemaType.schema(props);
  return _schema.default.compile(schema);
}