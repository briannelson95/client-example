"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.CellItem = void 0;

var _icons = require("@sanity/icons");

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _autoId = require("@reach/auto-id");

var _formField = require("../../../../components/formField");

var _presence = require("../../../../../presence");

var _DragHandle = require("../../common/DragHandle");

var _randomKey = require("../../common/randomKey");

var _ArrayInput = require("../ArrayInput");

var _InsertMenu = require("../InsertMenu");

var _empty = require("../../../../utils/empty");

var _ItemWithMissingType = require("./ItemWithMissingType");

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

const dragHandle = /*#__PURE__*/_react.default.createElement(_DragHandle.DragHandle, {
  grid: true,
  padding: 2,
  mode: "ghost"
});

const DragHandleCard = (0, _styledComponents.default)(_ui.Card)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  position: absolute;\n  top: 0;\n  left: 0;\n"])));
const PresenceFlex = (0, _styledComponents.default)(_ui.Flex)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  position: absolute;\n  top: 0;\n  right: 0;\n  height: 35px;\n"])));
const Root = (0, _styledComponents.default)(_ui.Card)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  transition: border-color 250ms;\n  position: relative;\n\n  @media (hover: hover) {\n    ", " {\n      opacity: 0;\n    }\n\n    &:hover,\n    &:focus-within {\n      ", " {\n        opacity: 1;\n      }\n    }\n  }\n\n  &[aria-selected='true'] {\n    box-shadow: 0 0 0 2px var(--card-focus-ring-color);\n  }\n"])), DragHandleCard, DragHandleCard);
const FooterFlex = (0, _styledComponents.default)(_ui.Flex)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  min-height: 35px;\n"])));
const PreviewCard = (0, _styledComponents.default)(_ui.Card)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n  border-top-right-radius: inherit;\n  border-top-left-radius: inherit;\n  height: 100%;\n\n  @media (hover: hover) {\n    &:hover {\n      filter: brightness(95%);\n    }\n  }\n\n  &:focus:focus-visible {\n    box-shadow: 0 0 0 2px var(--card-focus-ring-color);\n  }\n"])));
const MissingTypeBox = (0, _styledComponents.default)(_ui.Box)(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n  padding-bottom: 100%;\n"])));
const StyledItemWithMissingType = (0, _styledComponents.default)(_ItemWithMissingType.ItemWithMissingType)(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n"])));

const CellItem = /*#__PURE__*/_react.default.forwardRef(function ItemCell(props, ref) {
  const focusRef = _react.default.useRef(null);

  const {
    isSortable,
    value,
    onClick,
    onFocus,
    onInsert,
    insertableTypes,
    type,
    readOnly,
    presence,
    onRemove,
    renderPreview,
    validation = _empty.EMPTY_ARRAY,
    ...rest
  } = props;
  const hasError = validation.filter(item => item.level === 'error').length > 0;
  const hasWarning = validation.filter(item => item.level === 'warning').length > 0;
  const tone = (0, _react.useMemo)(() => {
    if (!value._key) {
      return 'caution';
    }

    if (hasError) {
      return 'critical';
    }

    if (hasWarning) {
      return 'caution';
    }

    return undefined;
  }, [hasError, hasWarning, value._key]);
  const handleDuplicate = (0, _react.useCallback)(() => {
    onInsert === null || onInsert === void 0 ? void 0 : onInsert({
      items: [{ ...value,
        _key: (0, _randomKey.randomKey)()
      }],
      position: 'after'
    });
  }, [onInsert, value]);
  const handleInsert = (0, _react.useCallback)((pos, insertType) => {
    onInsert === null || onInsert === void 0 ? void 0 : onInsert({
      items: [(0, _ArrayInput.createProtoValue)(insertType)],
      position: pos
    });
  }, [onInsert, value._key]);
  const id = (0, _autoId.useId)();
  return /*#__PURE__*/_react.default.createElement(Root, _extends({}, rest, {
    radius: 2,
    ref: ref,
    border: true,
    tone: tone
  }), type ? /*#__PURE__*/_react.default.createElement(PreviewCard, {
    tone: "inherit",
    "data-ui": "PreviewCard",
    forwardedAs: 'button',
    type: "button",
    overflow: "auto",
    flex: 1,
    tabIndex: 0,
    onClick: onClick,
    ref: focusRef,
    onFocus: onFocus,
    __unstable_focusRing: true
  }, renderPreview({
    layout: 'media',
    schemaType: type,
    value,
    withBorder: false,
    withRadius: false
  })) : /*#__PURE__*/_react.default.createElement(MissingTypeBox, {
    flex: 1
  }, /*#__PURE__*/_react.default.createElement(StyledItemWithMissingType, {
    value: value,
    onFocus: onFocus,
    vertical: true
  })), /*#__PURE__*/_react.default.createElement(DragHandleCard, {
    margin: 1,
    radius: 2,
    display: "flex",
    tone: "inherit",
    "data-ui": "DragHandleCard"
  }, !readOnly && isSortable && dragHandle), /*#__PURE__*/_react.default.createElement(PresenceFlex, {
    align: "center",
    marginX: 1
  }, !readOnly && /*#__PURE__*/_react.default.createElement(_presence.FieldPresence, {
    presence: presence,
    maxAvatars: 1
  })), /*#__PURE__*/_react.default.createElement(FooterFlex, {
    align: "center",
    paddingX: 1,
    sizing: "border",
    justify: "space-between"
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, null, (value === null || value === void 0 ? void 0 : value._key) && validation.length > 0 && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginLeft: 1,
    paddingX: 1,
    paddingY: 3
  }, /*#__PURE__*/_react.default.createElement(_formField.FormFieldValidationStatus, {
    validation: validation,
    __unstable_showSummary: !(value !== null && value !== void 0 && value._ref),
    placement: "bottom",
    portal: true
  })), !value._key && /*#__PURE__*/_react.default.createElement(_ui.Tooltip, {
    portal: true,
    content: /*#__PURE__*/_react.default.createElement(_ui.Card, {
      padding: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1
    }, "This item is missing a required ", /*#__PURE__*/_react.default.createElement("code", null, "_key"), " property."))
  }, /*#__PURE__*/_react.default.createElement(_ui.Badge, {
    mode: "outline",
    tone: "caution",
    margin: 1,
    padding: 2,
    fontSize: 1
  }, /*#__PURE__*/_react.default.createElement(_icons.WarningOutlineIcon, null), " key"))), !readOnly && /*#__PURE__*/_react.default.createElement(_ui.Box, null, /*#__PURE__*/_react.default.createElement(_ui.MenuButton, {
    button: /*#__PURE__*/_react.default.createElement(_ui.Button, {
      padding: 2,
      mode: "bleed",
      icon: _icons.EllipsisVerticalIcon
    }),
    id: "".concat(id, "-menuButton"),
    portal: true,
    menu: /*#__PURE__*/_react.default.createElement(_ui.Menu, null, /*#__PURE__*/_react.default.createElement(_ui.MenuItem, {
      text: "Remove",
      tone: "critical",
      icon: _icons.TrashIcon,
      onClick: onRemove
    }), /*#__PURE__*/_react.default.createElement(_ui.MenuItem, {
      text: "Duplicate",
      icon: _icons.CopyIcon,
      onClick: handleDuplicate
    }), /*#__PURE__*/_react.default.createElement(_InsertMenu.InsertMenu, {
      types: insertableTypes,
      onInsert: handleInsert
    }))
  }))));
});

exports.CellItem = CellItem;