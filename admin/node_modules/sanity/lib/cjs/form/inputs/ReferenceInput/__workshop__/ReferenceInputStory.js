"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ReferenceInputStory;

var _ui = require("@sanity/ui");

var _uiWorkshop = require("@sanity/ui-workshop");

var _react = _interopRequireWildcard(require("react"));

var _hooks = require("../../../../hooks");

var _ReviewChangesProvider = require("../../../studio/contexts/reviewChanges/ReviewChangesProvider");

var _PatchChannel = require("../../../patch/PatchChannel");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ReferenceInputStory() {
  var _documentType$fields;

  const schema = (0, _hooks.useSchema)();
  const documentType = schema.get('referenceTest');
  const schemaType = (_documentType$fields = documentType.fields) === null || _documentType$fields === void 0 ? void 0 : _documentType$fields.find(f => f.name === 'selfRef');
  const patchChannel = (0, _react.useMemo)(() => (0, _PatchChannel.createPatchChannel)(), []);
  const [value] = (0, _react.useState)(undefined);
  const [focusPath] = (0, _react.useState)([]);
  const onBlur = (0, _uiWorkshop.useAction)('onBlur');
  const onChange = (0, _uiWorkshop.useAction)('onChange');
  const onFocus = (0, _uiWorkshop.useAction)('onFocus');
  const path = (0, _react.useMemo)(() => ['selfRef'], []);
  return /*#__PURE__*/_react.default.createElement(_ui.Card, {
    height: "fill"
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center",
    height: "fill",
    justify: "center",
    padding: 4,
    sizing: "border"
  }, /*#__PURE__*/_react.default.createElement(_ui.Container, {
    width: 0
  }, /*#__PURE__*/_react.default.createElement(_ReviewChangesProvider.ReviewChangesContextProvider, {
    changesOpen: false
  }, "TODO"))));
}