"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ImageActionsMenu = ImageActionsMenu;

var _react = _interopRequireWildcard(require("react"));

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _ImageActionsMenu = require("./ImageActionsMenu.styled");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ImageActionsMenu(props) {
  const {
    onEdit,
    children,
    showEdit,
    isMenuOpen,
    onMenuOpen
  } = props;
  const [menuElement, setMenuRef] = (0, _react.useState)(null);
  const [menuButtonRef, setMenuButtonRef] = (0, _react.useState)(null);

  const handleClick = _react.default.useCallback(() => onMenuOpen(true), [onMenuOpen]);

  const handleClickOutside = (0, _react.useCallback)(() => {
    onMenuOpen(false);
  }, [onMenuOpen]);
  const handleGlobalKeyDown = (0, _react.useCallback)(e => {
    if (e.key === 'Escape') {
      onMenuOpen(false);
      menuButtonRef === null || menuButtonRef === void 0 ? void 0 : menuButtonRef.focus();
    }
  }, [menuButtonRef, onMenuOpen]);
  (0, _ui.useClickOutside)(handleClickOutside, [menuElement]);
  (0, _ui.useGlobalKeyDown)(handleGlobalKeyDown);
  return /*#__PURE__*/_react.default.createElement(_ImageActionsMenu.MenuActionsWrapper, {
    "data-buttons": true,
    space: 1,
    padding: 2
  }, showEdit && /*#__PURE__*/_react.default.createElement(_ImageActionsMenu.ButtonContainer, {
    icon: _icons.CropIcon,
    mode: "ghost",
    onClick: onEdit,
    "data-testid": "options-menu-edit-details"
  }), /*#__PURE__*/_react.default.createElement(_ui.Popover, {
    content: /*#__PURE__*/_react.default.createElement(_ui.Menu, {
      ref: setMenuRef,
      shouldFocus: "first"
    }, children),
    portal: true,
    constrainSize: true,
    open: isMenuOpen
  }, /*#__PURE__*/_react.default.createElement(_ImageActionsMenu.ButtonContainer, {
    icon: _icons.EllipsisVerticalIcon,
    mode: "ghost",
    "data-testid": "options-menu-button",
    onClick: handleClick,
    ref: setMenuButtonRef
  })));
}