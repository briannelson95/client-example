"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ImageTool = ImageTool;

var _react = _interopRequireDefault(require("react"));

var _ImageLoader = require("./ImageLoader");

var _ToolCanvas = require("./ToolCanvas");

var _Resize = require("./Resize");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function ImageTool(props) {
  return /*#__PURE__*/_react.default.createElement(_ImageLoader.ImageLoader, {
    src: props.src
  }, _ref => {
    let {
      isLoading,
      image,
      error
    } = _ref;

    if (isLoading) {
      return /*#__PURE__*/_react.default.createElement("div", null, "Loading...");
    }

    if (error) {
      return /*#__PURE__*/_react.default.createElement("div", null, error.message);
    }

    if (image) {
      return /*#__PURE__*/_react.default.createElement(_Resize.Resize, {
        image: image,
        maxHeight: ImageTool.maxHeight,
        maxWidth: ImageTool.maxWidth
      }, canvas => /*#__PURE__*/_react.default.createElement(_ToolCanvas.ToolCanvas, _extends({
        image: canvas
      }, props)));
    }

    return null;
  });
}

ImageTool.maxHeight = 500;
ImageTool.maxWidth = 1000;