"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UrlInput = void 0;

var _ui = require("@sanity/ui");

var _react = _interopRequireDefault(require("react"));

var _patch = require("../patch");

var _getValidationRule = require("../utils/getValidationRule");

var _changeIndicators = require("../../components/changeIndicators");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// @todo Rename to `URLInput`?
const UrlInput = /*#__PURE__*/_react.default.forwardRef(function UrlInput(props, forwardedRef) {
  var _uriRule$constraint, _uriRule$constraint$o;

  const {
    changed,
    focused,
    id,
    onBlur,
    onChange,
    onFocus,
    path,
    readOnly,
    schemaType,
    validationError,
    value
  } = props;

  const handleChange = _react.default.useCallback(event => {
    const inputValue = event.currentTarget.value;
    onChange(inputValue ? (0, _patch.set)(inputValue) : (0, _patch.unset)());
  }, [onChange]);

  const uriRule = (0, _getValidationRule.getValidationRule)(schemaType, 'uri');
  const inputType = uriRule !== null && uriRule !== void 0 && (_uriRule$constraint = uriRule.constraint) !== null && _uriRule$constraint !== void 0 && (_uriRule$constraint$o = _uriRule$constraint.options) !== null && _uriRule$constraint$o !== void 0 && _uriRule$constraint$o.allowRelative ? 'text' : 'url';
  return /*#__PURE__*/_react.default.createElement(_changeIndicators.ChangeIndicator, {
    path: path,
    isChanged: changed,
    hasFocus: !!focused
  }, /*#__PURE__*/_react.default.createElement(_ui.TextInput, {
    type: inputType,
    inputMode: "url",
    id: id,
    customValidity: validationError,
    value: value || '',
    readOnly: Boolean(readOnly),
    placeholder: schemaType.placeholder,
    onChange: handleChange,
    onFocus: onFocus,
    onBlur: onBlur,
    ref: forwardedRef
  }));
});

exports.UrlInput = UrlInput;