"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BooleanInput = void 0;

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _ui = require("@sanity/ui");

var _patch = require("../patch");

var _changeIndicators = require("../../components/changeIndicators");

var _FormFieldHeaderText = require("../components/formField/FormFieldHeaderText");

var _FormFieldStatus = require("../components/formField/FormFieldStatus");

var _templateObject, _templateObject2;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

const CenterAlignedBox = (0, _styledComponents.default)(_ui.Box)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  align-self: center;\n"])));
const ZeroLineHeightBox = (0, _styledComponents.default)(_ui.Box)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  line-height: 0;\n"])));

const BooleanInput = /*#__PURE__*/_react.default.forwardRef(function BooleanInput(props, ref) {
  var _schemaType$options;

  const {
    id,
    value,
    schemaType,
    readOnly,
    onBlur,
    onFocus,
    onChange,
    path,
    focused,
    changed
  } = props;
  const layout = ((_schemaType$options = schemaType.options) === null || _schemaType$options === void 0 ? void 0 : _schemaType$options.layout) || 'switch';
  const handleChange = (0, _react.useCallback)(event => {
    onChange((0, _patch.set)(event.currentTarget.checked));
  }, [onChange]);
  const indeterminate = typeof value !== 'boolean';
  const checked = value || false;
  const LayoutSpecificInput = layout === 'checkbox' ? _ui.Checkbox : _ui.Switch;
  return /*#__PURE__*/_react.default.createElement(_changeIndicators.ChangeIndicator, {
    path: path,
    isChanged: changed,
    hasFocus: !!focused
  }, /*#__PURE__*/_react.default.createElement(_ui.Card, {
    border: true,
    radius: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, null, /*#__PURE__*/_react.default.createElement(ZeroLineHeightBox, {
    padding: 3
  }, /*#__PURE__*/_react.default.createElement(LayoutSpecificInput, {
    id: id,
    ref: ref,
    label: schemaType.title,
    readOnly: Boolean(readOnly),
    onBlur: onBlur,
    onChange: handleChange,
    onFocus: onFocus,
    indeterminate: indeterminate,
    checked: checked,
    style: {
      margin: -4
    },
    disabled: readOnly
  })), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    paddingY: 3
  }, /*#__PURE__*/_react.default.createElement(_FormFieldHeaderText.FormFieldHeaderText, {
    description: schemaType.description,
    inputId: id // validation={validation}
    ,
    title: schemaType.title
  })), /*#__PURE__*/_react.default.createElement(CenterAlignedBox, {
    paddingX: 3,
    paddingY: 1
  }, /*#__PURE__*/_react.default.createElement(_FormFieldStatus.FormFieldStatus, {
    maxAvatars: 1,
    position: "top"
  })))));
});

exports.BooleanInput = BooleanInput;