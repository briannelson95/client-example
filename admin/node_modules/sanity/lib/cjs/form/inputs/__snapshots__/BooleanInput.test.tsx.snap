// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Keyboard accessibility emits onBlur when navigating away from field 1`] = `
Array [
  Array [
    SyntheticBaseEvent {
      "_reactName": "onBlur",
      "_targetInst": null,
      "bubbles": true,
      "cancelable": false,
      "currentTarget": null,
      "defaultPrevented": false,
      "detail": 0,
      "eventPhase": 3,
      "isDefaultPrevented": [Function],
      "isPropagationStopped": [Function],
      "isTrusted": true,
      "nativeEvent": FocusEvent {
        "isTrusted": true,
      },
      "relatedTarget": Document {
        "__reactEvents$xmmzqfxmhxr": Set {
          "selectionchange__bubble",
          "selectionchange__capture",
        },
        "location": Location {
          "assign": [Function],
          "hash": "",
          "host": "localhost:3333",
          "hostname": "localhost",
          "href": "http://localhost:3333/",
          "origin": "http://localhost:3333",
          "pathname": "/",
          "port": "3333",
          "protocol": "http:",
          "reload": [Function],
          "replace": [Function],
          "search": "",
          "toString": [Function],
        },
      },
      "target": <input
        class="sc-bZnhIo logzRA"
        id="booleanTest"
        label="Switch"
        type="checkbox"
      />,
      "timeStamp": 1654699349989,
      "type": "blur",
      "view": [Window],
    },
  ],
]
`;

exports[`Keyboard accessibility emits onChange when pressing enter 1`] = `
Array [
  Array [
    Object {
      "path": Array [],
      "type": "set",
      "value": true,
    },
  ],
]
`;

exports[`Keyboard accessibility emits onFocus when tabbing to input 1`] = `
Array [
  Array [
    SyntheticBaseEvent {
      "_reactName": "onFocus",
      "_targetInst": null,
      "bubbles": true,
      "cancelable": false,
      "currentTarget": null,
      "defaultPrevented": false,
      "detail": 0,
      "eventPhase": 3,
      "isDefaultPrevented": [Function],
      "isPropagationStopped": [Function],
      "isTrusted": true,
      "nativeEvent": FocusEvent {
        "isTrusted": true,
      },
      "relatedTarget": null,
      "target": <input
        class="sc-bZnhIo logzRA"
        id="booleanTest"
        label="Switch"
        type="checkbox"
      />,
      "timeStamp": 1654699349904,
      "type": "focus",
      "view": [Window],
    },
  ],
]
`;

exports[`Mouse accessibility emits onChange when clicked 1`] = `
Array [
  Array [
    Object {
      "path": Array [],
      "type": "set",
      "value": true,
    },
  ],
]
`;

exports[`Mouse accessibility emits onFocus when clicked 1`] = `
Array [
  Array [
    SyntheticBaseEvent {
      "_reactName": "onFocus",
      "_targetInst": null,
      "bubbles": true,
      "cancelable": false,
      "currentTarget": null,
      "defaultPrevented": false,
      "detail": 0,
      "eventPhase": 3,
      "isDefaultPrevented": [Function],
      "isPropagationStopped": [Function],
      "isTrusted": true,
      "nativeEvent": FocusEvent {
        "isTrusted": true,
      },
      "relatedTarget": null,
      "target": <input
        class="sc-bZnhIo logzRA"
        id="booleanTest"
        label="Switch"
        type="checkbox"
      />,
      "timeStamp": 1654699349834,
      "type": "focus",
      "view": [Window],
    },
  ],
]
`;

exports[`readOnly property does not make field read-only with callback 1`] = `
Array [
  Array [
    Object {
      "path": Array [],
      "type": "set",
      "value": true,
    },
  ],
  Array [
    Object {
      "path": Array [],
      "type": "set",
      "value": true,
    },
  ],
]
`;
