"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ObjectInput = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _members = require("../../members");

var _UnknownFields = require("./UnknownFields");

var _ObjectInput = require("./ObjectInput.styled");

var _FieldGroupTabs = require("./fieldGroups/FieldGroupTabs");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const ObjectInput = /*#__PURE__*/(0, _react.memo)(function ObjectInput(props) {
  const {
    schemaType,
    groups,
    members,
    onChange,
    renderInput,
    renderField,
    renderItem,
    renderPreview,
    level,
    value,
    id,
    path,
    onFieldGroupSelect
  } = props;
  const {
    columns
  } = schemaType.options || {};
  const renderedUnknownFields = (0, _react.useMemo)(() => {
    if (!schemaType.fields) {
      return null;
    }

    const knownFieldNames = schemaType.fields.map(field => field.name);
    const unknownFields = Object.keys(value || {}).filter(key => !key.startsWith('_') && !knownFieldNames.includes(key));

    if (unknownFields.length === 0) {
      return null;
    }

    return /*#__PURE__*/_react.default.createElement(_UnknownFields.UnknownFields, {
      fieldNames: unknownFields,
      value: value,
      onChange: onChange
    });
  }, [onChange, schemaType.fields, value]);
  const renderObjectMembers = (0, _react.useCallback)(() => /*#__PURE__*/_react.default.createElement(_members.ObjectMembers, {
    members: members,
    renderInput: renderInput,
    renderField: renderField,
    renderItem: renderItem,
    renderPreview: renderPreview
  }), [members, renderField, renderInput, renderItem, renderPreview]);

  if (members.length === 0) {
    return null;
  }

  return /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 5
  }, groups.length > 0 ? /*#__PURE__*/_react.default.createElement(_ObjectInput.FieldGroupTabsWrapper, {
    $level: level,
    "data-testid": "field-groups"
  }, /*#__PURE__*/_react.default.createElement(_FieldGroupTabs.FieldGroupTabs, {
    inputId: id,
    onClick: onFieldGroupSelect,
    groups: groups,
    shouldAutoFocus: path.length === 0
  })) : null, columns ? /*#__PURE__*/_react.default.createElement(_ui.Grid, {
    columns: columns,
    gap: 4,
    marginTop: 1
  }, renderObjectMembers()) : renderObjectMembers(), renderedUnknownFields);
});
exports.ObjectInput = ObjectInput;