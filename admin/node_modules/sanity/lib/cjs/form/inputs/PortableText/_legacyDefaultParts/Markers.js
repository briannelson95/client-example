"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultMarkers = DefaultMarkers;

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireWildcard(require("styled-components"));

var _useFormBuilder = require("../../../useFormBuilder");

var _templateObject;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

const getIcon = level => {
  if (level === 'error') {
    return /*#__PURE__*/_react.default.createElement(_icons.ErrorOutlineIcon, null);
  }

  if (level === 'warning') {
    return /*#__PURE__*/_react.default.createElement(_icons.WarningOutlineIcon, null);
  }

  return /*#__PURE__*/_react.default.createElement(_icons.InfoOutlineIcon, null);
};

const IconText = (0, _styledComponents.default)(_ui.Text)(_ref => {
  let {
    theme
  } = _ref;
  return (0, _styledComponents.css)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n    &[data-info] {\n      color: ", ";\n    }\n\n    &[data-warning] {\n      color: ", ";\n    }\n\n    &[data-error] {\n      color: ", ";\n    }\n  "])), theme.sanity.color.muted.primary.enabled.fg, theme.sanity.color.muted.caution.enabled.fg, theme.sanity.color.muted.critical.enabled.fg);
});

function DefaultMarkers(props) {
  const {
    markers,
    validation,
    renderCustomMarkers
  } = props;

  const {
    CustomMarkers
  } = (0, _useFormBuilder.useFormBuilder)().__internal.components;

  if (markers.length === 0 && validation.length === 0) {
    return null;
  }

  return /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 1
  }, validation.length > 0 && validation.map((_ref2, index) => {
    let {
      message,
      level
    } = _ref2;
    return (
      /*#__PURE__*/
      // eslint-disable-next-line react/no-array-index-key
      _react.default.createElement(_ui.Flex, {
        key: "validationItem-".concat(index)
      }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
        marginRight: 2,
        marginBottom: index + 1 === validation.length ? 0 : 2
      }, /*#__PURE__*/_react.default.createElement(IconText, {
        size: 1,
        "data-error": level === 'error' ? '' : undefined,
        "data-warning": level === 'warning' ? '' : undefined,
        "data-info": level === 'info' ? '' : undefined
      }, getIcon(level))), /*#__PURE__*/_react.default.createElement(_ui.Box, null, /*#__PURE__*/_react.default.createElement(_ui.Text, {
        size: 1
      }, message || 'Error')))
    );
  }), markers.length > 0 && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginTop: validation.length > 0 ? 3 : 0
  }, renderCustomMarkers && renderCustomMarkers(markers), !renderCustomMarkers && /*#__PURE__*/_react.default.createElement(CustomMarkers, {
    markers: markers
  })));
}