"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useScrollSelectionIntoView = useScrollSelectionIntoView;

var _portableTextEditor = require("@sanity/portable-text-editor");

var _react = require("react");

var _scrollIntoViewIfNeeded = _interopRequireDefault(require("scroll-into-view-if-needed"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// This hook is used to scroll the editor selection into place when actively editing the document.
function useScrollSelectionIntoView(scrollElement) {
  return (0, _react.useMemo)(() => (editor, domRange) => {
    const selection = _portableTextEditor.PortableTextEditor.getSelection(editor);

    if (selection) {
      const leafEl = domRange.startContainer.parentElement;

      if (!leafEl) {
        return;
      }

      (0, _scrollIntoViewIfNeeded.default)(leafEl, {
        scrollMode: 'if-needed',
        boundary: scrollElement,
        block: 'start',
        inline: 'nearest'
      });
    }
  }, [scrollElement]);
}