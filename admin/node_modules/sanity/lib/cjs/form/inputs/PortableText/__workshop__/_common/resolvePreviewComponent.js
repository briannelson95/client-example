"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resolvePreviewComponent = void 0;

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _preview = require("../../../../../preview");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const resolvePreviewComponent = () => TestPreview;

exports.resolvePreviewComponent = resolvePreviewComponent;

function TestPreview(props) {
  var _props$type, _props$type$type;

  const [errorParams, setErrorParams] = (0, _react.useState)(null);
  const handleCatch = (0, _react.useCallback)(params => {
    setErrorParams(params);
  }, []);
  const handleRetry = (0, _react.useCallback)(() => setErrorParams(null), []);

  if (errorParams) {
    return /*#__PURE__*/_react.default.createElement(_ui.Card, {
      padding: 3,
      tone: "critical"
    }, /*#__PURE__*/_react.default.createElement(_ui.Code, {
      language: "json"
    }, JSON.stringify(errorParams)), /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      marginTop: 3
    }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
      onClick: handleRetry,
      text: "Retry"
    })));
  } // NOTE: Hacky way to preview a block image in the Workshop


  if (((_props$type = props.type) === null || _props$type === void 0 ? void 0 : (_props$type$type = _props$type.type) === null || _props$type$type === void 0 ? void 0 : _props$type$type.name) === 'image') {
    return /*#__PURE__*/_react.default.createElement(_preview.SanityDefaultPreview, _extends({}, props, {
      _renderAsBlockImage: true,
      layout: "block",
      value: {
        media: /*#__PURE__*/_react.default.createElement("img", {
          src: "https://source.unsplash.com/960x960/?tree"
        }),
        ...props.value
      }
    }));
  }

  return /*#__PURE__*/_react.default.createElement(_ui.ErrorBoundary, {
    onCatch: handleCatch
  }, /*#__PURE__*/_react.default.createElement(_preview.SanityPreview, props));
}