"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TEXT_STYLES = exports.Normal = exports.Heading6 = exports.Heading5 = exports.Heading4 = exports.Heading3 = exports.Heading2 = exports.Heading1 = exports.BlockQuote = void 0;

var _ui = require("@sanity/ui");

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _templateObject, _templateObject2;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

// Without this container, editing with Android breaks due to how Text is styled via responsiveFont in @sanity/ui
const TextContainer = _styledComponents.default.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  display: block;\n"])));

const Normal = _ref => {
  let {
    children,
    ...rest
  } = _ref;
  return /*#__PURE__*/_react.default.createElement(_ui.Text, _extends({
    "data-testid": "text-style--normal"
  }, rest), /*#__PURE__*/_react.default.createElement(TextContainer, null, children));
};

exports.Normal = Normal;

const Heading1 = _ref2 => {
  let {
    children,
    ...rest
  } = _ref2;
  return /*#__PURE__*/_react.default.createElement(_ui.Heading, _extends({
    as: "h1",
    "data-testid": "text-style--h1",
    size: 5
  }, rest), /*#__PURE__*/_react.default.createElement(TextContainer, null, children));
};

exports.Heading1 = Heading1;

const Heading2 = _ref3 => {
  let {
    children,
    ...rest
  } = _ref3;
  return /*#__PURE__*/_react.default.createElement(_ui.Heading, _extends({
    as: "h2",
    "data-testid": "text-style--h2",
    size: 4
  }, rest), /*#__PURE__*/_react.default.createElement(TextContainer, null, children));
};

exports.Heading2 = Heading2;

const Heading3 = _ref4 => {
  let {
    children,
    ...rest
  } = _ref4;
  return /*#__PURE__*/_react.default.createElement(_ui.Heading, _extends({
    as: "h3",
    "data-testid": "text-style--h3",
    size: 3
  }, rest), /*#__PURE__*/_react.default.createElement(TextContainer, null, children));
};

exports.Heading3 = Heading3;

const Heading4 = _ref5 => {
  let {
    children,
    ...rest
  } = _ref5;
  return /*#__PURE__*/_react.default.createElement(_ui.Heading, _extends({
    as: "h4",
    "data-testid": "text-style--h4",
    size: 2
  }, rest), /*#__PURE__*/_react.default.createElement(TextContainer, null, children));
};

exports.Heading4 = Heading4;

const Heading5 = _ref6 => {
  let {
    children,
    ...rest
  } = _ref6;
  return /*#__PURE__*/_react.default.createElement(_ui.Heading, _extends({
    as: "h5",
    "data-testid": "text-style--h5",
    size: 1
  }, rest), /*#__PURE__*/_react.default.createElement(TextContainer, null, children));
};

exports.Heading5 = Heading5;

const Heading6 = _ref7 => {
  let {
    children,
    ...rest
  } = _ref7;
  return /*#__PURE__*/_react.default.createElement(_ui.Heading, _extends({
    as: "h6",
    "data-testid": "text-style--h6",
    size: 0
  }, rest), /*#__PURE__*/_react.default.createElement(TextContainer, null, children));
};

exports.Heading6 = Heading6;

const BlockQuoteRoot = _styledComponents.default.blockquote(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  position: relative;\n  display: block;\n  margin: 0;\n  padding-left: ", "px;\n\n  &::before {\n    content: '';\n    position: absolute;\n    left: 0;\n    top: -4px;\n    bottom: -4px;\n    width: 3px;\n    background: var(--card-border-color);\n  }\n"])), _ref8 => {
  let {
    theme
  } = _ref8;
  return theme.sanity.space[3];
});

const BlockQuote = _ref9 => {
  let {
    children,
    ...rest
  } = _ref9;
  return (
    /*#__PURE__*/
    // @todo figure out props typings for BlockQuoteStyleProps
    _react.default.createElement(BlockQuoteRoot, _extends({
      "data-testid": "text-style--blockquote"
    }, rest), /*#__PURE__*/_react.default.createElement(_ui.Text, {
      as: "p"
    }, children))
  );
};

exports.BlockQuote = BlockQuote;
const TEXT_STYLES = {
  normal: Normal,
  h1: Heading1,
  h2: Heading2,
  h3: Heading3,
  h4: Heading4,
  h5: Heading5,
  h6: Heading6,
  blockquote: BlockQuote
};
exports.TEXT_STYLES = TEXT_STYLES;