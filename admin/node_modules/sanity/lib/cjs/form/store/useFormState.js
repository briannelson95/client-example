"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useFormState = useFormState;

var _react = require("react");

var _paths = require("@sanity/util/paths");

var _datastores = require("../../datastores");

var _formState = require("./formState");

var _immutableReconcile = require("./utils/immutableReconcile");

/* eslint-disable camelcase */
function useFormState(schemaType, _ref) {
  let {
    comparisonValue,
    value,
    fieldGroupState,
    collapsedFieldSets,
    collapsedPaths,
    focusPath,
    openPath,
    presence,
    validation
  } = _ref;
  // note: feel free to move these state pieces out of this hook
  const currentUser = (0, _datastores.useCurrentUser)();
  const prev = (0, _react.useRef)(null);
  (0, _react.useLayoutEffect)(() => {
    prev.current = null;
  }, [schemaType]);
  return (0, _react.useMemo)(() => {
    // console.time('derive form state')
    const next = (0, _formState.prepareFormState)({
      schemaType,
      document: value,
      fieldGroupState,
      collapsedFieldSets,
      collapsedPaths,
      value,
      comparisonValue,
      focusPath,
      openPath,
      path: (0, _paths.pathFor)([]),
      level: 0,
      currentUser,
      presence,
      validation
    }); // TODO: remove type cast

    const reconciled = (0, _immutableReconcile.immutableReconcile)(prev.current, next);
    prev.current = reconciled; // console.timeEnd('derive form state')

    return reconciled;
  }, [schemaType, value, fieldGroupState, collapsedFieldSets, collapsedPaths, comparisonValue, focusPath, openPath, currentUser, presence, validation]);
}