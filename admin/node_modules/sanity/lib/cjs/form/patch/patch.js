"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dec = dec;
exports.inc = inc;
exports.insert = insert;
exports.prefixPath = prefixPath;
exports.set = set;
exports.setIfMissing = setIfMissing;
exports.unset = unset;

/* eslint-disable camelcase */
function setIfMissing(value) {
  let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return {
    type: 'setIfMissing',
    path,
    value
  };
}

function insert(items, position) {
  let path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  return {
    type: 'insert',
    path,
    position,
    items
  };
}

function set(value) {
  let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return {
    type: 'set',
    path,
    value
  };
}

function unset() {
  let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return {
    type: 'unset',
    path
  };
}

function inc() {
  let amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return {
    type: 'inc',
    path,
    value: amount
  };
}

function dec() {
  let amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return {
    type: 'dec',
    path,
    value: amount
  };
}

function prefixPath(patch, segment) {
  return { ...patch,
    path: [segment, ...patch.path]
  };
}