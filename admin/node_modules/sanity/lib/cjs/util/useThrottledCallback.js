"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useThrottledCallback = useThrottledCallback;

var _throttle2 = _interopRequireDefault(require("lodash/throttle"));

var _react = require("react");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * @internal
 *
 * @example
 * ```tsx
 * // First create a callback using Reactâ€™s `useCallback` hook
 * const myCallback = useCallback(() => {
 *   // this is not throttled
 * }, [])
 *
 * // Then make a throttled version using the `useThrottledCallback` hook
 * const myThrottledCallback = useThrottledCallback(myCallback, 100)
 *
 * // Call the throttled callback
 * <Button onClick={myThrottledCallback} />
 * ```
 */
function useThrottledCallback(callback, wait, options) {
  const throttledCallback = (0, _react.useMemo)(() => (0, _throttle2.default)(callback, wait, options), [callback, options, wait]);
  (0, _react.useEffect)(() => () => {
    // cleanup: invoke the last value
    throttledCallback.flush();
  }, [throttledCallback]);
  return throttledCallback;
}