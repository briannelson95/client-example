"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.defaultIntentChecker = exports.DEFAULT_INTENT_HANDLER = void 0;

var _DocumentList = require("./DocumentList");

const DEFAULT_INTENT_HANDLER = Symbol('Document type list canHandleIntent');
exports.DEFAULT_INTENT_HANDLER = DEFAULT_INTENT_HANDLER;

const defaultIntentChecker = (intentName, params, _ref) => {
  var _typedSpec$options, _typedSpec$options2;

  let {
    pane
  } = _ref;
  const isEdit = intentName === 'edit';
  const isCreate = intentName === 'create';
  const typedSpec = pane;
  const paneFilter = ((_typedSpec$options = typedSpec.options) === null || _typedSpec$options === void 0 ? void 0 : _typedSpec$options.filter) || '';
  const paneParams = ((_typedSpec$options2 = typedSpec.options) === null || _typedSpec$options2 === void 0 ? void 0 : _typedSpec$options2.params) || {};
  const typeNames = typedSpec.schemaTypeName ? [typedSpec.schemaTypeName] : (0, _DocumentList.getTypeNamesFromFilter)(paneFilter, paneParams);
  const initialValueTemplates = typedSpec.initialValueTemplates || [];

  if (isCreate && params.template) {
    return initialValueTemplates.some(tpl => tpl.templateId === params.template);
  }

  return isEdit && params.id && typeNames.includes(params.type) || isCreate && typeNames.includes(params.type);
};

exports.defaultIntentChecker = defaultIntentChecker;
defaultIntentChecker.identity = DEFAULT_INTENT_HANDLER;