"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DocumentListPane = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _shallowEquals = _interopRequireDefault(require("shallow-equals"));

var _pane = require("../../components/pane");

var _constants = require("../../constants");

var _util = require("../../../util");

var _useDeskToolSetting = require("../../useDeskToolSetting");

var _hooks = require("../../../hooks");

var _studio = require("../../../studio");

var _constants2 = require("./constants");

var _helpers = require("./helpers");

var _DocumentListPaneContent = require("./DocumentListPaneContent");

var _DocumentListPaneHeader = require("./DocumentListPaneHeader");

var _useDocumentList = require("./useDocumentList");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const emptyArray = [];

function useShallowUnique(value) {
  const valueRef = (0, _react.useRef)(value);

  if (!(0, _shallowEquals.default)(valueRef.current, value)) {
    valueRef.current = value;
  }

  return valueRef.current;
}
/**
 * @internal
 */


const DocumentListPane = /*#__PURE__*/(0, _react.memo)(function DocumentListPane(props) {
  const {
    childItemId,
    index,
    isActive,
    isSelected,
    pane,
    paneKey
  } = props;
  const schema = (0, _hooks.useSchema)();
  const {
    name: parentSourceName
  } = (0, _studio.useSource)();
  const {
    defaultLayout = 'default',
    displayOptions,
    initialValueTemplates = emptyArray,
    menuItems,
    menuItemGroups,
    options,
    title
  } = pane;
  const {
    apiVersion,
    defaultOrdering = emptyArray,
    filter
  } = options;
  const params = useShallowUnique(options.params || _constants2.EMPTY_RECORD);
  const sourceName = pane.source;
  const typeName = (0, _react.useMemo)(() => (0, _helpers.getTypeNameFromSingleTypeFilter)(filter, params), [filter, params]);
  const showIcons = (displayOptions === null || displayOptions === void 0 ? void 0 : displayOptions.showIcons) !== false;
  const [layout, setLayout] = (0, _useDeskToolSetting.useDeskToolSetting)(typeName, 'layout', defaultLayout);
  const [sortOrderRaw, setSortOrder] = (0, _useDeskToolSetting.useDeskToolSetting)(typeName, 'sortOrder', _constants2.DEFAULT_ORDERING);
  const sortWithOrderingFn = typeName && sortOrderRaw ? (0, _helpers.applyOrderingFunctions)(sortOrderRaw, schema.get(typeName)) : sortOrderRaw;
  const sortOrder = (0, _util.useUnique)(sortWithOrderingFn);
  const filterIsSimpleTypeContraint = (0, _helpers.isSimpleTypeFilter)(filter);
  const {
    error,
    fullList,
    handleListChange,
    isLoading,
    items,
    onRetry
  } = (0, _useDocumentList.useDocumentList)({
    defaultOrdering,
    filter,
    params,
    sortOrder,
    apiVersion
  });
  return /*#__PURE__*/_react.default.createElement(_studio.SourceProvider, {
    name: sourceName || parentSourceName
  }, /*#__PURE__*/_react.default.createElement(_pane.Pane, {
    currentMaxWidth: 350,
    id: paneKey,
    maxWidth: 640,
    minWidth: 320,
    selected: isSelected
  }, _constants._DEBUG && /*#__PURE__*/_react.default.createElement(_ui.Card, {
    padding: 4,
    tone: "transparent"
  }, /*#__PURE__*/_react.default.createElement(_ui.Code, null, pane.source || '(none)')), /*#__PURE__*/_react.default.createElement(_DocumentListPaneHeader.DocumentListPaneHeader, {
    index: index,
    initialValueTemplates: initialValueTemplates,
    menuItems: menuItems,
    menuItemGroups: menuItemGroups,
    setLayout: setLayout,
    setSortOrder: setSortOrder,
    title: title
  }), /*#__PURE__*/_react.default.createElement(_DocumentListPaneContent.DocumentListPaneContent, {
    childItemId: childItemId,
    error: error,
    filterIsSimpleTypeContraint: filterIsSimpleTypeContraint,
    fullList: fullList,
    isActive: isActive,
    isLoading: isLoading,
    items: items,
    layout: layout,
    onListChange: handleListChange,
    onRetry: onRetry,
    showIcons: showIcons
  })));
});
exports.DocumentListPane = DocumentListPane;