"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DocumentListPaneHeader = void 0;

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _components = require("../../components");

var _useDeskTool = require("../../useDeskTool");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const DocumentListPaneHeader = /*#__PURE__*/(0, _react.memo)(_ref => {
  let {
    index,
    initialValueTemplates = [],
    menuItems = [],
    menuItemGroups = [],
    setLayout,
    setSortOrder,
    title
  } = _ref;
  const {
    features
  } = (0, _useDeskTool.useDeskTool)();
  const actionHandlers = (0, _react.useMemo)(() => {
    return {
      setLayout: _ref2 => {
        let {
          layout: value
        } = _ref2;
        setLayout(value);
      },
      setSortOrder: sort => {
        setSortOrder(sort);
      }
    };
  }, [setLayout, setSortOrder]);
  return /*#__PURE__*/_react.default.createElement(_components.PaneHeader, {
    backButton: features.backButton && index > 0 && /*#__PURE__*/_react.default.createElement(_ui.Button, {
      as: _components.BackLink,
      "data-as": "a",
      icon: _icons.ArrowLeftIcon,
      mode: "bleed"
    }),
    title: title,
    actions: /*#__PURE__*/_react.default.createElement(_components.PaneHeaderActions, {
      initialValueTemplateItems: initialValueTemplates,
      actionHandlers: actionHandlers,
      menuItemGroups: menuItemGroups,
      menuItems: menuItems
    })
  });
});
exports.DocumentListPaneHeader = DocumentListPaneHeader;
DocumentListPaneHeader.displayName = 'DocumentListPaneHeader';