"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.usePreviewUrl = usePreviewUrl;

var _react = require("react");

var _reactRx = require("react-rx");

var _operators = require("rxjs/operators");

var _rxjs = require("rxjs");

var _studio = require("../../../studio");

var _util = require("../../../util");

const isSanityDocument = value => (0, _util.isRecord)(value) && typeof value._id === 'string' && typeof value._type === 'string';

function usePreviewUrl(value) {
  const [previewUrl, setPreviewUrl] = (0, _react.useState)(undefined);
  const [error, setError] = (0, _react.useState)(null);
  const {
    resolveProductionUrl
  } = (0, _studio.useSource)().document;
  const value$ = (0, _reactRx.useAsObservable)(value);
  if (error) throw error;
  (0, _react.useEffect)(() => {
    value$.pipe( // this so that the preview URL isn't fetched on every keystroke
    (0, _operators.debounceTime)(500), (0, _operators.switchMap)(document => isSanityDocument(document) ? (0, _rxjs.from)(resolveProductionUrl({
      document
    })) : (0, _rxjs.of)(undefined)), (0, _operators.catchError)(e => {
      const message = (0, _util.isRecord)(e) && typeof e.message === 'string' ? e.message : 'Unknown error';
      throw new Error("An error was thrown while trying to get your preview url: ".concat(message));
    })).subscribe({
      next: setPreviewUrl,
      error: setError
    });
  }, [resolveProductionUrl, value$]);
  return previewUrl;
}