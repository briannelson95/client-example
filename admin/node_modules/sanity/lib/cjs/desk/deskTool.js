"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.deskTool = void 0;

var _icons = require("@sanity/icons");

var _react = require("react");

var _config = require("../config");

var _getIntentState = require("./getIntentState");

var _router = require("./router");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const deskTool = (0, _config.createPlugin)(options => ({
  name: '@sanity/desk-tool',
  tools: [{
    name: (options === null || options === void 0 ? void 0 : options.name) || 'desk',
    title: (options === null || options === void 0 ? void 0 : options.title) || 'Desk',
    icon: (options === null || options === void 0 ? void 0 : options.icon) || _icons.MasterDetailIcon,
    component: /*#__PURE__*/(0, _react.lazy)(() => Promise.resolve().then(() => _interopRequireWildcard(require('./components/deskTool')))),
    canHandleIntent: (intent, params) => {
      return Boolean(intent === 'edit' && params.id || intent === 'create' && params.type || intent === 'create' && params.template);
    },
    getIntentState: _getIntentState.getIntentState,
    options,
    router: _router.router
  }]
}));
exports.deskTool = deskTool;