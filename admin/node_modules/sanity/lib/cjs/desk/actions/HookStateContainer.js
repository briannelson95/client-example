"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.HookStateContainer = void 0;

var _react = require("react");

var _shallowEquals = _interopRequireDefault(require("shallow-equals"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function useShallowCompareMemoize(value) {
  const ref = (0, _react.useRef)(undefined);

  if (!(0, _shallowEquals.default)(value, ref.current)) {
    ref.current = value;
  }

  return [ref.current];
}

function useShallowCompareEffect(callback, dependencies) {
  (0, _react.useEffect)(callback, useShallowCompareMemoize(dependencies));
}

const HookStateContainer = /*#__PURE__*/(0, _react.memo)(function HookStateContainer(props) {
  const {
    hook,
    args,
    id,
    onNext,
    onReset,
    onRequestUpdate
  } = props;
  const hookState = hook({ ...args,
    onComplete: () => {
      onReset(id);
    }
  });
  useShallowCompareEffect(() => {
    onNext(id, hookState);
    onRequestUpdate();
    return () => {
      onNext(id, null);
      onRequestUpdate();
    };
  }, hookState);
  return null;
}, (prev, next) => prev.args === next.args);
exports.HookStateContainer = HookStateContainer;