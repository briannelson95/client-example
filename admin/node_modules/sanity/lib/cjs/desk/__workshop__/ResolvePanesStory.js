"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ResolvePanesStoryWrapper;

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _constants = require("../constants");

var _DeskToolProvider = require("../DeskToolProvider");

var _structureResolvers = require("../structureResolvers");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/* eslint-disable react/no-array-index-key */
const testPaths = [[], // Opened the `Author` document type list
[[{
  id: 'author'
}]], // Opened the `Author` document type list
// Opened the `foo` document editor
[[{
  id: 'author'
}], [{
  id: 'foo'
}]]];

function ResolvePanesStoryWrapper() {
  return /*#__PURE__*/_react.default.createElement(_DeskToolProvider.DeskToolProvider, {
    structure: (0, _react.useCallback)(S => S.list().title('Content'), [])
  }, /*#__PURE__*/_react.default.createElement(ResolvePanesStory, null));
}

function ResolvePanesStory() {
  const {
    paneDataItems,
    resolvedPanes,
    routerPanes
  } = (0, _structureResolvers.useResolvedPanes)();
  const [testKey, setTestKey] = (0, _react.useState)('0');
  const handleChange = (0, _react.useCallback)(event => {
    const inputValue = event.currentTarget.value;
    setTestKey(inputValue);
  }, []);
  return /*#__PURE__*/_react.default.createElement(_ui.Box, {
    padding: 4
  }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    marginBottom: 5,
    space: 3
  }, testPaths.map((testPath, idx) => /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center",
    as: "label",
    key: idx
  }, /*#__PURE__*/_react.default.createElement(_ui.Radio, {
    checked: String(idx) === testKey,
    name: "path",
    onChange: handleChange,
    value: String(idx)
  }), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    marginLeft: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, /*#__PURE__*/_react.default.createElement("code", null, JSON.stringify(testPath))))))), /*#__PURE__*/_react.default.createElement(_ui.Code, {
    language: "json",
    size: 1
  }, JSON.stringify(routerPanes)), /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    marginTop: 5,
    space: 1
  }, resolvedPanes.map((resolvedPane, idx) => {
    const paneData = paneDataItems[idx];

    if (resolvedPane === _constants.LOADING_PANE) {
      return /*#__PURE__*/_react.default.createElement(_ui.Card, {
        border: true,
        key: idx,
        padding: 4,
        tone: paneData.active ? 'primary' : undefined
      }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, "[Loading\u2026]"));
    }

    if (resolvedPane.type === 'list') {
      var _resolvedPane$items;

      return /*#__PURE__*/_react.default.createElement(_ui.Card, {
        border: true,
        key: idx,
        padding: 4,
        tone: paneData.active ? 'primary' : undefined
      }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
        space: 3
      }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, "[List] ", resolvedPane.title), /*#__PURE__*/_react.default.createElement(_ui.Text, {
        size: 1
      }, /*#__PURE__*/_react.default.createElement("code", null, paneData.path)), /*#__PURE__*/_react.default.createElement(_ui.Code, {
        language: "json",
        size: 1
      }, "".concat(JSON.stringify((_resolvedPane$items = resolvedPane.items) === null || _resolvedPane$items === void 0 ? void 0 : _resolvedPane$items.length), " items"))));
    }

    if (resolvedPane.type === 'documentList') {
      return /*#__PURE__*/_react.default.createElement(_ui.Card, {
        border: true,
        key: idx,
        padding: 4,
        tone: paneData.active ? 'primary' : undefined
      }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
        space: 3
      }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, "[DocumentList] ", resolvedPane.title), /*#__PURE__*/_react.default.createElement(_ui.Text, {
        size: 1
      }, /*#__PURE__*/_react.default.createElement("code", null, paneData.path)), /*#__PURE__*/_react.default.createElement(_ui.Code, {
        language: "json",
        size: 1
      }, JSON.stringify(resolvedPane.options, null, 2))));
    }

    if (resolvedPane.type === 'document') {
      return /*#__PURE__*/_react.default.createElement(_ui.Card, {
        border: true,
        key: idx,
        padding: 4,
        tone: paneData.active ? 'primary' : undefined
      }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
        space: 3
      }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, "[Document]"), /*#__PURE__*/_react.default.createElement(_ui.Text, {
        size: 1
      }, /*#__PURE__*/_react.default.createElement("code", null, paneData.path)), /*#__PURE__*/_react.default.createElement(_ui.Code, {
        language: "json",
        size: 1
      }, JSON.stringify(resolvedPane.options, null, 2))));
    }

    return /*#__PURE__*/_react.default.createElement(_ui.Card, {
      border: true,
      key: idx,
      padding: 4,
      tone: paneData.active ? 'primary' : undefined
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, "[", resolvedPane.type, "] ", resolvedPane.title));
  })));
}