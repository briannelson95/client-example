"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConfirmDeleteDialog = ConfirmDeleteDialogContainer;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _autoId = require("@reach/auto-id");

var _ConfirmDeleteDialog = require("./ConfirmDeleteDialog");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ConfirmDeleteDialogContainer(props) {
  const id = (0, _autoId.useId)();
  const [error, setError] = (0, _react.useState)(null);
  const handleRetry = (0, _react.useCallback)(() => setError(null), []);
  return error ? /*#__PURE__*/_react.default.createElement(_ui.Dialog, {
    id: "dialog-error-".concat(id),
    "data-testid": "confirm-delete-error-dialog",
    header: "Error",
    footer: /*#__PURE__*/_react.default.createElement(_ui.Flex, {
      paddingX: 4,
      paddingY: 3,
      direction: "column"
    }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
      mode: "ghost",
      text: "Retry",
      onClick: handleRetry
    })),
    onClose: props.onCancel
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, {
    padding: 4
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, "An error occurred while loading referencing documents."))) : /*#__PURE__*/_react.default.createElement(_ui.ErrorBoundary, {
    onCatch: setError
  }, /*#__PURE__*/_react.default.createElement(_ConfirmDeleteDialog.ConfirmDeleteDialog, props));
}