"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IntentResolver = IntentResolver;

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _datastores = require("../../../../datastores");

var _util = require("../../../../util");

var _structureResolvers = require("../../../structureResolvers");

var _useDeskTool = require("../../../useDeskTool");

var _Delay = require("../../Delay");

var _Redirect = require("./Redirect");

var _utils = require("./utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * A component that receives an intent from props and redirects to the resolved
 * intent location (while showing a loading spinner during the process)
 */
function IntentResolver(_ref) {
  let {
    intent,
    params: paramsProp = {},
    payload: payloadProp
  } = _ref;
  const {
    rootPaneNode,
    structureContext
  } = (0, _useDeskTool.useDeskTool)();
  const documentStore = (0, _datastores.useDocumentStore)();
  const params = (0, _util.useUnique)(paramsProp);
  const payload = (0, _util.useUnique)(payloadProp);
  const [nextRouterPanes, setNextRouterPanes] = (0, _react.useState)(null);
  const [error, setError] = (0, _react.useState)(null);
  const idParam = typeof params.id === 'string' ? params.id : undefined;
  const typeParam = typeof params.type === 'string' ? params.type : undefined;
  (0, _react.useEffect)(() => {
    const cancelledRef = {
      current: false
    };

    async function getNextRouterPanes() {
      const {
        id,
        type
      } = await (0, _utils.ensureDocumentIdAndType)(documentStore, idParam, typeParam);
      return (0, _structureResolvers.resolveIntent)({
        intent,
        params: { ...params,
          id,
          type
        },
        payload,
        rootPaneNode,
        structureContext
      });
    }

    getNextRouterPanes().then(result => {
      if (!cancelledRef.current) {
        setNextRouterPanes(result);
      }
    }).catch(setError);
    return () => {
      cancelledRef.current = true;
    };
  }, [documentStore, idParam, intent, params, payload, rootPaneNode, structureContext, typeParam]); // throwing here bubbles the error up to the error boundary inside of the
  // `DeskToolRoot` component

  if (error) throw error;
  if (nextRouterPanes) return /*#__PURE__*/_react.default.createElement(_Redirect.Redirect, {
    panes: nextRouterPanes
  });
  return /*#__PURE__*/_react.default.createElement(_ui.Card, {
    height: "fill"
  }, /*#__PURE__*/_react.default.createElement(_Delay.Delay, {
    ms: 300
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center",
    direction: "column",
    height: "fill",
    justify: "center"
  }, /*#__PURE__*/_react.default.createElement(_ui.Spinner, {
    muted: true
  }), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginTop: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    align: "center",
    muted: true,
    size: 1
  }, "Loading\u2026")))));
}