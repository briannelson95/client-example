"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PaneItem = PaneItem;
exports.getIconWithFallback = getIconWithFallback;

var _icons = require("@sanity/icons");

var _types = require("@sanity/types");

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _PreviewCard = require("../../../components/PreviewCard");

var _datastores = require("../../../datastores");

var _hooks = require("../../../hooks");

var _preview = require("../../../preview");

var _MissingSchemaType = require("../MissingSchemaType");

var _paneRouter = require("../paneRouter");

var _PaneItemPreview = require("./PaneItemPreview");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/**
 * Return `false` if we explicitly disable the icon.
 * Otherwise return the passed icon or the schema type icon as a backup.
 */
function getIconWithFallback(icon, schemaType, defaultIcon) {
  if (icon === false) {
    return false;
  }

  return icon || schemaType && schemaType.icon || defaultIcon || false;
}

function PaneItem(props) {
  const {
    icon,
    id,
    layout = 'default',
    pressed,
    schemaType,
    selected,
    title,
    value
  } = props;
  const schema = (0, _hooks.useSchema)();
  const documentPreviewStore = (0, _datastores.useDocumentPreviewStore)();
  const {
    ChildLink
  } = (0, _paneRouter.usePaneRouter)();
  const documentPresence = (0, _datastores.useDocumentPresence)(id);
  const hasSchemaType = Boolean(schemaType && schemaType.name && schema.get(schemaType.name));
  const [clicked, setClicked] = (0, _react.useState)(false);
  const preview = (0, _react.useMemo)(() => {
    if (value && (0, _types.isSanityDocument)(value)) {
      if (!schemaType || !hasSchemaType) {
        return /*#__PURE__*/_react.default.createElement(_MissingSchemaType.MissingSchemaType, {
          value: value
        });
      }

      return /*#__PURE__*/_react.default.createElement(_PaneItemPreview.PaneItemPreview, {
        documentPreviewStore: documentPreviewStore,
        icon: getIconWithFallback(icon, schemaType, _icons.DocumentIcon),
        layout: layout,
        schemaType: schemaType,
        value: value,
        presence: documentPresence
      });
    }

    return /*#__PURE__*/_react.default.createElement(_preview.SanityDefaultPreview, {
      status: /*#__PURE__*/_react.default.createElement(_ui.Text, {
        muted: true
      }, /*#__PURE__*/_react.default.createElement(_icons.ChevronRightIcon, null)),
      icon: getIconWithFallback(icon, schemaType, _icons.FolderIcon),
      layout: layout,
      title: title
    });
  }, [documentPreviewStore, hasSchemaType, icon, layout, schemaType, title, value, documentPresence]);
  const LinkComponent = (0, _react.useMemo)(() =>
  /*#__PURE__*/
  // eslint-disable-next-line @typescript-eslint/no-shadow
  (0, _react.forwardRef)(function LinkComponent(linkProps, ref) {
    return /*#__PURE__*/_react.default.createElement(ChildLink, _extends({}, linkProps, {
      childId: id,
      ref: ref
    }));
  }), [ChildLink, id]);
  const handleClick = (0, _react.useCallback)(() => setClicked(true), []); // Reset `clicked` state when `selected` prop changes

  (0, _react.useEffect)(() => setClicked(false), [selected]);
  return (0, _react.useMemo)(() => /*#__PURE__*/_react.default.createElement(_PreviewCard.PreviewCard, {
    __unstable_focusRing: true,
    as: LinkComponent,
    "data-as": "a",
    "data-ui": "PaneItem",
    padding: 2,
    radius: 2,
    onClick: handleClick,
    pressed: pressed,
    selected: selected || clicked,
    tone: "inherit"
  }, preview), [clicked, handleClick, LinkComponent, pressed, preview, selected]);
}