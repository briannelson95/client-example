"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ParameterizedLink = void 0;

var _react = _interopRequireWildcard(require("react"));

var _router = require("../../../router");

var _util = require("../../../util");

var _PaneRouterContext = require("./PaneRouterContext");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/**
 * @internal
 */
const ParameterizedLink = /*#__PURE__*/(0, _react.forwardRef)(function ParameterizedLink(props, ref) {
  const {
    routerPanesState: currentPanes,
    groupIndex,
    siblingIndex
  } = (0, _react.useContext)(_PaneRouterContext.PaneRouterContext);
  const {
    params,
    payload,
    ...rest
  } = props;
  const nextParams = (0, _util.useUnique)(params);
  const nextPayload = (0, _util.useUnique)(payload);
  const nextState = (0, _react.useMemo)(() => {
    const currentGroup = currentPanes[groupIndex];
    const currentSibling = currentGroup[siblingIndex];
    const nextSibling = { ...currentSibling,
      params: nextParams !== null && nextParams !== void 0 ? nextParams : currentSibling.params,
      payload: nextPayload !== null && nextPayload !== void 0 ? nextPayload : currentSibling.payload
    };
    const nextGroup = [...currentGroup.slice(0, siblingIndex), nextSibling, ...currentGroup.slice(siblingIndex + 1)];
    const nextPanes = [...currentPanes.slice(0, groupIndex), nextGroup, ...currentPanes.slice(groupIndex + 1)];
    return {
      panes: nextPanes
    };
  }, [currentPanes, groupIndex, nextParams, nextPayload, siblingIndex]);
  return /*#__PURE__*/_react.default.createElement(_router.StateLink, _extends({
    ref: ref
  }, rest, {
    state: nextState
  }));
});
exports.ParameterizedLink = ParameterizedLink;