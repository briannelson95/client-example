"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SplitPanesStory = SplitPanesStory;

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _uiWorkshop = require("@sanity/ui-workshop");

var _PaneLayout = require("../../PaneLayout");

var _DocumentPane = require("./DocumentPane");

var _ListPane = require("./ListPane");

var _Navbar = require("./Navbar");

var _config = require("./config");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function SplitPanesStory() {
  const debug = (0, _uiWorkshop.useBoolean)('Debug', false) || false;
  const [portalElement, setPortalElement] = (0, _react.useState)(null);
  const [layoutCollapsed, setLayoutCollapsed] = (0, _react.useState)(false);
  const [path, setPath] = (0, _react.useState)(['root']);
  const handleCollapse = (0, _react.useCallback)(() => setLayoutCollapsed(true), []);
  const handleExpand = (0, _react.useCallback)(() => setLayoutCollapsed(false), []);
  return /*#__PURE__*/_react.default.createElement(_ui.ToastProvider, {
    paddingY: 7,
    zOffset: [100, 11000]
  }, /*#__PURE__*/_react.default.createElement(_ui.PortalProvider, {
    element: portalElement
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    direction: "column",
    height: layoutCollapsed ? undefined : 'fill',
    style: {
      minHeight: '100%'
    }
  }, /*#__PURE__*/_react.default.createElement(_Navbar.Navbar, {
    path: path,
    setPath: setPath
  }), /*#__PURE__*/_react.default.createElement(DeskTool, {
    collapsed: layoutCollapsed,
    onExpand: handleExpand,
    onCollapse: handleCollapse,
    path: path,
    setPath: setPath
  }))), /*#__PURE__*/_react.default.createElement("div", {
    "data-portal": "",
    ref: setPortalElement,
    style: {
      outline: '1px solid red'
    }
  }));
}

function DeskTool(props) {
  const {
    collapsed,
    onCollapse,
    onExpand,
    path,
    setPath
  } = props;
  return /*#__PURE__*/_react.default.createElement(_PaneLayout.PaneLayout, {
    flex: 1,
    height: collapsed ? undefined : 'fill',
    minWidth: 512,
    onCollapse: onCollapse,
    onExpand: onExpand
  }, path.map((s, i) => {
    const key = "".concat(s, "-").concat(i);

    const pane = _config.panes.find(p => p.id === s);

    if (!pane) {
      return /*#__PURE__*/_react.default.createElement("div", {
        key: key
      }, "not found: ", s);
    }

    if (pane.type === 'list') {
      return /*#__PURE__*/_react.default.createElement(_ListPane.ListPane, {
        active: i === path.length - 2,
        childId: path[i + 1],
        index: i,
        key: key,
        node: pane,
        setPath: setPath
      });
    }

    return /*#__PURE__*/_react.default.createElement(_DocumentPane.DocumentPane, {
      index: i,
      key: key,
      node: pane,
      setPath: setPath
    });
  }));
}