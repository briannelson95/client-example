"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = SanityPreviewStory;

var _ui = require("@sanity/ui");

var _uiWorkshop = require("@sanity/ui-workshop");

var _react = _interopRequireWildcard(require("react"));

var _hooks = require("../../hooks");

var _SanityPreview = require("../components/SanityPreview");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const LAYOUT_OPTIONS = {
  Default: 'default',
  Detail: 'detail',
  Media: 'media',
  Inline: 'inline',
  Block: 'block',
  BlockImage: 'blockImage'
};
const VALUE_TYPES = {
  Document: 'document',
  Image: 'image'
};

function SanityPreviewStory() {
  const layout = (0, _uiWorkshop.useSelect)('Layout', LAYOUT_OPTIONS);
  const type = (0, _uiWorkshop.useSelect)('Value type', VALUE_TYPES);
  const schema = (0, _hooks.useSchema)();
  const schemaType = (0, _react.useMemo)(() => {
    if (type === 'image') {
      return schema.get('imagesTest').fields.find(f => f.name === 'mainImage').type;
    }

    return schema.get('author');
  }, [schema, type]);
  const value = (0, _react.useMemo)(() => {
    if (type === 'image') {
      return {
        _type: 'image',
        asset: {
          _ref: 'image-4af4353791af3fd4594c59f5bdc9f5f4a4aba3db-6240x4160-jpg',
          _type: 'reference'
        }
      };
    }

    return {
      _id: 'grrm',
      _type: 'author'
    };
  }, [type]);
  return /*#__PURE__*/_react.default.createElement(_ui.Box, {
    padding: 4
  }, /*#__PURE__*/_react.default.createElement(_ui.Container, {
    width: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Card, {
    border: true,
    padding: 2,
    radius: 2,
    style: {
      lineHeight: 0
    }
  }, /*#__PURE__*/_react.default.createElement(_SanityPreview.SanityPreview, {
    layout: layout,
    schemaType: schemaType,
    value: value
  }))));
}