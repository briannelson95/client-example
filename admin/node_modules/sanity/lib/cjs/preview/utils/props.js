"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.props = props;

var _rxjs = require("rxjs");

var _operators = require("rxjs/operators");

var _keysOf = require("./keysOf");

function setKey(source, key, value) {
  return { ...source,
    [key]: value
  };
}

function props() {
  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return source => {
    return new _rxjs.Observable(observer => source.subscribe(observer)).pipe((0, _operators.switchMap)(object => {
      const keyObservables = (0, _keysOf.keysOf)(object).map(key => {
        const value = object[key];
        return (0, _rxjs.isObservable)(value) ? (0, _rxjs.from)(value).pipe((0, _operators.map)(val => [key, val])) : (0, _rxjs.of)([key, value]);
      });
      return options.wait ? (0, _rxjs.from)(keyObservables).pipe((0, _operators.combineAll)(), (0, _operators.map)(pairs => pairs.reduce((acc, _ref) => {
        let [key, value] = _ref;
        return setKey(acc, key, value);
      }, {}))) : (0, _rxjs.from)(keyObservables).pipe((0, _operators.mergeAll)(), (0, _operators.scan)((acc, _ref2) => {
        let [key, value] = _ref2;
        return setKey(acc, key, value);
      }, {}));
    }));
  };
}