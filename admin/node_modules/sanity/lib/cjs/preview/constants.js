"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.INVALID_PREVIEW_FALLBACK = exports.INCLUDE_FIELDS_QUERY = exports.INCLUDE_FIELDS = exports.AVAILABILITY_READABLE = exports.AVAILABILITY_PERMISSION_DENIED = exports.AVAILABILITY_NOT_FOUND = void 0;

var _icons = require("@sanity/icons");

var _react = _interopRequireDefault(require("react"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const INCLUDE_FIELDS_QUERY = ['_id', '_rev', '_type'];
exports.INCLUDE_FIELDS_QUERY = INCLUDE_FIELDS_QUERY;
const INCLUDE_FIELDS = [...INCLUDE_FIELDS_QUERY, '_key'];
exports.INCLUDE_FIELDS = INCLUDE_FIELDS;
const AVAILABILITY_READABLE = {
  available: true,
  reason: 'READABLE'
};
exports.AVAILABILITY_READABLE = AVAILABILITY_READABLE;
const AVAILABILITY_PERMISSION_DENIED = {
  available: false,
  reason: 'PERMISSION_DENIED'
};
exports.AVAILABILITY_PERMISSION_DENIED = AVAILABILITY_PERMISSION_DENIED;
const AVAILABILITY_NOT_FOUND = {
  available: false,
  reason: 'NOT_FOUND'
};
exports.AVAILABILITY_NOT_FOUND = AVAILABILITY_NOT_FOUND;
const INVALID_PREVIEW_FALLBACK = {
  title: 'Invalid preview config',
  subtitle: 'Check the error log in the console',
  media: /*#__PURE__*/_react.default.createElement(_icons.WarningOutlineIcon, null)
};
exports.INVALID_PREVIEW_FALLBACK = INVALID_PREVIEW_FALLBACK;