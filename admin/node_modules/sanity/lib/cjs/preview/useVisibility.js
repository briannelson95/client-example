"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useVisibility = useVisibility;

var _react = require("react");

var _rxjs = require("rxjs");

var _operators = require("rxjs/operators");

var _intersectionObservableFor = require("./streams/intersectionObservableFor");

var _visibilityChange = require("./streams/visibilityChange");

function useVisibility(props) {
  const {
    element,
    hideDelay = 0
  } = props;
  const [visible, setVisible] = (0, _react.useState)(false);
  (0, _react.useEffect)(() => {
    if (!element) {
      return undefined;
    }

    const isDocumentVisible$ = (0, _rxjs.concat)((0, _rxjs.of)(!document.hidden), _visibilityChange.visibilityChange$.pipe((0, _operators.map)(event => {
      var _event$target;

      return event.target instanceof Document ? !(event !== null && event !== void 0 && (_event$target = event.target) !== null && _event$target !== void 0 && _event$target.hidden) : false;
    }))).pipe((0, _operators.distinctUntilChanged)());
    const inViewport$ = (0, _intersectionObservableFor.intersectionObservableFor)(element).pipe((0, _operators.map)(event => event.isIntersecting));
    const visible$ = isDocumentVisible$.pipe((0, _operators.switchMap)(isDocumentVisible => isDocumentVisible ? inViewport$ : (0, _rxjs.of)(false)), (0, _operators.switchMap)(isVisible => isVisible ? (0, _rxjs.of)(true) : (0, _rxjs.of)(false).pipe((0, _operators.delay)(hideDelay))), (0, _operators.distinctUntilChanged)());
    const sub = visible$.subscribe(setVisible);
    return () => sub.unsubscribe();
  }, [element, hideDelay]);
  return visible;
}