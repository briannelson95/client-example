"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createBufferedDocument = void 0;

var _createObservableBufferedDocument = require("./createObservableBufferedDocument");

const prepare = id => document => {
  const {
    _id,
    _rev,
    _updatedAt,
    ...rest
  } = document;
  return {
    _id: id,
    ...rest
  };
};

const createBufferedDocument = (documentId, listenerEvent$, commitMutations) => {
  const bufferedDocument = (0, _createObservableBufferedDocument.createObservableBufferedDocument)(listenerEvent$, commitMutations);
  const prepareDoc = prepare(documentId);
  const DELETE = {
    delete: {
      id: documentId
    }
  };
  return {
    events: bufferedDocument.updates$,
    consistency$: bufferedDocument.consistency$,
    remoteSnapshot$: bufferedDocument.remoteSnapshot$,
    patch: patches => patches.map(patch => ({
      patch: { ...patch,
        id: documentId
      }
    })),
    create: document => ({
      create: prepareDoc(document)
    }),
    createIfNotExists: document => ({
      createIfNotExists: prepareDoc(document)
    }),
    createOrReplace: document => ({
      createOrReplace: prepareDoc(document)
    }),
    delete: () => DELETE,
    mutate: mutations => bufferedDocument.addMutations(mutations),
    commit: () => bufferedDocument.commit()
  };
};

exports.createBufferedDocument = createBufferedDocument;