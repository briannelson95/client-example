"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.del = void 0;

var _isLiveEditEnabled = require("../utils/isLiveEditEnabled");

const del = {
  disabled: _ref => {
    let {
      snapshots
    } = _ref;
    return snapshots.draft || snapshots.published ? false : 'NOTHING_TO_DELETE';
  },
  execute: _ref2 => {
    let {
      client,
      idPair,
      schema,
      typeName
    } = _ref2;
    const tx = client.observable.transaction().delete(idPair.publishedId);

    if ((0, _isLiveEditEnabled.isLiveEditEnabled)(schema, typeName)) {
      return tx.commit({
        tag: 'document.delete'
      });
    }

    return tx.delete(idPair.draftId).commit({
      tag: 'document.delete',
      visibility: 'async',
      // this disables referential integrity for cross-dataset references. we
      // have this set because we warn against deletes in the `ConfirmDeleteDialog`
      // UI. This operation is run when "delete anyway" is clicked
      skipCrossDatasetReferenceValidation: true
    });
  }
};
exports.del = del;