"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getPairListener = getPairListener;

var _rxjs = require("rxjs");

var _operators = require("rxjs/operators");

/* eslint-disable @typescript-eslint/no-use-before-define */
function getPairListener(client, idPair) {
  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  const {
    publishedId,
    draftId
  } = idPair;
  return (0, _rxjs.defer)(() => client.observable.listen("*[_id == $publishedId || _id == $draftId]", {
    publishedId,
    draftId
  }, {
    includeResult: false,
    events: ['welcome', 'mutation', 'reconnect'],
    effectFormat: 'mendoza',
    tag: options.tag || 'document.pair-listener'
  })).pipe((0, _operators.concatMap)(event => event.type === 'welcome' ? fetchInitialDocumentSnapshots().pipe((0, _operators.concatMap)(snapshots => [createSnapshotEvent(draftId, snapshots.draft), createSnapshotEvent(publishedId, snapshots.published)])) : (0, _rxjs.of)(event)));

  function fetchInitialDocumentSnapshots() {
    return client.observable.getDocuments([draftId, publishedId], {
      tag: 'document.snapshots'
    }).pipe((0, _operators.map)(_ref => {
      let [draft, published] = _ref;
      return {
        draft,
        published
      };
    }));
  }
}

function createSnapshotEvent(documentId, document) {
  return {
    type: 'snapshot',
    documentId,
    document
  };
}