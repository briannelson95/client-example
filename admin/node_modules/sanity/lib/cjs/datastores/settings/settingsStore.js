"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createSettingsStore = createSettingsStore;

var _rxjs = require("rxjs");

var _operators = require("rxjs/operators");

var _resolve = require("./backends/resolve");

function createSettingsStore() {
  const storageBackend = (0, _resolve.resolveBackend)();
  const set$ = new _rxjs.Subject();

  const prefixNamespace = (ns, key) => "".concat(ns, "::").concat(key);

  const updates$ = set$.pipe((0, _operators.switchMap)(event => storageBackend.set(event.key, event.value).pipe((0, _operators.map)(nextValue => ({
    key: event.key,
    value: nextValue
  })))));

  const listen = (key, defValue) => {
    return (0, _rxjs.merge)(storageBackend.get(key, defValue), updates$.pipe((0, _operators.filter)(update => update.key === key), (0, _operators.map)(update => update.value)));
  };

  const set = (key, value) => {
    set$.next({
      key,
      value
    });
  };

  const forNamespace = ns => {
    return {
      forKey: key => {
        const namespacedKey = prefixNamespace(ns, key);
        return {
          listen: defaultValue => listen(namespacedKey, defaultValue),
          set: value => set(namespacedKey, value),
          del: () => set(namespacedKey, undefined)
        };
      },
      listen: (key, defaultValue) => {
        return listen(prefixNamespace(ns, key), defaultValue);
      },
      set: (key, value) => {
        return set(prefixNamespace(ns, key), value);
      },
      del: key => {
        return set(prefixNamespace(ns, key), undefined);
      },
      forNamespace: sub => {
        return forNamespace(prefixNamespace(ns, sub));
      }
    };
  };

  return {
    forNamespace
  };
}