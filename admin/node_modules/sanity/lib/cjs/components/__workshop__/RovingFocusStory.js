"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = RovingFocusStory;

var _ui = require("@sanity/ui");

var _uiWorkshop = require("@sanity/ui-workshop");

var _react = _interopRequireWildcard(require("react"));

var _rovingFocus = require("../rovingFocus");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const DIRECTION_OPTIONS = {
  horizontal: 'horizontal',
  vertical: 'vertical'
};
const INITIAL_FOCUS = {
  first: 'first',
  last: 'last'
};
const FLEX_DIRECTION = {
  horizontal: 'row',
  vertical: 'column'
};
const OPTIONS = [...Array(5).keys()];

function RovingFocusStory() {
  const direction = (0, _uiWorkshop.useSelect)('Direction', DIRECTION_OPTIONS, 'horizontal');
  const initialFocus = (0, _uiWorkshop.useSelect)('Initial focus', INITIAL_FOCUS, 'first');
  const loop = (0, _uiWorkshop.useBoolean)('Loop', true);
  const withDisabled = (0, _uiWorkshop.useBoolean)('With disabled elements', false);
  const [rootElement, setRootElement] = (0, _react.useState)(null);
  (0, _rovingFocus.useRovingFocus)({
    direction: direction,
    initialFocus: initialFocus,
    loop: loop,
    rootElement: rootElement
  });
  return /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    align: "center",
    height: "fill",
    justify: "center"
  }, /*#__PURE__*/_react.default.createElement(_ui.Card, {
    padding: 3,
    radius: 3,
    shadow: 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    gap: 2,
    direction: direction ? FLEX_DIRECTION[direction] : undefined,
    ref: setRootElement
  }, OPTIONS.map(num => /*#__PURE__*/_react.default.createElement(_ui.Button, {
    text: "Option ".concat(num + 1),
    disabled: Boolean(withDisabled && num % 2),
    key: num,
    mode: "ghost",
    padding: 2,
    fontSize: 1
  })))));
}