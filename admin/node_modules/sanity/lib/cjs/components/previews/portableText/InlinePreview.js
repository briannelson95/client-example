"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.InlinePreview = InlinePreview;

var _react = _interopRequireDefault(require("react"));

var _useDevicePixelRatio = require("use-device-pixel-ratio");

var _constants = require("../constants");

var _helpers = require("../helpers");

var _InlinePreview = require("./InlinePreview.styled");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const DEFAULT_MEDIA_DIMENSIONS = { ..._constants.PREVIEW_MEDIA_SIZE.inline,
  fit: 'crop',
  aspect: 1,
  dpr: (0, _useDevicePixelRatio.getDevicePixelRatio)()
};

function InlinePreview(props) {
  const {
    title,
    fallbackTitle = 'Untitled',
    media,
    mediaDimensions = DEFAULT_MEDIA_DIMENSIONS
  } = props;
  return /*#__PURE__*/_react.default.createElement(_InlinePreview.RootSpan, {
    "data-testid": "inline-preview"
  }, media && /*#__PURE__*/_react.default.createElement(_InlinePreview.MediaSpan, {
    "data-testid": "inline-preview-media"
  }, (0, _helpers.renderPreviewMedia)(media, 'inline', mediaDimensions), /*#__PURE__*/_react.default.createElement("span", null)), /*#__PURE__*/_react.default.createElement(_InlinePreview.TextSpan, {
    "data-testid": "inline-preview-title",
    size: 1
  }, (0, _helpers.renderPreviewNode)(title, 'inline', fallbackTitle)));
}