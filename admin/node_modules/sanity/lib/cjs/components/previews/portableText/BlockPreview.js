"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BlockPreview = BlockPreview;

var _ui = require("@sanity/ui");

var _react = _interopRequireDefault(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _useDevicePixelRatio = require("use-device-pixel-ratio");

var _Media = require("../_common/Media");

var _constants = require("../constants");

var _helpers = require("../helpers");

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

const DEFAULT_MEDIA_DIMENSIONS = { ..._constants.PREVIEW_MEDIA_SIZE.block,
  aspect: 1,
  fit: 'crop',
  dpr: (0, _useDevicePixelRatio.getDevicePixelRatio)()
};
const HeaderFlex = (0, _styledComponents.default)(_ui.Flex).attrs({
  align: 'center'
})(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  min-height: ", ";\n"])), (0, _ui.rem)(_constants.PREVIEW_MEDIA_SIZE.block.height));

function BlockPreview(props) {
  const {
    actions,
    title,
    subtitle,
    description,
    mediaDimensions = DEFAULT_MEDIA_DIMENSIONS,
    media,
    status,
    children
  } = props;
  return /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    "data-testid": "block-preview",
    space: 1
  }, /*#__PURE__*/_react.default.createElement(HeaderFlex, {
    "data-testid": "block-preview__header"
  }, media && /*#__PURE__*/_react.default.createElement(_Media.Media, {
    dimensions: mediaDimensions,
    layout: "block",
    media: media
  }), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    flex: 1,
    paddingLeft: media ? 2 : 1
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    textOverflow: "ellipsis",
    weight: "semibold"
  }, title && (0, _helpers.renderPreviewNode)(title, 'block'), !title && /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, "Untitled")), subtitle && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginTop: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 1,
    textOverflow: "ellipsis"
  }, (0, _helpers.renderPreviewNode)(subtitle, 'block'))), description && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    marginTop: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 1,
    textOverflow: "ellipsis"
  }, (0, _helpers.renderPreviewNode)(description, 'block')))), /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    gap: 1,
    paddingLeft: 1
  }, status && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    paddingX: 2,
    paddingY: 3
  }, (0, _helpers.renderPreviewNode)(status, 'block')), actions)), children && /*#__PURE__*/_react.default.createElement("div", {
    "data-testid": "block-preview__children"
  }, children));
}