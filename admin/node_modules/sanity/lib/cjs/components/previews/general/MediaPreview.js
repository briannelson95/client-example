"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MediaPreview = MediaPreview;

var _react = _interopRequireWildcard(require("react"));

var _useDevicePixelRatio = require("use-device-pixel-ratio");

var _ui = require("@sanity/ui");

var _progress = require("../../progress");

var _Media = require("../_common/Media");

var _constants = require("../constants");

var _helpers = require("../helpers");

var _MediaPreview = require("./MediaPreview.styled");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const DEFAULT_MEDIA_DIMENSIONS = { ..._constants.PREVIEW_MEDIA_SIZE.media,
  aspect: 1,
  fit: 'crop',
  dpr: (0, _useDevicePixelRatio.getDevicePixelRatio)()
};

function MediaPreview(props) {
  const {
    media,
    mediaDimensions = DEFAULT_MEDIA_DIMENSIONS,
    children,
    isPlaceholder,
    progress = -1,
    subtitle,
    title,
    withBorder = true,
    withRadius = true
  } = props;
  const aspect = mediaDimensions.aspect || 1;
  const STYLES_PADDER = (0, _react.useMemo)(() => ({
    paddingBottom: "".concat(100 / aspect, "%")
  }), [aspect]);
  const tooltipContent = (0, _react.useMemo)(() => {
    if (!title || !subtitle) {
      return null;
    }

    return /*#__PURE__*/_react.default.createElement(_MediaPreview.TooltipContentStack, null, title && /*#__PURE__*/_react.default.createElement(_ui.Text, {
      align: "center",
      size: 1,
      weight: "semibold"
    }, (0, _helpers.renderPreviewNode)(title, 'media')), subtitle && /*#__PURE__*/_react.default.createElement(_ui.Text, {
      align: "center",
      muted: true,
      size: 1
    }, (0, _helpers.renderPreviewNode)(subtitle, 'media')));
  }, [subtitle, title]);
  return /*#__PURE__*/_react.default.createElement(_MediaPreview.RootBox, {
    "data-testid": "media-preview",
    overflow: "hidden",
    flex: 1
  }, /*#__PURE__*/_react.default.createElement("div", {
    style: STYLES_PADDER
  }), /*#__PURE__*/_react.default.createElement(_ui.Tooltip, {
    content: tooltipContent,
    disabled: !tooltipContent,
    placement: "top",
    portal: true
  }, /*#__PURE__*/_react.default.createElement(_MediaPreview.MediaFlex, null, isPlaceholder ? /*#__PURE__*/_react.default.createElement(_MediaPreview.MediaSkeleton, null) : /*#__PURE__*/_react.default.createElement(_Media.Media, {
    border: withBorder,
    dimensions: mediaDimensions,
    layout: "media",
    media: media,
    radius: withRadius ? 1 : 0,
    responsive: true
  }), typeof progress === 'number' && progress > -1 && /*#__PURE__*/_react.default.createElement(_MediaPreview.ProgressFlex, null, /*#__PURE__*/_react.default.createElement(_progress.CircularProgress, {
    value: progress
  })))), children);
}