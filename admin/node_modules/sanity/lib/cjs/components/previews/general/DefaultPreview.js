"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultPreview = DefaultPreview;

var _react = _interopRequireDefault(require("react"));

var _ui = require("@sanity/ui");

var _classnames = _interopRequireDefault(require("classnames"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _useDevicePixelRatio = require("use-device-pixel-ratio");

var _Media = require("../_common/Media");

var _constants = require("../constants");

var _helpers = require("../helpers");

var _templateObject, _templateObject2, _templateObject3;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

const DEFAULT_MEDIA_DIMENSIONS = { ..._constants.PREVIEW_MEDIA_SIZE.default,
  aspect: 1,
  fit: 'crop',
  dpr: (0, _useDevicePixelRatio.getDevicePixelRatio)()
};
const Root = (0, _styledComponents.default)(_ui.Flex)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  height: ", ";\n"])), (0, _ui.rem)(_constants.PREVIEW_MEDIA_SIZE.default.height));
const TitleSkeleton = (0, _styledComponents.default)(_ui.TextSkeleton).attrs({
  animated: true,
  radius: 1
})(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  max-width: ", ";\n  width: 80%;\n"])), (0, _ui.rem)(160));
const SubtitleSkeleton = (0, _styledComponents.default)(_ui.TextSkeleton).attrs({
  animated: true,
  radius: 1,
  size: 1
})(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  max-width: ", ";\n  width: 60%;\n"])), (0, _ui.rem)(120));

function DefaultPreview(props) {
  const {
    title,
    subtitle,
    media,
    status,
    isPlaceholder,
    children,
    styles
  } = props;
  const rootClassName = (0, _classnames.default)(styles === null || styles === void 0 ? void 0 : styles.root, Boolean(subtitle) && (styles === null || styles === void 0 ? void 0 : styles.hasSubtitle));

  const statusNode = status && /*#__PURE__*/_react.default.createElement(_ui.Box, {
    className: styles === null || styles === void 0 ? void 0 : styles.status,
    "data-testid": "default-preview__status",
    paddingLeft: 3,
    paddingRight: 1
  }, (0, _helpers.renderPreviewNode)(status, 'default'));

  if (isPlaceholder) {
    return /*#__PURE__*/_react.default.createElement(Root, {
      align: "center",
      className: styles === null || styles === void 0 ? void 0 : styles.placeholder,
      "data-testid": "default-preview"
    }, media !== false && /*#__PURE__*/_react.default.createElement(_ui.Skeleton, {
      animated: true,
      marginRight: 2,
      radius: 2,
      style: _constants.PREVIEW_MEDIA_SIZE.default
    }), /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      "data-testid": "default-preview__heading",
      flex: 1,
      paddingLeft: media === false ? 1 : 2,
      paddingRight: status ? 0 : 1,
      space: 2
    }, /*#__PURE__*/_react.default.createElement(TitleSkeleton, null), /*#__PURE__*/_react.default.createElement(SubtitleSkeleton, null)), statusNode);
  }

  return /*#__PURE__*/_react.default.createElement(Root, {
    align: "center",
    className: rootClassName,
    "data-testid": "default-preview"
  }, media !== false && media !== undefined && /*#__PURE__*/_react.default.createElement(_Media.Media, {
    dimensions: DEFAULT_MEDIA_DIMENSIONS,
    layout: "default",
    media: media,
    styles: styles
  }), /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    className: styles === null || styles === void 0 ? void 0 : styles.heading,
    "data-testid": "default-preview__header",
    flex: 1,
    paddingLeft: media ? 2 : 1,
    paddingRight: status ? 0 : 1,
    space: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    className: styles === null || styles === void 0 ? void 0 : styles.title,
    style: {
      color: 'inherit'
    },
    textOverflow: "ellipsis"
  }, title && (0, _helpers.renderPreviewNode)(title, 'default'), !title && /*#__PURE__*/_react.default.createElement("span", {
    style: {
      color: 'var(--card-muted-fg-color)'
    }
  }, "Untitled")), subtitle && /*#__PURE__*/_react.default.createElement(_ui.Text, {
    muted: true,
    size: 1,
    textOverflow: "ellipsis",
    className: styles === null || styles === void 0 ? void 0 : styles.subtitle
  }, (0, _helpers.renderPreviewNode)(subtitle, 'default')), children && /*#__PURE__*/_react.default.createElement("div", {
    className: styles === null || styles === void 0 ? void 0 : styles.children
  }, children)), statusNode);
}