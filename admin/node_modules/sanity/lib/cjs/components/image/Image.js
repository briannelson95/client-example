"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Image = void 0;

var _imageUrl = _interopRequireDefault(require("@sanity/image-url"));

var _react = _interopRequireWildcard(require("react"));

var _hooks = require("../../hooks");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

const Image = /*#__PURE__*/(0, _react.forwardRef)(function Image(props, ref) {
  const {
    dpr,
    fit,
    height,
    source,
    width,
    ...restProps
  } = props;
  const client = (0, _hooks.useClient)();
  const imageUrlBuilder = (0, _react.useMemo)(() => (0, _imageUrl.default)(client), [client]);
  const image = (0, _react.useMemo)(() => imageUrlBuilder.image(source), [imageUrlBuilder, source]);
  const url = (0, _react.useMemo)(() => {
    let b = image;
    if (dpr) b = b.dpr(dpr);
    if (fit) b = b.fit(fit);
    if (width) b = b.width(width);
    if (height) b = b.height(height);
    return b.url();
  }, [dpr, fit, height, image, width]);
  return /*#__PURE__*/_react.default.createElement("img", _extends({}, restProps, {
    ref: ref,
    src: url
  }));
});
exports.Image = Image;