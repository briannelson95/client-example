"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NotAuthenticatedScreen = NotAuthenticatedScreen;

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _providerTitle = require("../../datastores/authStore/providerTitle");

var _activeWorkspaceMatcher = require("../activeWorkspaceMatcher");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function NotAuthenticatedScreen() {
  const [currentUser, setCurrentUser] = (0, _react.useState)(null);
  const [error, handleError] = (0, _react.useState)(null);
  if (error) throw error;
  const {
    activeWorkspace
  } = (0, _activeWorkspaceMatcher.useActiveWorkspace)();
  const handleLogout = (0, _react.useCallback)(() => {
    var _activeWorkspace$auth, _activeWorkspace$auth2;

    (_activeWorkspace$auth = (_activeWorkspace$auth2 = activeWorkspace.auth).logout) === null || _activeWorkspace$auth === void 0 ? void 0 : _activeWorkspace$auth.call(_activeWorkspace$auth2);
  }, [activeWorkspace]);
  (0, _react.useEffect)(() => {
    const subscription = activeWorkspace.auth.state.subscribe({
      next: _ref => {
        let {
          currentUser: user
        } = _ref;
        setCurrentUser(user);
      },
      error: handleError
    });
    return () => {
      subscription.unsubscribe();
    };
  }, [activeWorkspace]);
  const providerTitle = (0, _providerTitle.getProviderTitle)(currentUser === null || currentUser === void 0 ? void 0 : currentUser.provider);
  const providerHelp = providerTitle ? " through ".concat(providerTitle) : '';
  return /*#__PURE__*/_react.default.createElement(_ui.Card, {
    height: "fill"
  }, /*#__PURE__*/_react.default.createElement(_ui.Dialog, {
    id: "not-authorized-dialog",
    header: "Not authorized",
    width: 1,
    footer: /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      paddingX: 3,
      paddingY: 2
    }, /*#__PURE__*/_react.default.createElement(_ui.Button, {
      text: "Sign out",
      onClick: handleLogout
    }))
  }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    paddingX: 4,
    paddingY: 5,
    space: 4
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, null, "You are not authorized to access this studio. Maybe you could ask someone to invite you to collaborate on this project?"), /*#__PURE__*/_react.default.createElement(_ui.Text, null, "If you think this is an error, verify that you are signed in with the correct account. You are currently signed in as", ' ', /*#__PURE__*/_react.default.createElement("strong", null, currentUser === null || currentUser === void 0 ? void 0 : currentUser.name, " (", currentUser === null || currentUser === void 0 ? void 0 : currentUser.email, ")"), providerHelp, "."))));
}