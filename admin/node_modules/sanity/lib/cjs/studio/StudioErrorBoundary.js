"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.StudioErrorBoundary = StudioErrorBoundary;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _config = require("../config");

var _util = require("../util");

var _globalScope = require("../util/globalScope");

var _datastores = require("../datastores");

var _screens = require("./screens");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

const errorChannel = _globalScope.globalScope.__sanityErrorChannel;

function isKnownError(err) {
  if (err instanceof _config.SchemaError) {
    return true;
  }

  if (err instanceof _datastores.CorsOriginError) {
    return true;
  }

  return false;
}

function StudioErrorBoundary(_ref) {
  let {
    children
  } = _ref;
  const [{
    error
  }, setError] = (0, _react.useState)({
    error: null
  });
  const {
    push: pushToast
  } = (0, _ui.useToast)();
  const message = (0, _util.isRecord)(error) && typeof error.message === 'string' && error.message;
  const stack = (0, _util.isRecord)(error) && typeof error.stack === 'string' && error.stack;
  (0, _react.useEffect)(() => {
    if (!errorChannel) return undefined;
    return errorChannel.subscribe(msg => {
      // NOTE: Certain errors (such as the `ResizeObserver loop limit exceeded` error) is thrown
      // by the browser, and does not include an `error` property. We ignore these errors.
      if (!msg.error) {
        return;
      } // For errors that we "expect", eg have specific error screens for, do not push a toast


      if (isKnownError(msg.error)) {
        return;
      }

      console.error(msg.error);
      pushToast({
        closable: true,
        description: msg.error.message,
        duration: 5000,
        title: 'Uncaught error',
        status: 'error'
      });
    });
  }, [pushToast]);

  if (error instanceof _datastores.CorsOriginError) {
    return /*#__PURE__*/_react.default.createElement(_screens.CorsOriginErrorScreen, {
      projectId: error === null || error === void 0 ? void 0 : error.projectId
    });
  }

  if (error instanceof _config.SchemaError) {
    return /*#__PURE__*/_react.default.createElement(_screens.SchemaErrorsScreen, {
      schema: error.schema
    });
  }

  if (error) {
    return /*#__PURE__*/_react.default.createElement(_ui.Card, {
      height: "fill",
      overflow: "auto",
      paddingY: [4, 5, 6, 7],
      paddingX: 4,
      sizing: "border",
      tone: "critical"
    }, /*#__PURE__*/_react.default.createElement(_ui.Container, {
      width: 3
    }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 4
    }, /*#__PURE__*/_react.default.createElement(_ui.Heading, null, "An error occurred"), /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_ui.Button // eslint-disable-next-line react/jsx-no-bind
    , {
      onClick: () => setError({
        error: null
      }),
      text: "Retry",
      tone: "default"
    })), /*#__PURE__*/_react.default.createElement(_ui.Card, {
      border: true,
      radius: 2,
      overflow: "auto",
      padding: 4,
      tone: "inherit"
    }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 4
    }, message && /*#__PURE__*/_react.default.createElement(_ui.Code, {
      size: 1
    }, /*#__PURE__*/_react.default.createElement("strong", null, "Error: ", message)), stack && /*#__PURE__*/_react.default.createElement(_ui.Code, {
      size: 1
    }, stack))))));
  }

  return /*#__PURE__*/_react.default.createElement(_ui.ErrorBoundary, {
    onCatch: setError
  }, children);
}