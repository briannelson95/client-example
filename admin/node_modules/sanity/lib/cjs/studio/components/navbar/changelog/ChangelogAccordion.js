"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChangelogAccordion = ChangelogAccordion;

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

const COMMANDS = ['npm i @sanity/cli -g', 'sanity upgrade'];
const Icon = (0, _styledComponents.default)(_icons.ToggleArrowRightIcon)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  &[data-rotate='true'] {\n    transform: rotate(90deg);\n  }\n"])));

function ChangelogAccordion(props) {
  const {
    defaultOpen
  } = props;
  const [open, setOpen] = (0, _react.useState)(defaultOpen);
  const handleClick = (0, _react.useCallback)(() => setOpen(v => !v), []);
  return /*#__PURE__*/_react.default.createElement(_ui.Card, {
    overflow: "hidden"
  }, /*#__PURE__*/_react.default.createElement(_ui.Stack, null, /*#__PURE__*/_react.default.createElement(_ui.Button, {
    "aria-controls": "upgrade-commands",
    icon: /*#__PURE__*/_react.default.createElement(Icon, {
      "data-rotate": open
    }),
    justify: "flex-start",
    mode: "bleed",
    onClick: handleClick,
    padding: 4,
    radius: 0,
    space: 2,
    text: "How to upgrade"
  })), /*#__PURE__*/_react.default.createElement(_ui.Card, {
    "aria-hidden": !open,
    hidden: !open,
    id: "upgrade-commands",
    overflow: "auto",
    paddingX: 4,
    paddingY: 2,
    role: "region",
    tone: "inherit"
  }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Card, {
    tone: "transparent",
    padding: 3,
    radius: 2
  }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
    space: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Code, {
    language: "bash",
    size: 1
  }, ["# Run these commands to upgrade", ...COMMANDS].join('\n')))), /*#__PURE__*/_react.default.createElement(_ui.Box, {
    paddingX: 2,
    paddingY: 3
  }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
    size: 1,
    muted: true
  }, "If you have problems upgrading, please get in touch with us in the", ' ', /*#__PURE__*/_react.default.createElement("a", {
    href: "https://slack.sanity.io/",
    rel: "noopener noreferrer",
    target: "_blank"
  }, "Sanity Community"), ".")))));
}