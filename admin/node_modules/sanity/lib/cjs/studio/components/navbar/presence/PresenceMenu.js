"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PresenceMenu = PresenceMenu;

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _UserAvatar = require("../../../../components/UserAvatar");

var _datastores = require("../../../../datastores");

var _colorScheme = require("../../../colorScheme");

var _workspace = require("../../../workspace");

var _StatusButton = require("../../StatusButton");

var _PresenceMenuItem = require("./PresenceMenuItem");

var _templateObject, _templateObject2, _templateObject3;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

const MAX_AVATARS = 4;
const AvatarStackCard = (0, _styledComponents.default)(_ui.Card)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  background: transparent;\n"])));
const StyledMenu = (0, _styledComponents.default)(_ui.Menu)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  max-width: 350px;\n  min-width: 250px;\n"])));
const FooterStack = (0, _styledComponents.default)(_ui.Stack)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  position: sticky;\n  bottom: 0;\n"])));

function PresenceMenu(props) {
  const {
    collapse
  } = props;
  const presence = (0, _datastores.useGlobalPresence)();
  const {
    projectId
  } = (0, _workspace.useWorkspace)();
  const hasPresence = presence.length > 0;
  const {
    scheme
  } = (0, _colorScheme.useColorScheme)();
  const button = (0, _react.useMemo)(() => {
    if (collapse) {
      return /*#__PURE__*/_react.default.createElement(_StatusButton.StatusButton, {
        icon: _icons.UsersIcon,
        mode: "bleed",
        active: hasPresence,
        statusTone: "positive"
      });
    }

    return /*#__PURE__*/_react.default.createElement(_ui.Button, {
      mode: "bleed",
      padding: 1
    }, /*#__PURE__*/_react.default.createElement(AvatarStackCard, null, /*#__PURE__*/_react.default.createElement(_ui.AvatarStack, {
      maxLength: MAX_AVATARS
    }, presence.map(item => /*#__PURE__*/_react.default.createElement(_UserAvatar.UserAvatar, {
      key: item.user.id,
      user: item.user
    })))));
  }, [collapse, hasPresence, presence]);
  const popoverProps = (0, _react.useMemo)(() => ({
    constrainSize: true,
    portal: true,
    scheme: scheme
  }), [scheme]);
  return /*#__PURE__*/_react.default.createElement(_ui.MenuButton, {
    id: "global-presence-menu",
    button: button,
    menu: /*#__PURE__*/_react.default.createElement(StyledMenu, {
      padding: 1
    }, hasPresence && /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 2
    }, presence.map(item => /*#__PURE__*/_react.default.createElement(_PresenceMenuItem.PresenceMenuItem, {
      key: item.user.id,
      presence: item
    }))), !hasPresence && /*#__PURE__*/_react.default.createElement(_ui.Box, {
      paddingX: 3,
      paddingY: 4
    }, /*#__PURE__*/_react.default.createElement(_ui.Stack, {
      space: 3
    }, /*#__PURE__*/_react.default.createElement(_ui.Text, {
      weight: "semibold",
      size: 2
    }, "No one else is here"), /*#__PURE__*/_react.default.createElement(_ui.Text, {
      size: 1,
      muted: true
    }, "Invite people to the project to see their online status."))), /*#__PURE__*/_react.default.createElement(FooterStack, {
      space: 1
    }, /*#__PURE__*/_react.default.createElement(_ui.MenuDivider, null), /*#__PURE__*/_react.default.createElement(_ui.MenuItem, {
      as: "a",
      href: "https://sanity.io/manage/project/".concat(projectId),
      iconRight: _icons.CogIcon,
      paddingY: 4,
      rel: "noopener noreferrer",
      target: "_blank",
      text: "Manage members"
    }))),
    popover: popoverProps
  });
}