"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SearchItem = SearchItem;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _PreviewCard = require("../../../../components/PreviewCard");

var _hooks = require("../../../../hooks");

var _presence = require("../../../../presence");

var _router = require("../../../../router");

var _preview = require("../../../../preview");

var _datastores = require("../../../../datastores");

var _util = require("../../../../util");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function SearchItem(props) {
  const {
    documentId,
    documentType,
    onClick,
    ...restProps
  } = props;
  const documentPresence = (0, _datastores.useDocumentPresence)(documentId);
  const schema = (0, _hooks.useSchema)();
  const schemaType = schema.get(documentType);
  const params = (0, _react.useMemo)(() => ({
    id: (0, _util.getPublishedId)(documentId),
    type: documentType
  }), [documentId, documentType]);
  const previewValue = (0, _react.useMemo)(() => ({
    _id: documentId,
    _type: documentType
  }), [documentId, documentType]);
  const LinkComponent = (0, _react.useMemo)(() =>
  /*#__PURE__*/
  // eslint-disable-next-line @typescript-eslint/no-shadow
  (0, _react.forwardRef)(function LinkComponent(linkProps, ref) {
    return /*#__PURE__*/_react.default.createElement(_router.IntentLink, _extends({}, linkProps, {
      intent: "edit",
      params: params,
      tabIndex: -1,
      ref: ref
    }));
  }), [params]);
  if (!schemaType) return null;
  return /*#__PURE__*/_react.default.createElement(_PreviewCard.PreviewCard, _extends({
    "data-as": "a",
    as: LinkComponent,
    onClick: onClick
  }, restProps, {
    radius: 2
  }), /*#__PURE__*/_react.default.createElement(_preview.SanityPreview, {
    layout: "default",
    schemaType: schemaType,
    status: /*#__PURE__*/_react.default.createElement(_ui.Inline, {
      space: 3
    }, documentPresence && documentPresence.length > 0 && /*#__PURE__*/_react.default.createElement(_presence.DocumentPreviewPresence, {
      presence: documentPresence
    }), /*#__PURE__*/_react.default.createElement(_ui.Label, {
      size: 0,
      muted: true
    }, documentType || 'NONE')),
    value: previewValue
  }));
}