"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.NewDocumentButton = NewDocumentButton;

var _react = _interopRequireWildcard(require("react"));

var _ui = require("@sanity/ui");

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _icons = require("@sanity/icons");

var _previews = require("../../../components/previews");

var _InsufficientPermissionsMessage = require("../../../components/InsufficientPermissionsMessage");

var _datastores = require("../../../datastores");

var _router = require("../../../router");

var _source = require("../../source");

var _colorScheme = require("../../colorScheme");

var _templateObject, _templateObject2, _templateObject3;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

const DocumentButton = (0, _styledComponents.default)(_ui.Button)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  text-decoration: none;\n"])));
const TooltipContentBox = (0, _styledComponents.default)(_ui.Box)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  max-width: 300px;\n"])));

const DisabledButtonWrapper = _styledComponents.default.div(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  & > * {\n    width: 100%;\n  }\n"])));

function NewDocumentButton() {
  const [newDocumentButtonEl, setNewDocumentButtonEl] = (0, _react.useState)(null);
  const [open, setOpen] = (0, _react.useState)(false);
  const {
    scheme
  } = (0, _colorScheme.useColorScheme)();
  const {
    __internal: {
      staticInitialValueTemplateItems
    },
    currentUser
  } = (0, _source.useSource)();
  const [permissions, loading] = (0, _datastores.useTemplatePermissions)({
    templateItems: staticInitialValueTemplateItems
  });
  const keyedPermissions = (0, _react.useMemo)(() => {
    if (!permissions) return {};
    return permissions.reduce((acc, next) => {
      acc[next.id] = next;
      return acc;
    }, {});
  }, [permissions]);
  const hasNewDocumentOptions = staticInitialValueTemplateItems.length > 0;
  const canCreateDocument = staticInitialValueTemplateItems.some(t => {
    var _keyedPermissions$t$i;

    return (_keyedPermissions$t$i = keyedPermissions[t.id]) === null || _keyedPermissions$t$i === void 0 ? void 0 : _keyedPermissions$t$i.granted;
  });
  const tooltipContent = (0, _react.useMemo)(() => {
    if (!hasNewDocumentOptions) {
      return /*#__PURE__*/_react.default.createElement(_ui.Text, {
        size: 1
      }, "No document types");
    }

    if (canCreateDocument) {
      return /*#__PURE__*/_react.default.createElement(_ui.Text, {
        size: 1
      }, "New document...");
    }

    return /*#__PURE__*/_react.default.createElement(_InsufficientPermissionsMessage.InsufficientPermissionsMessage, {
      currentUser: currentUser,
      operationLabel: "create any document"
    });
  }, [canCreateDocument, currentUser, hasNewDocumentOptions]);
  const handleOpen = (0, _react.useCallback)(() => {
    setOpen(true);
  }, []);
  const handleClose = (0, _react.useCallback)(() => {
    setOpen(false);
    newDocumentButtonEl === null || newDocumentButtonEl === void 0 ? void 0 : newDocumentButtonEl.focus();
  }, [newDocumentButtonEl]);
  const handleLinkClick = (0, _react.useCallback)(() => {
    setOpen(false);
  }, []);
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(_ui.Tooltip, {
    content: /*#__PURE__*/_react.default.createElement(TooltipContentBox, {
      padding: 2
    }, tooltipContent),
    disabled: loading,
    placement: "bottom",
    portal: true,
    scheme: scheme
  }, /*#__PURE__*/_react.default.createElement(_ui.Box, null, /*#__PURE__*/_react.default.createElement(_ui.Button, {
    "aria-label": "New document\u2026",
    disabled: !canCreateDocument || !hasNewDocumentOptions || loading,
    icon: _icons.ComposeIcon,
    mode: "bleed",
    onClick: handleOpen,
    ref: setNewDocumentButtonEl,
    style: {
      cursor: !canCreateDocument || !hasNewDocumentOptions ? 'not-allowed' : undefined
    }
  }))), open && /*#__PURE__*/_react.default.createElement(_ui.Dialog, {
    header: "New document",
    id: "new-document-dialog",
    onClickOutside: handleClose,
    onClose: handleClose,
    scheme: scheme,
    width: 2
  }, loading && /*#__PURE__*/_react.default.createElement(_ui.Flex, {
    padding: 4,
    align: "center",
    justify: "center"
  }, /*#__PURE__*/_react.default.createElement(_ui.Spinner, {
    muted: true,
    "aria-label": "Loading\u2026"
  })), !loading && /*#__PURE__*/_react.default.createElement(_ui.Grid, {
    padding: 4,
    columns: [1, 1, 2, 3],
    gap: 3
  }, staticInitialValueTemplateItems.map(template => {
    var _keyedPermissions$tem;

    if ((_keyedPermissions$tem = keyedPermissions[template.id]) !== null && _keyedPermissions$tem !== void 0 && _keyedPermissions$tem.granted) {
      return /*#__PURE__*/_react.default.createElement(DocumentButton, {
        forwardedAs: _router.IntentLink,
        intent: "create",
        key: template.id,
        mode: "ghost",
        onClick: handleLinkClick,
        padding: 2,
        params: {
          template: template.templateId,
          type: template.schemaType
        }
      }, /*#__PURE__*/_react.default.createElement(_previews.DefaultPreview, {
        media: template.icon,
        subtitle: template.subtitle,
        title: template.title
      }));
    }

    return /*#__PURE__*/_react.default.createElement(_ui.Tooltip, {
      key: template.id,
      content: /*#__PURE__*/_react.default.createElement(TooltipContentBox, {
        padding: 2
      }, /*#__PURE__*/_react.default.createElement(_InsufficientPermissionsMessage.InsufficientPermissionsMessage, {
        currentUser: currentUser,
        operationLabel: "create this document"
      }))
    }, /*#__PURE__*/_react.default.createElement(DisabledButtonWrapper, null, /*#__PURE__*/_react.default.createElement(DocumentButton, {
      key: template.id,
      mode: "ghost",
      padding: 2,
      disabled: true
    }, /*#__PURE__*/_react.default.createElement(_previews.DefaultPreview, {
      media: template.icon,
      subtitle: template.subtitle,
      title: template.title
    }))));
  }))));
}