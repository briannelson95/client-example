"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _uiWorkshop = require("@sanity/ui-workshop");

var _react = require("react");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var _default = (0, _uiWorkshop.defineScope)('sanity/field', 'Field', [{
  name: 'change-breadcrumb',
  title: 'Change Breadcrumb',
  component: /*#__PURE__*/(0, _react.lazy)(() => Promise.resolve().then(() => _interopRequireWildcard(require('./ChangeBreadcrumbStory'))))
}, {
  name: 'change-list',
  title: 'Change List',
  component: /*#__PURE__*/(0, _react.lazy)(() => Promise.resolve().then(() => _interopRequireWildcard(require('./ChangeListStory'))))
}, {
  name: 'change-resolver',
  title: 'Change Resolver',
  component: /*#__PURE__*/(0, _react.lazy)(() => Promise.resolve().then(() => _interopRequireWildcard(require('./ChangeResolverStory'))))
}, {
  name: 'change-title-segment',
  title: 'Change Title Segment',
  component: /*#__PURE__*/(0, _react.lazy)(() => Promise.resolve().then(() => _interopRequireWildcard(require('./ChangeTitleSegmentStory'))))
}, {
  name: 'diff-card',
  title: 'Diff card',
  component: /*#__PURE__*/(0, _react.lazy)(() => Promise.resolve().then(() => _interopRequireWildcard(require('./DiffCardStory'))))
}, {
  name: 'diff-error-boundary',
  title: 'Diff Error Boundary',
  component: /*#__PURE__*/(0, _react.lazy)(() => Promise.resolve().then(() => _interopRequireWildcard(require('./DiffErrorBoundaryStory'))))
}, {
  name: 'meta-info',
  title: 'Meta info',
  component: /*#__PURE__*/(0, _react.lazy)(() => Promise.resolve().then(() => _interopRequireWildcard(require('./MetaInfoStory'))))
}, {
  name: 'no-changes',
  title: 'No changes',
  component: /*#__PURE__*/(0, _react.lazy)(() => Promise.resolve().then(() => _interopRequireWildcard(require('./NoChangesStory'))))
}, {
  name: 'revert-changes-button',
  title: 'Revert changes button',
  component: /*#__PURE__*/(0, _react.lazy)(() => Promise.resolve().then(() => _interopRequireWildcard(require('./RevertChangesButtonStory'))))
}, {
  name: 'value-error',
  title: 'Value error',
  component: /*#__PURE__*/(0, _react.lazy)(() => Promise.resolve().then(() => _interopRequireWildcard(require('./ValueErrorStory'))))
}]);

exports.default = _default;