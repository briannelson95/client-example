"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ChangeResolver = ChangeResolver;

var _react = _interopRequireDefault(require("react"));

var _ui = require("@sanity/ui");

var _conditionalProperty = require("../../../conditional-property");

var _hooks = require("../hooks");

var _FieldChange = require("./FieldChange");

var _GroupChange = require("./GroupChange");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function ChangeResolver(props) {
  var _change$schemaType, _change$schemaType2;

  const {
    change,
    hidden,
    readOnly
  } = props;
  const {
    value
  } = (0, _hooks.useDocumentChange)();
  const isHidden = (0, _conditionalProperty.unstable_useConditionalProperty)({
    // @todo: is parent missing here?
    document: value,
    checkProperty: hidden || ((_change$schemaType = change.schemaType) === null || _change$schemaType === void 0 ? void 0 : _change$schemaType.hidden),
    checkPropertyKey: 'hidden',
    value: change.type === 'field' ? change.diff.toValue : undefined
  });
  const isReadOnly = (0, _conditionalProperty.unstable_useConditionalProperty)({
    // @todo: is parent missing here?
    document: value,
    checkProperty: readOnly || ((_change$schemaType2 = change.schemaType) === null || _change$schemaType2 === void 0 ? void 0 : _change$schemaType2.readOnly),
    checkPropertyKey: 'readOnly',
    value: change.type === 'field' ? change.diff.toValue : undefined
  });
  if (isHidden) return null;

  if (change.type === 'field') {
    return /*#__PURE__*/_react.default.createElement(_FieldChange.FieldChange, {
      change: change,
      readOnly: isReadOnly
    });
  }

  if (change.type === 'group') {
    return /*#__PURE__*/_react.default.createElement(_GroupChange.GroupChange, {
      change: change,
      "data-testid": "group-change-".concat(change.fieldsetName),
      readOnly: isReadOnly
    });
  }

  return /*#__PURE__*/_react.default.createElement(_ui.Text, null, "Unknown change type: ", /*#__PURE__*/_react.default.createElement("code", null, change.type || 'undefined'));
}