"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RevertChangesButton = void 0;

var _icons = require("@sanity/icons");

var _ui = require("@sanity/ui");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _templateObject;

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

const Root = (0, _styledComponents.default)(_ui.Button)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  [data-ui='Text'] {\n    font-weight: normal;\n  }\n\n  div[data-ui='Box'] {\n    display: none;\n  }\n\n  &:not([data-disabled='true']):hover,\n  &:not([data-disabled='true']):focus {\n    --card-fg-color: ", ";\n    --card-bg-color: transparent;\n    --card-border-color: transparent;\n\n    div[data-ui='Box'] {\n      display: block;\n    }\n  }\n"])), _ref => {
  let {
    theme
  } = _ref;
  return theme.sanity.color.solid.critical.enabled.bg;
});
const RevertChangesButton = /*#__PURE__*/(0, _react.forwardRef)(function RevertChangesButton(props, ref) {
  const {
    selected,
    ...restProps
  } = props;
  return /*#__PURE__*/_react.default.createElement(Root, _extends({
    icon: _icons.RevertIcon,
    selected: selected,
    text: "Revert changes",
    mode: "bleed",
    padding: 1,
    fontSize: 1,
    space: 2,
    ref: ref
  }, restProps));
});
exports.RevertChangesButton = RevertChangesButton;