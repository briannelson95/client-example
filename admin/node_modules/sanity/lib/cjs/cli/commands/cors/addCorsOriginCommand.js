"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _fs = _interopRequireDefault(require("fs"));

var _path = _interopRequireDefault(require("path"));

var _addCorsOrigin = require("../../actions/cors/addCorsOrigin");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const helpText = "\nOptions\n  --credentials Allow credentials (token/cookie) to be sent from this origin\n  --no-credentials Disallow credentials (token/cookie) to be sent from this origin\n\nExamples\n  sanity cors add\n  sanity cors add http://localhost:3000 --no-credentials\n";
const addCorsOriginCommand = {
  name: 'add',
  group: 'cors',
  signature: '[ORIGIN]',
  helpText,
  description: 'Allow a new origin to use your project API through CORS',
  action: async (args, context) => {
    const {
      output
    } = context;
    const [origin] = args.argsWithoutOptions;

    if (!origin) {
      throw new Error('No origin specified, use `sanity cors add <origin-url>`');
    }

    const flags = args.extOptions; // eslint-disable-next-line no-sync

    const isFile = await _fs.default.existsSync(_path.default.join(process.cwd(), origin));

    if (isFile) {
      output.warn("Origin \"".concat(origin, "?\" Remember to quote values (sanity cors add \"*\")"));
    }

    const success = await (0, _addCorsOrigin.addCorsOrigin)(origin, flags, context);

    if (success) {
      output.print('CORS origin added successfully');
    }
  }
};
var _default = addCorsOriginCommand;
exports.default = _default;