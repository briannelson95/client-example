"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.resolveConfigProperty = resolveConfigProperty;

var _ConfigPropertyError = require("./ConfigPropertyError");

const flattenConfig = (_ref, path) => {
  let {
    plugins = [],
    ...currentConfig
  } = _ref;
  return [{
    config: currentConfig,
    path: [...path, currentConfig.name]
  }, ...plugins.flatMap(config => flattenConfig(config, [...path, currentConfig.name]))];
};

function resolveConfigProperty(_ref2) {
  let {
    config: inputConfig,
    context,
    initialValue,
    propertyName,
    ...reducers
  } = _ref2;
  const configs = flattenConfig(inputConfig, []);

  if ('reducer' in reducers) {
    return configs.reduce((acc, _ref3) => {
      let {
        config,
        path
      } = _ref3;

      try {
        return reducers.reducer(acc, config, context);
      } catch (e) {
        throw new _ConfigPropertyError.ConfigPropertyError({
          propertyName,
          path: path,
          cause: e
        });
      }
    }, initialValue);
  }

  const reducer = reducers.asyncReducer;
  return (async () => {
    let current = initialValue;

    for (const {
      config,
      path
    } of configs) {
      try {
        current = await reducer(current, config, context);
      } catch (e) {
        throw new _ConfigPropertyError.ConfigPropertyError({
          propertyName,
          path,
          cause: e
        });
      }
    }

    return current;
  })();
}