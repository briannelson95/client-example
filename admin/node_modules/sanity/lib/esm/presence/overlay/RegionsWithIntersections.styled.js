var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import styled, { css } from 'styled-components';
import { WithIntersection } from './WithIntersection';
export const RootWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  position: relative;\n"])));
export const OverlayWrapper = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  pointer-events: none;\n  z-index: 13;\n"])));
export const RegionWrapper = css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  overflow: hidden;\n  pointer-events: none;\n  position: absolute;\n"])));
export const TopRegionWrapper = styled(WithIntersection)(_ref => {
  let {
    $debug,
    margins
  } = _ref;
  return css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n    ", "\n\n    z-index: 100;\n    position: sticky;\n    height: 1px;\n    top: ", ";\n    background-color: ", ";\n  "])), RegionWrapper, margins ? "".concat(margins[0] - 1, "px") : undefined, $debug ? 'red' : 'none');
});
export const MiddleRegionWrapper = styled(WithIntersection)(_ref2 => {
  let {
    $debug
  } = _ref2;
  return css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n    ", "\n\n    visibility: none;\n\n    ", "\n  "])), RegionWrapper, $debug && css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n      background: rgba(255, 0, 0, 0.25);\n      outline: 1px solid #00b;\n      visibility: visible;\n    "]))));
});
export const BottomRegionWrapper = styled(WithIntersection)(_ref3 => {
  let {
    $debug
  } = _ref3;
  return css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n    ", "\n\n    position: sticky;\n    bottom: -1px;\n    height: 1px;\n    background-color: ", ";\n  "])), RegionWrapper, $debug ? 'blue' : 'transparent');
});