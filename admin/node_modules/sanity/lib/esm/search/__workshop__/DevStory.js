import { Box, Card, Code, Container, Flex, Stack, Text } from '@sanity/ui';
import { useBoolean, useNumber, useString } from '@sanity/ui-workshop';
import React from 'react';
import { useSchema } from '../../hooks';
import { SanityPreview } from '../../preview';
import { useDocumentSearchResults } from '../useDocumentSearchResults';
export default function DevStory() {
  var _useString;

  const schema = useSchema();
  const includeDrafts = useBoolean('Include drafts', true);
  const query = (_useString = useString('Query', 'grrm', 'Props')) !== null && _useString !== void 0 ? _useString : '';
  const limit = useNumber('Limit', 10, 'Props') || 1;
  const results = useDocumentSearchResults({
    includeDrafts,
    limit,
    query
  });
  return /*#__PURE__*/React.createElement(Box, {
    padding: 4
  }, /*#__PURE__*/React.createElement(Container, {
    width: 1
  }, /*#__PURE__*/React.createElement(Stack, {
    space: 2
  }, results.value.map(result => {
    const type = schema.get(result.hit._type);

    if (!type) {
      return /*#__PURE__*/React.createElement(Card, {
        border: true,
        key: result.hit._id,
        padding: 3,
        tone: "critical"
      }, /*#__PURE__*/React.createElement(Text, {
        size: 1
      }, "Unknown type: ", /*#__PURE__*/React.createElement("code", null, result.hit._type)));
    }

    return /*#__PURE__*/React.createElement(Card, {
      border: true,
      key: result.hit._id
    }, /*#__PURE__*/React.createElement(Box, {
      padding: 2
    }, /*#__PURE__*/React.createElement(SanityPreview, {
      schemaType: type,
      value: {
        _type: result.hit._type,
        _id: result.hit._id
      }
    })), /*#__PURE__*/React.createElement(Card, {
      tone: "transparent"
    }, /*#__PURE__*/React.createElement(Flex, {
      padding: 3
    }, /*#__PURE__*/React.createElement(Box, {
      flex: 1
    }, /*#__PURE__*/React.createElement(Code, {
      size: 1
    }, result.hit._id)), /*#__PURE__*/React.createElement(Code, {
      size: 1
    }, result.score.toFixed(2)))));
  }))));
}