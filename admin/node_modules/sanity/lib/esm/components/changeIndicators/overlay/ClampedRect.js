function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
export function ClampedRect(props) {
  const {
    bounds,
    ...rest
  } = props;
  const x = Math.max(bounds.left, props.left);
  const y = Math.max(props.top, bounds.top);
  const height = Math.max(0, props.height - (y - props.top));
  const width = Math.max(0, props.width - (x - props.left));
  return /*#__PURE__*/React.createElement("rect", _extends({}, rest, {
    x: x,
    y: y,
    height: height,
    width: width
  }));
}