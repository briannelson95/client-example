import { DocumentIcon, EditIcon } from '@sanity/icons';
import { Card, Container, Flex, Text } from '@sanity/ui';
import { useBoolean, useNumber, useSelect, useString, useText } from '@sanity/ui-workshop';
import React, { createElement, useMemo } from 'react';
import { DefaultPreview } from '../general/DefaultPreview';
import { DetailPreview } from '../general/DetailPreview';
import { MediaPreview } from '../general/MediaPreview';
import { PREVIEW_MEDIA_SIZE } from '../constants'; // Exclude deprecated layout mode

const MEDIA_OPTIONS = {
  None: 'none',
  Image: 'image',
  Icon: 'icon',
  Text: 'text'
};
const LAYOUT_OPTIONS = {
  Default: 'default',
  Detail: 'detail',
  Media: 'media'
};
const previewComponents = {
  default: DefaultPreview,
  detail: DetailPreview,
  media: MediaPreview
};
export default function GeneralPreviewStory() {
  const layout = useSelect('Layout', LAYOUT_OPTIONS, 'default');
  const isPlaceholder = useBoolean('Is placeholder', false);
  const interactive = useBoolean('Interactive', false);
  const mediaKey = useSelect('Media', MEDIA_OPTIONS) || 'none';
  const title = useString('Title', 'Title', 'Props');
  const subtitle = useString('Subtitle', 'Subtitle', 'Props');
  const description = useText('Description', undefined, 'Props');
  const selected = useBoolean('Selected', false, 'Props');
  const status = useBoolean('Status', false);
  const progress = useNumber('Progress (%)', 50);
  const media = useMemo(() => {
    const {
      width,
      height
    } = layout ? PREVIEW_MEDIA_SIZE[layout] : PREVIEW_MEDIA_SIZE.default;

    if (mediaKey === 'image') {
      return /*#__PURE__*/React.createElement("img", {
        src: "https://source.unsplash.com/".concat(width * 2, "x").concat(height * 2, "/?abstract")
      });
    }

    if (mediaKey === 'icon') {
      return /*#__PURE__*/React.createElement(DocumentIcon, null);
    }

    if (mediaKey === 'text') {
      return 'T';
    }

    return false;
  }, [layout, mediaKey]);
  const component = layout && previewComponents[layout];

  if (!component) {
    return /*#__PURE__*/React.createElement(Flex, {
      align: "center",
      height: "fill",
      justify: "center",
      padding: 4,
      sizing: "border"
    }, /*#__PURE__*/React.createElement(Text, null, "Unknown layout: ", layout));
  }

  return /*#__PURE__*/React.createElement(Card, {
    height: "fill",
    tone: "transparent"
  }, /*#__PURE__*/React.createElement(Flex, {
    align: "center",
    height: "fill",
    justify: "center",
    padding: 4,
    sizing: "border"
  }, /*#__PURE__*/React.createElement(Container, {
    width: 0
  }, /*#__PURE__*/React.createElement(Card, {
    "data-as": interactive ? 'button' : undefined,
    padding: 2,
    radius: 2,
    selected: interactive ? selected : undefined,
    style: {
      lineHeight: 0
    }
  }, /*#__PURE__*/createElement(component, {
    description,
    isPlaceholder,
    media,
    progress,
    status: status && /*#__PURE__*/React.createElement(Text, {
      muted: true,
      size: 1
    }, /*#__PURE__*/React.createElement(EditIcon, null)),
    title,
    subtitle
  })))));
}