var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import { Box, Flex, rem, Skeleton, Text, TextSkeleton } from '@sanity/ui';
import styled, { css } from 'styled-components';
import { PREVIEW_MEDIA_SIZE } from '../constants';
export const RootFlex = styled(Flex).attrs({
  align: 'center'
})(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  height: ", ";\n"])), rem(PREVIEW_MEDIA_SIZE.detail.height));
export const StatusBox = styled(Box)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  white-space: nowrap;\n"])));
export const MediaSkeleton = styled(Skeleton).attrs({
  animated: true,
  radius: 2
})(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  width: ", ";\n  height: ", ";\n"])), rem(PREVIEW_MEDIA_SIZE.detail.width), rem(PREVIEW_MEDIA_SIZE.detail.height));
export const TitleSkeleton = styled(TextSkeleton).attrs({
  animated: true,
  radius: 1
})(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  max-width: ", "; /* 80% of 200px */\n  width: 80%;\n"])), rem(160));
export const SubtitleSkeleton = styled(TextSkeleton).attrs({
  animated: true,
  radius: 1,
  size: 1
})(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n  max-width: ", "; /* 60% of 200px */\n  width: 60%;\n"])), rem(120));
export const DescriptionSkeleton = styled(TextSkeleton).attrs({
  animated: true,
  radius: 1,
  size: 1
})(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n  max-width: ", "; /* 90% of 200px */\n  width: 90%;\n"])), rem(180));
export const DescriptionText = styled(Text)(_ref => {
  let {
    theme
  } = _ref;
  const {
    fonts
  } = theme.sanity;
  const textSize1 = fonts.text.sizes[1];
  const maxLines = 2;
  const maxHeight = textSize1.lineHeight * maxLines;
  return css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n    & > span {\n      max-height: ", ";\n\n      /* Multi-line text overflow */\n      display: -webkit-box;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      -webkit-line-clamp: ", ";\n      -webkit-box-orient: vertical;\n    }\n  "])), rem(maxHeight), maxLines);
});