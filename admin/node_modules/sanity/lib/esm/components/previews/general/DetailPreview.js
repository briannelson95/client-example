import React from 'react';
import { Box, Flex, Stack, Text } from '@sanity/ui';
import { getDevicePixelRatio } from 'use-device-pixel-ratio';
import { Media } from '../_common/Media';
import { PREVIEW_MEDIA_SIZE } from '../constants';
import { renderPreviewNode } from '../helpers';
import { DescriptionSkeleton, DescriptionText, MediaSkeleton, RootFlex, StatusBox, SubtitleSkeleton, TitleSkeleton } from './DetailPreview.styled';
const DEFAULT_MEDIA_DIMENSIONS = { ...PREVIEW_MEDIA_SIZE.detail,
  fit: 'crop',
  aspect: 1,
  dpr: getDevicePixelRatio()
};
export function DetailPreview(props) {
  const {
    title,
    subtitle,
    description,
    mediaDimensions = DEFAULT_MEDIA_DIMENSIONS,
    media,
    status,
    children,
    isPlaceholder
  } = props;
  const statusNode = status && /*#__PURE__*/React.createElement(StatusBox, {
    marginLeft: 3,
    paddingRight: 1
  }, renderPreviewNode(status, 'detail'));

  if (isPlaceholder) {
    return /*#__PURE__*/React.createElement(RootFlex, {
      "data-testid": "detail-preview"
    }, media !== false && /*#__PURE__*/React.createElement(MediaSkeleton, {
      "data-testid": "detail-preview__media"
    }), /*#__PURE__*/React.createElement(Box, {
      flex: 1,
      paddingLeft: media === false ? 1 : 2
    }, /*#__PURE__*/React.createElement(Flex, {
      align: "center",
      "data-testid": "detail-preview__header"
    }, /*#__PURE__*/React.createElement(Stack, {
      flex: 1,
      space: 2
    }, /*#__PURE__*/React.createElement(TitleSkeleton, null), /*#__PURE__*/React.createElement(SubtitleSkeleton, null)), statusNode), description && /*#__PURE__*/React.createElement(Box, {
      marginTop: 3
    }, /*#__PURE__*/React.createElement(DescriptionSkeleton, null))));
  }

  return /*#__PURE__*/React.createElement(RootFlex, {
    "data-testid": "detail-preview"
  }, media !== false && /*#__PURE__*/React.createElement(Media, {
    dimensions: mediaDimensions,
    layout: "detail",
    media: media
  }), /*#__PURE__*/React.createElement(Box, {
    flex: 1,
    paddingLeft: media === false ? 1 : 2
  }, /*#__PURE__*/React.createElement(Flex, {
    align: "center",
    "data-testid": "detail-preview__header"
  }, /*#__PURE__*/React.createElement(Stack, {
    flex: 1,
    space: 2
  }, /*#__PURE__*/React.createElement(Text, {
    textOverflow: "ellipsis",
    style: {
      color: 'inherit'
    }
  }, title && renderPreviewNode(title, 'detail'), !title && /*#__PURE__*/React.createElement(React.Fragment, null, "Untitled")), subtitle && /*#__PURE__*/React.createElement(Text, {
    muted: true,
    size: 1,
    textOverflow: "ellipsis"
  }, renderPreviewNode(subtitle, 'detail'))), statusNode), description && /*#__PURE__*/React.createElement(Box, {
    marginTop: 3
  }, /*#__PURE__*/React.createElement(DescriptionText, {
    muted: true,
    size: 1
  }, renderPreviewNode(description, 'detail')))), children);
}