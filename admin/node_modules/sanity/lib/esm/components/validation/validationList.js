import React, { useCallback } from 'react';
import { isValidationErrorMarker, isValidationWarningMarker, isValidationInfoMarker } from '@sanity/types';
import { Container } from '@sanity/ui';
import { ListItem } from './listItem';
export function ValidationList(props) {
  const {
    documentType,
    kind,
    validation,
    onFocus,
    onClose,
    truncate
  } = props;
  const errors = validation.filter(isValidationErrorMarker);
  const warnings = validation.filter(isValidationWarningMarker);
  const info = validation.filter(isValidationInfoMarker);
  const handleClick = useCallback(function () {
    let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    if (onFocus) onFocus(path);
    if (onClose) onClose();
  }, [onFocus, onClose]);

  const resolvePathTitle = path => {
    const fields = documentType && documentType.fields;
    const field = fields && fields.find(curr => curr.name === path[0]);
    return field && field.type.title || '';
  };

  const hasErrors = errors.length > 0;
  const hasWarnings = warnings.length > 0;
  const hasInfo = info.length > 0;

  if (!hasErrors && !hasWarnings && !hasInfo) {
    return null;
  }

  return /*#__PURE__*/React.createElement(Container, {
    width: 0,
    "data-kind": kind,
    "data-testid": "validation-list"
  }, hasErrors && errors.map((_error, i) => /*#__PURE__*/React.createElement(ListItem // eslint-disable-next-line react/no-array-index-key
  , {
    key: i,
    truncate: truncate,
    path: resolvePathTitle(_error.path),
    marker: _error,
    onClick: handleClick
  })), hasWarnings && warnings.map((_warning, i) => /*#__PURE__*/React.createElement(ListItem // eslint-disable-next-line react/no-array-index-key
  , {
    key: i,
    truncate: truncate,
    path: resolvePathTitle(_warning.path),
    marker: _warning,
    onClick: handleClick
  })), hasInfo && info.map((_info, i) => /*#__PURE__*/React.createElement(ListItem // eslint-disable-next-line react/no-array-index-key
  , {
    key: i,
    truncate: truncate,
    path: resolvePathTitle(_info.path),
    marker: _info,
    onClick: handleClick
  })));
}