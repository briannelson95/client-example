function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { Button } from '@sanity/ui';
import { IntentLink } from '../router';
/**
 * @beta
 */

export function IntentButton(props) {
  return props.disabled ? /*#__PURE__*/React.createElement(Button, _extends({}, props, {
    as: "a",
    role: "link",
    "aria-disabled": "true"
  })) : /*#__PURE__*/React.createElement(Button, _extends({}, props, {
    as: IntentLink
  }));
}