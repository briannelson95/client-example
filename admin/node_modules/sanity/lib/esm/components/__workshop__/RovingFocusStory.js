import { Button, Card, Flex } from '@sanity/ui';
import { useBoolean, useSelect } from '@sanity/ui-workshop';
import React, { useState } from 'react';
import { useRovingFocus } from '../rovingFocus';
const DIRECTION_OPTIONS = {
  horizontal: 'horizontal',
  vertical: 'vertical'
};
const INITIAL_FOCUS = {
  first: 'first',
  last: 'last'
};
const FLEX_DIRECTION = {
  horizontal: 'row',
  vertical: 'column'
};
const OPTIONS = [...Array(5).keys()];
export default function RovingFocusStory() {
  const direction = useSelect('Direction', DIRECTION_OPTIONS, 'horizontal');
  const initialFocus = useSelect('Initial focus', INITIAL_FOCUS, 'first');
  const loop = useBoolean('Loop', true);
  const withDisabled = useBoolean('With disabled elements', false);
  const [rootElement, setRootElement] = useState(null);
  useRovingFocus({
    direction: direction,
    initialFocus: initialFocus,
    loop: loop,
    rootElement: rootElement
  });
  return /*#__PURE__*/React.createElement(Flex, {
    align: "center",
    height: "fill",
    justify: "center"
  }, /*#__PURE__*/React.createElement(Card, {
    padding: 3,
    radius: 3,
    shadow: 1
  }, /*#__PURE__*/React.createElement(Flex, {
    gap: 2,
    direction: direction ? FLEX_DIRECTION[direction] : undefined,
    ref: setRootElement
  }, OPTIONS.map(num => /*#__PURE__*/React.createElement(Button, {
    text: "Option ".concat(num + 1),
    disabled: Boolean(withDisabled && num % 2),
    key: num,
    mode: "ghost",
    padding: 2,
    fontSize: 1
  })))));
}