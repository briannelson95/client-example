function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { CloseIcon } from '@sanity/icons';
import { Box, Button, Card, Container, Flex, Popover, Text } from '@sanity/ui';
import React from 'react';
export function PopoverDialog(props) {
  const {
    children,
    header,
    onClose,
    width,
    ...restProps
  } = props;
  return /*#__PURE__*/React.createElement(Popover, _extends({}, restProps, {
    content: /*#__PURE__*/React.createElement(Container, {
      width: width
    }, /*#__PURE__*/React.createElement(Flex, {
      direction: "column"
    }, /*#__PURE__*/React.createElement(Card, {
      flex: "none"
    }, /*#__PURE__*/React.createElement(Flex, null, /*#__PURE__*/React.createElement(Box, {
      flex: 1
    }, /*#__PURE__*/React.createElement(Text, {
      weight: "semibold"
    }, header)), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Button, {
      icon: CloseIcon,
      onClick: onClose
    })))), /*#__PURE__*/React.createElement(Card, {
      flex: 1,
      overflow: "auto"
    }, children)))
  }));
}