import { distinctUntilChanged, map } from 'rxjs/operators';
import { isRecord } from '../util';
import { createPathObserver } from './createPathObserver';
import { createPreviewObserver } from './createPreviewObserver';
import { create_preview_observeFields } from './observeFields';
import { create_preview_availability } from './availability';
import { create_preview_documentPair } from './documentPair';
export function createDocumentPreviewStore(_ref) {
  let {
    crossProjectTokenStore,
    client
  } = _ref;
  const versionedClient = client.withConfig({
    apiVersion: '1'
  }); // NOTE: this is workaroudn for circumventing a circular dependency between `observePaths` and
  // `observeFields`.
  // eslint-disable-next-line camelcase

  const __proxy_observePaths = (value, paths, apiConfig) => {
    return observePaths(value, paths, apiConfig);
  };

  const {
    observeFields
  } = create_preview_observeFields({
    crossProjectTokenStore,
    observePaths: __proxy_observePaths,
    versionedClient
  });
  const {
    observePaths
  } = createPathObserver({
    observeFields
  });

  function observeDocumentTypeFromId(id, apiConfig) {
    return observePaths({
      _type: 'reference',
      _ref: id
    }, ['_type']).pipe(map(res => isRecord(res) && typeof res._type === 'string' ? res._type : undefined), distinctUntilChanged());
  } // const {createPreviewObserver} = create_preview_createPreviewObserver(observeDocumentTypeFromId)


  const observeForPreview = createPreviewObserver({
    observeDocumentTypeFromId,
    observePaths
  });
  const {
    observeDocumentPairAvailability
  } = create_preview_availability(versionedClient, observePaths);
  const {
    observePathsDocumentPair
  } = create_preview_documentPair(versionedClient, observePaths); // @todo: explain why the API is like this now, and that it should not be like this in the future!

  return {
    observePaths,
    observeForPreview,
    observeDocumentTypeFromId,
    // eslint-disable-next-line camelcase
    unstable_observeDocumentPairAvailability: observeDocumentPairAvailability,
    unstable_observePathsDocumentPair: observePathsDocumentPair
  };
}