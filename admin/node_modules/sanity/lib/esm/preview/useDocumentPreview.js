import { useEffect, useState } from 'react';
import { useDocumentPreviewStore } from '../datastores';
export { useDocumentPreview as unstable_useDocumentPreview };
/**
 * @deprecated FOR INTERNAL USE.
 */

function useDocumentPreview(props) {
  const {
    enabled = true,
    ordering,
    schemaType,
    value: previewValue
  } = props || {};
  const {
    observeForPreview
  } = useDocumentPreviewStore();
  const [error, setError] = useState(null);
  const [value, setValue] = useState(null);
  useEffect(() => {
    if (!enabled || !previewValue || !schemaType) return undefined;
    const snapshotEvent$ = observeForPreview(previewValue, schemaType, {
      ordering
    });
    const sub = snapshotEvent$.subscribe({
      error(nextError) {
        setError(nextError);
      },

      next(nextValue) {
        setValue(nextValue.snapshot || null);
      }

    });
    return () => sub.unsubscribe();
  }, [enabled, observeForPreview, ordering, schemaType, previewValue]);
  return {
    error,
    value
  };
}