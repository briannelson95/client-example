var _templateObject;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import { Heading } from '@sanity/ui';
import React from 'react';
import styled from 'styled-components';
const headingSizes = {
  h1: 2,
  h2: 1,
  h3: 0,
  h4: 0,
  h5: 0,
  h6: 0
};
const StyledHeading = styled(Heading)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  &:not([hidden]) {\n    display: inline;\n    text-transform: none;\n    margin: 0;\n\n    &::before,\n    &::after {\n      content: unset;\n    }\n  }\n"])));
export default function Header(_ref) {
  let {
    style,
    children
  } = _ref;
  return /*#__PURE__*/React.createElement(StyledHeading, {
    size: headingSizes[style]
  }, children);
}