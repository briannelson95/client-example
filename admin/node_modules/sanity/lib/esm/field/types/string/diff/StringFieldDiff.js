var _templateObject;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import styled from 'styled-components';
import { DiffFromTo, DiffString } from '../../../diff';
import { StringPreview } from '../preview/StringPreview';
const StringWrapper = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  white-space: pre-wrap;\n  word-wrap: break-word;\n"])));
export const StringFieldDiff = _ref => {
  let {
    diff,
    schemaType
  } = _ref;
  const {
    options
  } = schemaType;

  if (options !== null && options !== void 0 && options.list) {
    // When the string is considered to be an "enum", don't show individual
    // string segment changes, rather treat is as a "from -> to" diff
    return /*#__PURE__*/React.createElement(DiffFromTo, {
      diff: diff,
      previewComponent: StringPreview,
      schemaType: schemaType
    });
  }

  return /*#__PURE__*/React.createElement(StringWrapper, null, /*#__PURE__*/React.createElement(DiffString, {
    diff: diff
  }));
};