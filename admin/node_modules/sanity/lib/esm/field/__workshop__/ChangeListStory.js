import { Card, Container } from '@sanity/ui';
import React, { useCallback, useMemo } from 'react';
import { useSchema } from '../../hooks';
import { ChangeList, DocumentChangeContext } from '../diff';
export default function ChangeListStory() {
  const documentId = 'test';
  const documentType = 'author';
  const schema = useSchema();
  const schemaType = schema.get(documentType);
  const nameDiff = useMemo(() => ({
    type: 'string',
    action: 'changed',
    isChanged: true,
    fromValue: '',
    toValue: 'Test',
    annotation: {
      chunk: {
        index: 0,
        id: 'foo',
        type: 'editDraft',
        start: 0,
        end: 0,
        startTimestamp: new Date('2021-01-01').toJSON(),
        endTimestamp: new Date('2021-01-02').toJSON(),
        authors: new Set(['p27ewL8aM']),
        draftState: 'present',
        publishedState: 'missing'
      },
      timestamp: new Date('2021-01-02').toJSON(),
      author: 'p27ewL8aM'
    },
    segments: []
  }), []);
  const diff = useMemo(() => ({
    type: 'object',
    action: 'changed',
    isChanged: true,
    fields: {
      name: nameDiff
    },
    fromValue: {
      name: ''
    },
    toValue: {
      name: 'Test'
    },
    annotation: {
      chunk: {
        index: 0,
        id: 'foo',
        type: 'editDraft',
        start: 0,
        end: 0,
        startTimestamp: new Date('2021-01-01').toJSON(),
        endTimestamp: new Date('2021-01-02').toJSON(),
        authors: new Set(['p27ewL8aM']),
        draftState: 'present',
        publishedState: 'missing'
      },
      timestamp: new Date('2021-01-02').toJSON(),
      author: 'p27ewL8aM'
    }
  }), [nameDiff]);
  const FieldWrapper = useCallback(_props => {
    // console.log('props', _props)
    return /*#__PURE__*/React.createElement(Card, null, _props.children);
  }, []);
  const documentContext = useMemo(() => ({
    documentId,
    FieldWrapper,
    isComparingCurrent: true,
    rootDiff: diff,
    schemaType,
    value: {
      name: 'Test'
    }
  }), [diff, documentId, FieldWrapper, schemaType]);
  return /*#__PURE__*/React.createElement(Card, {
    height: "fill",
    padding: [4, 5, 6, 7],
    sizing: "border",
    tone: "transparent"
  }, /*#__PURE__*/React.createElement(Container, {
    width: 1
  }, /*#__PURE__*/React.createElement(Card, {
    padding: 4,
    radius: 3
  }, /*#__PURE__*/React.createElement(DocumentChangeContext.Provider, {
    value: documentContext
  }, /*#__PURE__*/React.createElement(ChangeList, {
    diff: diff,
    schemaType: schemaType
  })))));
}