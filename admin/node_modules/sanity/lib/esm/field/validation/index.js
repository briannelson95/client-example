export function getValueError(value, schemaType) {
  const {
    jsonType
  } = schemaType;
  const valueType = Array.isArray(value) ? 'array' : typeof value;

  if (value === null || valueType === 'undefined') {
    return undefined;
  }

  if (valueType !== jsonType) {
    return {
      message: "Value is ".concat(valueType, ", expected ").concat(jsonType),
      value
    };
  }

  if (isObjectType(schemaType) && isObjectValue(value)) {
    for (const field of schemaType.fields) {
      const fieldError = getValueError(value[field.name], field.type);

      if (fieldError) {
        return fieldError;
      }
    }
  }

  return undefined;
}

function isObjectType(schemaType) {
  return schemaType.jsonType === 'object';
}

function isObjectValue(value) {
  return value !== null && !Array.isArray(value) && typeof value === 'object';
}