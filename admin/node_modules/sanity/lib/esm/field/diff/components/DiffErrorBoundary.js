function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import React from 'react';
import { ErrorOutlineIcon } from '@sanity/icons';
import { Box, Card, Flex, Text } from '@sanity/ui';
import { isDev } from '../../../environment';
export class DiffErrorBoundary extends React.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "state", {});
  }

  static getDerivedStateFromError(error) {
    return {
      error
    };
  }

  // eslint-disable-next-line class-methods-use-this
  componentDidCatch(error) {
    console.error('Error rendering diff component: ');
    console.error(error);
  }

  render() {
    const {
      error
    } = this.state;

    if (!error) {
      return this.props.children;
    }

    return /*#__PURE__*/React.createElement(Card, {
      padding: 3,
      radius: 2,
      tone: "critical"
    }, /*#__PURE__*/React.createElement(Flex, null, /*#__PURE__*/React.createElement(Text, {
      size: 1
    }, /*#__PURE__*/React.createElement(ErrorOutlineIcon, null)), /*#__PURE__*/React.createElement(Box, {
      paddingLeft: 3
    }, /*#__PURE__*/React.createElement(Text, {
      as: "h3",
      size: 1,
      weight: "medium"
    }, "Rendering the changes to this field caused an error"), isDev && /*#__PURE__*/React.createElement(Box, {
      marginTop: 2
    }, /*#__PURE__*/React.createElement(Text, {
      as: "p",
      size: 1
    }, "Check the developer console for more information")))));
  }

}