var _templateObject;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import { Text, Box, Flex, Stack } from '@sanity/ui';
import React, { createElement } from 'react';
import styled from 'styled-components';
const MetaText = styled(Text)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  color: inherit;\n"])));
export function MetaInfo(props) {
  const {
    title,
    action,
    icon,
    children,
    markRemoved
  } = props;
  return /*#__PURE__*/React.createElement(Flex, {
    padding: 2,
    align: "center"
  }, icon && /*#__PURE__*/React.createElement(Box, {
    padding: 2
  }, /*#__PURE__*/React.createElement(MetaText, {
    size: 4,
    forwardedAs: markRemoved ? 'del' : 'div'
  }, /*#__PURE__*/createElement(icon))), /*#__PURE__*/React.createElement(Stack, {
    space: 2,
    paddingLeft: 2
  }, /*#__PURE__*/React.createElement(MetaText, {
    size: 1,
    weight: "semibold",
    forwardedAs: markRemoved ? 'del' : 'h3',
    textOverflow: "ellipsis"
  }, title), action && /*#__PURE__*/React.createElement("div", null, action), /*#__PURE__*/React.createElement(MetaText, {
    size: 0,
    textOverflow: "ellipsis"
  }, children)));
}