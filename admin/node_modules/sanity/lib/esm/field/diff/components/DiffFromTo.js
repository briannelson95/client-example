import React, { createElement } from 'react';
import { getChangeVerb } from '../helpers';
import { DiffCard } from './DiffCard';
import { DiffTooltip } from './DiffTooltip';
import { FromTo } from './FromTo';
const cardStyles = {
  flex: 1,
  minWidth: 0,
  display: 'block',
  whiteSpace: 'break-spaces'
};
export function DiffFromTo(props) {
  const {
    align,
    cardClassName,
    diff,
    layout,
    path,
    previewComponent,
    schemaType
  } = props;
  const {
    action
  } = diff;
  const changeVerb = getChangeVerb(diff);

  if (action === 'unchanged') {
    return /*#__PURE__*/React.createElement(DiffCard, {
      className: cardClassName,
      style: cardStyles
    }, /*#__PURE__*/createElement(previewComponent, {
      schemaType,
      value: diff.toValue
    }));
  }

  const from = diff.fromValue !== undefined && diff.fromValue !== null && /*#__PURE__*/React.createElement(DiffCard, {
    as: "del",
    className: cardClassName,
    diff: diff,
    path: path,
    style: cardStyles
  }, /*#__PURE__*/createElement(previewComponent, {
    schemaType,
    value: diff.fromValue
  }));
  const to = diff.toValue !== undefined && diff.toValue !== null && /*#__PURE__*/React.createElement(DiffCard, {
    as: "ins",
    className: cardClassName,
    diff: diff,
    path: path,
    style: cardStyles
  }, /*#__PURE__*/createElement(previewComponent, {
    schemaType,
    value: diff.toValue
  }));

  if (from && !to) {
    return /*#__PURE__*/React.createElement(DiffTooltip, {
      description: changeVerb,
      diff: diff,
      path: path
    }, from);
  }

  if (!from && to) {
    return /*#__PURE__*/React.createElement(DiffTooltip, {
      description: changeVerb,
      diff: diff,
      path: path
    }, to);
  }

  return /*#__PURE__*/React.createElement(DiffTooltip, {
    description: changeVerb,
    diff: diff,
    path: path
  }, /*#__PURE__*/React.createElement(FromTo, {
    align: align,
    from: from,
    layout: layout,
    to: to
  }));
}