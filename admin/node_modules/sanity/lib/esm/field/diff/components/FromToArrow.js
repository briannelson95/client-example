function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { Text } from '@sanity/ui';
import React, { createElement } from 'react';
import { ArrowRightIcon, ArrowDownIcon } from '@sanity/icons';
const arrowComponents = {
  down: ArrowDownIcon,
  right: ArrowRightIcon
};
export function FromToArrow(props) {
  const {
    direction = 'right',
    ...restProps
  } = props;
  const arrowComponent = arrowComponents[direction];
  return /*#__PURE__*/React.createElement(Text, _extends({
    muted: true,
    size: 1
  }, restProps), /*#__PURE__*/createElement(arrowComponent));
}