/* eslint-disable react/no-array-index-key */
import { Box, Card, Code, Flex, Radio, Stack, Text } from '@sanity/ui';
import React, { useCallback, useState } from 'react';
import { LOADING_PANE } from '../constants';
import { DeskToolProvider } from '../DeskToolProvider';
import { useResolvedPanes } from '../structureResolvers';
const testPaths = [[], // Opened the `Author` document type list
[[{
  id: 'author'
}]], // Opened the `Author` document type list
// Opened the `foo` document editor
[[{
  id: 'author'
}], [{
  id: 'foo'
}]]];
export default function ResolvePanesStoryWrapper() {
  return /*#__PURE__*/React.createElement(DeskToolProvider, {
    structure: useCallback(S => S.list().title('Content'), [])
  }, /*#__PURE__*/React.createElement(ResolvePanesStory, null));
}

function ResolvePanesStory() {
  const {
    paneDataItems,
    resolvedPanes,
    routerPanes
  } = useResolvedPanes();
  const [testKey, setTestKey] = useState('0');
  const handleChange = useCallback(event => {
    const inputValue = event.currentTarget.value;
    setTestKey(inputValue);
  }, []);
  return /*#__PURE__*/React.createElement(Box, {
    padding: 4
  }, /*#__PURE__*/React.createElement(Stack, {
    marginBottom: 5,
    space: 3
  }, testPaths.map((testPath, idx) => /*#__PURE__*/React.createElement(Flex, {
    align: "center",
    as: "label",
    key: idx
  }, /*#__PURE__*/React.createElement(Radio, {
    checked: String(idx) === testKey,
    name: "path",
    onChange: handleChange,
    value: String(idx)
  }), /*#__PURE__*/React.createElement(Box, {
    flex: 1,
    marginLeft: 3
  }, /*#__PURE__*/React.createElement(Text, null, /*#__PURE__*/React.createElement("code", null, JSON.stringify(testPath))))))), /*#__PURE__*/React.createElement(Code, {
    language: "json",
    size: 1
  }, JSON.stringify(routerPanes)), /*#__PURE__*/React.createElement(Stack, {
    marginTop: 5,
    space: 1
  }, resolvedPanes.map((resolvedPane, idx) => {
    const paneData = paneDataItems[idx];

    if (resolvedPane === LOADING_PANE) {
      return /*#__PURE__*/React.createElement(Card, {
        border: true,
        key: idx,
        padding: 4,
        tone: paneData.active ? 'primary' : undefined
      }, /*#__PURE__*/React.createElement(Text, null, "[Loading\u2026]"));
    }

    if (resolvedPane.type === 'list') {
      var _resolvedPane$items;

      return /*#__PURE__*/React.createElement(Card, {
        border: true,
        key: idx,
        padding: 4,
        tone: paneData.active ? 'primary' : undefined
      }, /*#__PURE__*/React.createElement(Stack, {
        space: 3
      }, /*#__PURE__*/React.createElement(Text, null, "[List] ", resolvedPane.title), /*#__PURE__*/React.createElement(Text, {
        size: 1
      }, /*#__PURE__*/React.createElement("code", null, paneData.path)), /*#__PURE__*/React.createElement(Code, {
        language: "json",
        size: 1
      }, "".concat(JSON.stringify((_resolvedPane$items = resolvedPane.items) === null || _resolvedPane$items === void 0 ? void 0 : _resolvedPane$items.length), " items"))));
    }

    if (resolvedPane.type === 'documentList') {
      return /*#__PURE__*/React.createElement(Card, {
        border: true,
        key: idx,
        padding: 4,
        tone: paneData.active ? 'primary' : undefined
      }, /*#__PURE__*/React.createElement(Stack, {
        space: 3
      }, /*#__PURE__*/React.createElement(Text, null, "[DocumentList] ", resolvedPane.title), /*#__PURE__*/React.createElement(Text, {
        size: 1
      }, /*#__PURE__*/React.createElement("code", null, paneData.path)), /*#__PURE__*/React.createElement(Code, {
        language: "json",
        size: 1
      }, JSON.stringify(resolvedPane.options, null, 2))));
    }

    if (resolvedPane.type === 'document') {
      return /*#__PURE__*/React.createElement(Card, {
        border: true,
        key: idx,
        padding: 4,
        tone: paneData.active ? 'primary' : undefined
      }, /*#__PURE__*/React.createElement(Stack, {
        space: 3
      }, /*#__PURE__*/React.createElement(Text, null, "[Document]"), /*#__PURE__*/React.createElement(Text, {
        size: 1
      }, /*#__PURE__*/React.createElement("code", null, paneData.path)), /*#__PURE__*/React.createElement(Code, {
        language: "json",
        size: 1
      }, JSON.stringify(resolvedPane.options, null, 2))));
    }

    return /*#__PURE__*/React.createElement(Card, {
      border: true,
      key: idx,
      padding: 4,
      tone: paneData.active ? 'primary' : undefined
    }, /*#__PURE__*/React.createElement(Text, null, "[", resolvedPane.type, "] ", resolvedPane.title));
  })));
}