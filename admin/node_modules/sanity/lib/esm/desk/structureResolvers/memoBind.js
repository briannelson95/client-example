/* eslint-disable @typescript-eslint/ban-types */
// `WeakMap`s require the first type param to extend `object`
const bindCache = new WeakMap();
/**
 * An alternative to `obj.method.bind(obj)` that utilizes a weakmap to return
 * the same memory reference for sequent binds.
 */

export function memoBind(obj, methodKey) {
  const boundMethods = bindCache.get(obj) || new Map();

  if (boundMethods) {
    const bound = boundMethods.get(methodKey);
    if (bound) return bound;
  }

  const method = obj[methodKey];

  if (typeof method !== 'function') {
    throw new Error("Expected property `".concat(methodKey, "` to be a function but got ").concat(typeof method, " instead."));
  }

  const bound = method.bind(obj);
  boundMethods.set(methodKey, bound);
  bindCache.set(obj, boundMethods);
  return bound;
}