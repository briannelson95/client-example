function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

import { SerializeError, HELP_URL } from './SerializeError';
export function maybeSerializeMenuItemGroup(item, index, path) {
  return item instanceof MenuItemGroupBuilder ? item.serialize({
    path,
    index
  }) : item;
}
export class MenuItemGroupBuilder {
  constructor(_context, spec) {
    this._context = _context;

    _defineProperty(this, "_id", void 0);

    _defineProperty(this, "_title", void 0);

    this._id = spec ? spec.id : '';
    this._title = spec ? spec.title : '';
  }

  id(id) {
    return new MenuItemGroupBuilder(this._context, {
      id,
      title: this._title
    });
  }

  getId() {
    return this._id;
  }

  title(title) {
    return new MenuItemGroupBuilder(this._context, {
      id: this._id,
      title
    });
  }

  getTitle() {
    return this._title;
  }

  serialize() {
    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {
      path: []
    };
    const {
      _id,
      _title
    } = this;

    if (!_id) {
      throw new SerializeError('`id` is required for a menu item group', options.path, options.index, _title).withHelpUrl(HELP_URL.ID_REQUIRED);
    }

    if (!_title) {
      throw new SerializeError('`title` is required for a menu item group', options.path, _id).withHelpUrl(HELP_URL.TITLE_REQUIRED);
    }

    return {
      id: _id,
      title: _title
    };
  }

}