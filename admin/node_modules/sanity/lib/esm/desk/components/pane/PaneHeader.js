import { useElementRect, Box, Card, Flex, LayerProvider } from '@sanity/ui';
import React, { useMemo, useCallback, forwardRef } from 'react';
import { LegacyLayerProvider } from '../../../components/transitional';
import { usePane } from './usePane';
import { Layout, Root, TabsBox, TitleBox, TitleTextSkeleton, TitleText } from './PaneHeader.styles';

/**
 * @beta This API will change. DO NOT USE IN PRODUCTION.
 */
export const PaneHeader = /*#__PURE__*/forwardRef(function PaneHeader(props, ref) {
  const {
    actions,
    backButton,
    loading,
    subActions,
    tabs,
    title
  } = props;
  const {
    collapse,
    collapsed,
    expand,
    rootElement: paneElement
  } = usePane();
  const paneRect = useElementRect(paneElement || null);
  const layoutStyle = useMemo(() => ({
    width: collapsed ? (paneRect === null || paneRect === void 0 ? void 0 : paneRect.height) || window.innerHeight : undefined
  }), [collapsed, paneRect]);
  const handleTitleClick = useCallback(() => {
    if (collapsed) return;
    collapse();
  }, [collapse, collapsed]);
  const handleLayoutClick = useCallback(() => {
    if (!collapsed) return;
    expand();
  }, [collapsed, expand]);
  return /*#__PURE__*/React.createElement(LayerProvider, {
    zOffset: 100
  }, /*#__PURE__*/React.createElement(Root, {
    "data-collapsed": collapsed ? '' : undefined,
    "data-testid": "pane-header",
    ref: ref
  }, /*#__PURE__*/React.createElement(LegacyLayerProvider, {
    zOffset: "paneHeader"
  }, /*#__PURE__*/React.createElement(Card, {
    "data-collapsed": collapsed ? '' : undefined,
    tone: "inherit"
  }, /*#__PURE__*/React.createElement(Layout, {
    onClick: handleLayoutClick,
    padding: 2,
    paddingBottom: tabs || subActions ? 1 : 2,
    sizing: "border",
    style: layoutStyle
  }, backButton, /*#__PURE__*/React.createElement(TitleBox, {
    flex: 1,
    onClick: handleTitleClick,
    paddingY: 3,
    paddingLeft: backButton ? 1 : 3
  }, loading && /*#__PURE__*/React.createElement(TitleTextSkeleton, {
    animated: true,
    radius: 1
  }), !loading && /*#__PURE__*/React.createElement(TitleText, {
    tabIndex: 0,
    textOverflow: "ellipsis",
    weight: "semibold"
  }, title)), actions && /*#__PURE__*/React.createElement(Box, {
    hidden: collapsed,
    paddingLeft: 1
  }, /*#__PURE__*/React.createElement(LegacyLayerProvider, {
    zOffset: "paneHeader"
  }, actions))), (tabs || subActions) && /*#__PURE__*/React.createElement(Flex, {
    align: "center",
    hidden: collapsed,
    paddingTop: 0,
    paddingRight: 2,
    paddingBottom: 2,
    paddingLeft: 3,
    overflow: "auto"
  }, /*#__PURE__*/React.createElement(TabsBox, {
    flex: 1,
    marginRight: subActions ? 3 : 0
  }, /*#__PURE__*/React.createElement("div", null, tabs)), subActions && /*#__PURE__*/React.createElement(Box, null, subActions))))));
});