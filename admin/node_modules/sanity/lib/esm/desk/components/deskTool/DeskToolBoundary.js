import React, { useEffect, useMemo, useState } from 'react';
import { ErrorBoundary } from '@sanity/ui';
import { SourceProvider, useWorkspace } from '../../../studio';
import { isRecord } from '../../../util';
import { useRouter } from '../../../router';
import { DeskToolProvider } from '../../DeskToolProvider';
import { setActivePanes } from '../../getIntentState';
import { IntentResolver } from './intentResolver';
import { StructureError } from './StructureError';
import { DeskTool } from './DeskTool';
const EMPTY_RECORD = {};
export function DeskToolBoundary(_ref) {
  let {
    tool: {
      options
    }
  } = _ref;
  const {
    unstable_sources: sources
  } = useWorkspace();
  const [firstSource] = sources;
  const {
    source,
    defaultDocumentNode,
    structure
  } = options || {};
  const {
    state: routerState
  } = useRouter();
  const intent = useMemo(() => {
    const intentName = typeof routerState.intent === 'string' ? routerState.intent : undefined;
    const params = isRecord(routerState.params) ? routerState.params : EMPTY_RECORD;
    const payload = routerState.payload;
    return intentName ? {
      intent: intentName,
      params,
      payload
    } : undefined;
  }, [routerState]); // Set active panes to blank on mount and unmount

  useEffect(() => {
    setActivePanes([]);
    return () => setActivePanes([]);
  }, []);
  const [{
    error
  }, setError] = useState({
    error: null
  }); // this re-throws if the error it catches is not a PaneResolutionError

  if (error) return /*#__PURE__*/React.createElement(StructureError, {
    error: error
  });
  return /*#__PURE__*/React.createElement(ErrorBoundary, {
    onCatch: setError
  }, /*#__PURE__*/React.createElement(SourceProvider, {
    name: source || firstSource.name
  }, /*#__PURE__*/React.createElement(DeskToolProvider, {
    defaultDocumentNode: defaultDocumentNode,
    structure: structure
  }, intent ? /*#__PURE__*/React.createElement(IntentResolver, intent) : /*#__PURE__*/React.createElement(DeskTool, {
    onPaneChange: setActivePanes
  }))));
}