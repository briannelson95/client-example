import { EditIcon } from '@sanity/icons';
import { Box, Card, Flex, Stack, Text } from '@sanity/ui';
import React, { useCallback, useMemo } from 'react';
import { useSchema } from '../../hooks';
import { SanityPreview } from '../../preview';
import { useRouter } from '../../router';
export function ReferringDocumentsList(props) {
  const {
    documents
  } = props;
  return /*#__PURE__*/React.createElement(Card, {
    padding: 1,
    radius: 3,
    shadow: 1
  }, /*#__PURE__*/React.createElement(Stack, {
    space: 1
  }, documents.map(document => /*#__PURE__*/React.createElement(DocumentPreviewLink, {
    document: document,
    key: document._id
  }))));
}

function DocumentPreviewLink(props) {
  const {
    document
  } = props;
  const schema = useSchema();
  const router = useRouter();
  const intent = useMemo(() => ({
    action: 'edit',
    params: {
      id: document._id,
      type: document._type
    }
  }), [document]);
  const href = router.resolveIntentLink(intent.action, intent.params);
  const schemaType = schema.get(document._type);
  const handleClick = useCallback(event => {
    if (event.shiftKey || event.metaKey) return;
    event.preventDefault();
    router.navigateIntent(intent.action, intent.params);
  }, [intent, router]);

  if (!schemaType) {
    return /*#__PURE__*/React.createElement(Text, {
      muted: true
    }, "A document of the unknown type ", /*#__PURE__*/React.createElement("em", null, document._type));
  }

  return /*#__PURE__*/React.createElement(Card, {
    as: "a",
    href: href,
    onClick: handleClick,
    padding: 1,
    radius: 2
  }, /*#__PURE__*/React.createElement(Flex, {
    align: "center"
  }, /*#__PURE__*/React.createElement(Box, {
    flex: 1
  }, /*#__PURE__*/React.createElement(SanityPreview, {
    layout: "default",
    schemaType: schemaType,
    value: document
  })), document._hasDraft && /*#__PURE__*/React.createElement(Box, {
    marginLeft: 3
  }, /*#__PURE__*/React.createElement(Text, {
    muted: true
  }, /*#__PURE__*/React.createElement(EditIcon, null)))));
}