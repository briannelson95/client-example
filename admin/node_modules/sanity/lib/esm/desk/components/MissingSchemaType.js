function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { WarningOutlineIcon } from '@sanity/icons';
import React from 'react';
import { SanityDefaultPreview } from '../../preview';

const getUnknownTypeFallback = (id, typeName) => ({
  title: /*#__PURE__*/React.createElement("em", null, "No schema found for type ", /*#__PURE__*/React.createElement("code", null, typeName)),
  subtitle: /*#__PURE__*/React.createElement("em", null, "Document: ", /*#__PURE__*/React.createElement("code", null, id)),
  media: WarningOutlineIcon
});

export function MissingSchemaType(props) {
  const {
    layout,
    value
  } = props;
  return /*#__PURE__*/React.createElement(SanityDefaultPreview, _extends({}, getUnknownTypeFallback(value._id, value._type), {
    layout: layout
  }));
}