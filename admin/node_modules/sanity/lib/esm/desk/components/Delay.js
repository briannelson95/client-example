import React, { useEffect, useState } from 'react';
export function Delay(_ref) {
  let {
    children,
    ms = 0
  } = _ref;
  const [ready, setReady] = useState(ms <= 0);
  useEffect(() => {
    if (ms <= 0) {
      return undefined;
    }

    const timeoutId = setTimeout(() => setReady(true), ms);
    return () => {
      clearTimeout(timeoutId);
    };
  }, [ms]);

  if (!ready || !children) {
    return /*#__PURE__*/React.createElement(React.Fragment, null);
  }

  return typeof children === 'function' ? children() : children;
}