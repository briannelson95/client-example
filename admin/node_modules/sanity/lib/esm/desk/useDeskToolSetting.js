import { useCallback, useEffect, useMemo, useState } from 'react';
import { useSettingsStore } from '../datastores';
/**
 * @internal
 */

export function useDeskToolSetting(namespace, key, defaultValue) {
  const settingsStore = useSettingsStore();
  const [value, setValue] = useState(defaultValue);
  const deskToolSettings = useMemo(() => settingsStore.forNamespace('desk-tool'), [settingsStore]);
  const settings = useMemo(() => {
    if (namespace) {
      return deskToolSettings.forNamespace(namespace).forKey(key);
    }

    return deskToolSettings.forKey(key);
  }, [deskToolSettings, namespace, key]);
  useEffect(() => {
    const sub = settings.listen(defaultValue).subscribe({
      next: setValue
    });
    return () => sub === null || sub === void 0 ? void 0 : sub.unsubscribe();
  }, [defaultValue, key, namespace, settings]);
  const set = useCallback(newValue => {
    setValue(newValue);
    settings.set(newValue);
  }, [settings]);
  return useMemo(() => [value, set], [set, value]);
}