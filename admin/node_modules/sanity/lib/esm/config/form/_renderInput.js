import { defaultRenderInput } from '../../form/studio/defaults';

function _collectMiddleware(middlewares, plugins) {
  for (const plugin of plugins) {
    var _plugin$form;

    // Recursive
    if (plugin.plugins) {
      _collectMiddleware(middlewares, plugin.plugins);
    }

    if ((_plugin$form = plugin.form) !== null && _plugin$form !== void 0 && _plugin$form.renderInput) {
      var _plugin$form2;

      middlewares.push((_plugin$form2 = plugin.form) === null || _plugin$form2 === void 0 ? void 0 : _plugin$form2.renderInput);
    }
  }
}
/**
 * @internal
 */


export function _createRenderInput(config) {
  return props => {
    var _config$form;

    const middlewares = [];

    if (config.plugins) {
      _collectMiddleware(middlewares, config.plugins);
    }

    if ((_config$form = config.form) !== null && _config$form !== void 0 && _config$form.renderInput) {
      var _config$form2;

      middlewares.push((_config$form2 = config.form) === null || _config$form2 === void 0 ? void 0 : _config$form2.renderInput);
    } // Initialize the callback chain


    let next = defaultRenderInput;

    for (const middleware of middlewares) {
      const defaultRender = next;

      next = inputProps => {
        return middleware(inputProps, defaultRender) || defaultRender(inputProps);
      };
    }

    return next(props);
  };
}