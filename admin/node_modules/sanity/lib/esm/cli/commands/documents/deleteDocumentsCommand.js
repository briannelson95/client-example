import pluralize from 'pluralize-esm';
const helpText = "\nDelete a document from the projects configured dataset\n\nOptions\n  --dataset NAME to override dataset\n\nExample\n  # Delete the document with the ID \"myDocId\"\n  sanity documents delete myDocId\n\n  # ID wrapped in double or single quote works equally well\n  sanity documents delete 'myDocId'\n\n  # Delete document with ID \"someDocId\" from dataset \"blog\"\n  sanity documents delete --dataset=blog someDocId\n\n  # Delete the document with ID \"doc1\" and \"doc2\"\n  sanity documents delete doc1 doc2\n";
const deleteDocumentsCommand = {
  name: 'delete',
  group: 'documents',
  signature: '[ID] [...IDS]',
  helpText,
  description: 'Delete a document by ID',
  action: async (args, context) => {
    const {
      apiClient,
      output,
      chalk
    } = context;
    const {
      dataset
    } = args.extOptions;
    const ids = args.argsWithoutOptions.map(str => "".concat(str));

    if (!ids.length) {
      throw new Error('Document ID must be specified');
    }

    const client = dataset ? apiClient().clone().config({
      dataset
    }) : apiClient();
    const transaction = ids.reduce((trx, id) => trx.delete(id), client.transaction());

    try {
      const {
        results
      } = await transaction.commit();
      const deleted = results.filter(res => res.operation === 'delete').map(res => res.id);
      const notFound = ids.filter(id => !deleted.includes(id));

      if (deleted.length > 0) {
        output.print("Deleted ".concat(deleted.length, " ").concat(pluralize('document', deleted.length)));
      }

      if (notFound.length > 0) {
        output.error(chalk.red("".concat(pluralize('Document', notFound.length), " not found: ").concat(notFound.join(', '))));
      }
    } catch (err) {
      throw new Error("Failed to delete ".concat(pluralize('document', ids.length), ":\n").concat(err.message));
    }
  }
};
export default deleteDocumentsCommand;