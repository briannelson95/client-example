function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { useRouter } from './useRouter';
/**
 * @public
 */

export function withRouter(Component) {
  function WithRouter(props) {
    const router = useRouter();
    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {
      router: router
    }));
  }

  WithRouter.displayName = "withRouter(".concat(Component.displayName || Component.name, ")");
  return WithRouter;
}
/**
 * @public
 */

/**
 * @public
 */
export const WithRouter = withRouter(props => props.children(props.router));