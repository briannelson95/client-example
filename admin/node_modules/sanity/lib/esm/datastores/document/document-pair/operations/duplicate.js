import _omit from "lodash/omit";
import { getDraftId } from '../../../../util/draftUtils';
import { isLiveEditEnabled } from '../utils/isLiveEditEnabled';
const omitProps = ['_createdAt', '_updatedAt'];
export const duplicate = {
  disabled: _ref => {
    let {
      snapshots
    } = _ref;
    return snapshots.published || snapshots.draft ? false : 'NOTHING_TO_DUPLICATE';
  },
  execute: (_ref2, dupeId) => {
    let {
      client,
      schema,
      snapshots,
      typeName
    } = _ref2;
    const source = snapshots.draft || snapshots.published;

    if (!source) {
      throw new Error('cannot execute on empty document');
    }

    return client.observable.create({ ..._omit(source, omitProps),
      _id: isLiveEditEnabled(schema, typeName) ? dupeId : getDraftId(dupeId),
      _type: source._type
    }, {
      visibility: 'async',
      tag: 'document.duplicate'
    });
  }
};