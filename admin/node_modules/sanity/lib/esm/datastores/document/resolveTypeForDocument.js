import { of } from 'rxjs';
import { map } from 'rxjs/operators';
import { getPublishedId, getDraftId } from '../../util/draftUtils';
export function resolveTypeForDocument(client, id) {
  let specifiedType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '*';

  // if is resolved document type
  if (specifiedType && specifiedType !== '*') {
    return of(specifiedType);
  }

  const query = '*[_id in [$documentId, $draftId]]._type';
  const documentId = getPublishedId(id);
  const draftId = getDraftId(documentId);
  return client.observable.fetch(query, {
    documentId,
    draftId
  }).pipe(map(types => types[0]));
}