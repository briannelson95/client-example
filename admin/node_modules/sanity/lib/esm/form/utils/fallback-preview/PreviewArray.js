function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { PreviewAny } from './PreviewAny';
export function PreviewArray(props) {
  const {
    value,
    maxDepth = 4,
    _depth = 0,
    ...rest
  } = props;

  if (_depth >= maxDepth) {
    return /*#__PURE__*/React.createElement("span", null, "Array(", value.length, ")");
  }

  return /*#__PURE__*/React.createElement("ul", null, value.map((item, i) => {
    return /*#__PURE__*/React.createElement("li", {
      key: i
    }, /*#__PURE__*/React.createElement(PreviewAny, _extends({}, rest, {
      value: item,
      _depth: _depth + 1,
      maxDepth: maxDepth
    })));
  }));
}