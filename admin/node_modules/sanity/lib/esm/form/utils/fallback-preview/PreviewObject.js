import _capitalize from "lodash/capitalize";

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { PreviewAny } from './PreviewAny';
export function PreviewObject(props) {
  const {
    value,
    maxDepth = 4,
    _depth = 0,
    ...rest
  } = props;
  const {
    _type,
    _key,
    ...restValue
  } = value;
  const keys = Object.keys(restValue);

  if (_depth >= maxDepth) {
    return /*#__PURE__*/React.createElement("span", null, _capitalize(_type || 'object'), " ", "{".concat(keys.join(', '), "}"));
  }

  return /*#__PURE__*/React.createElement("div", null, _type && /*#__PURE__*/React.createElement("h3", null, /*#__PURE__*/React.createElement("em", null, _capitalize(_type)), ":"), /*#__PURE__*/React.createElement("ul", null, keys.map(key => /*#__PURE__*/React.createElement("li", {
    key: key
  }, /*#__PURE__*/React.createElement("b", null, key), ":", ' ', /*#__PURE__*/React.createElement(PreviewAny, _extends({}, rest, {
    value: restValue[key],
    _depth: _depth + 1,
    maxDepth: maxDepth
  }))))));
}