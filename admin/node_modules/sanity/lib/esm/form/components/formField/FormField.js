function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

/* eslint-disable camelcase */
import { Stack } from '@sanity/ui';
import React, { memo } from 'react';
import { FormFieldHeader } from './FormFieldHeader';
export const FormField = /*#__PURE__*/memo(function FormField(props) {
  const {
    validation,
    __unstable_presence: presence,
    children,
    description,
    inputId,
    level,
    title,
    ...restProps
  } = props;
  return /*#__PURE__*/React.createElement(Stack, _extends({}, restProps, {
    "data-level": level,
    space: 1
  }), title && /*#__PURE__*/React.createElement(FormFieldHeader, {
    validation: validation,
    __unstable_presence: presence,
    description: description,
    inputId: inputId,
    title: title
  }), /*#__PURE__*/React.createElement("div", null, children));
});