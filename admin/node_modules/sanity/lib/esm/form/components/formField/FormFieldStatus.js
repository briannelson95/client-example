var _templateObject;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import styled from 'styled-components';
const Root = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  display: flex;\n  justify-content: flex-end;\n  box-sizing: border-box;\n  min-height: var(--avatar-height);\n  width: 77px;\n  margin-left: var(--small-padding);\n\n  &[data-max-avatars='1'] {\n    max-width: 23px;\n  }\n\n  &[data-position='top'] {\n    align-self: flex-start;\n  }\n\n  &[data-position='bottom'] {\n    align-self: flex-end;\n  }\n"])));
export function FormFieldStatus(_ref) {
  let {
    children,
    maxAvatars,
    position = 'bottom'
  } = _ref;
  return /*#__PURE__*/React.createElement(Root, {
    "data-max-avatars": maxAvatars,
    "data-position": position
  }, children);
}