var _templateObject, _templateObject2, _templateObject3, _templateObject4;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import { ToggleArrowRightIcon } from '@sanity/icons';
import { Box, Flex, Inline, Text } from '@sanity/ui';
import React, { useCallback, useEffect, useState } from 'react';
import styled from 'styled-components';
const HeaderButton = styled.button(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  display: block;\n  -webkit-font-smoothing: inherit;\n  appearance: none;\n  font: inherit;\n  background: none;\n  width: 100%;\n  text-align: left;\n  border: 0;\n  margin: 0;\n  padding: 0;\n  outline: none;\n"])));
const ToggleArrow = styled(ToggleArrowRightIcon)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  transform: ", ";\n"])), props => props.open ? 'rotate(90deg)' : '');
const Header = styled(Flex)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  cursor: default;\n"])));
const IconBox = styled(Box)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  & > div > svg {\n    transform: rotate(0);\n    transition: transform 100ms;\n  }\n\n  &[data-open] > div > svg {\n    transform: rotate(90deg);\n  }\n"])));
export function Details(props) {
  const {
    children,
    open: openProp,
    icon,
    title = 'Details',
    ...restProps
  } = props;
  const [open, setOpen] = useState(openProp || false);
  const handleToggle = useCallback(() => setOpen(v => !v), []);
  useEffect(() => setOpen(openProp || false), [openProp]);
  return /*#__PURE__*/React.createElement(Box, restProps, /*#__PURE__*/React.createElement(HeaderButton, {
    type: "button",
    onClick: handleToggle
  }, /*#__PURE__*/React.createElement(Header, {
    align: "center"
  }, /*#__PURE__*/React.createElement(Inline, null, /*#__PURE__*/React.createElement(IconBox, {
    "data-open": open ? '' : undefined
  }, /*#__PURE__*/React.createElement(Text, {
    size: 1
  }, /*#__PURE__*/React.createElement(ToggleArrow, {
    open: open
  }))), icon && /*#__PURE__*/React.createElement(Box, {
    marginLeft: 1
  }, icon), /*#__PURE__*/React.createElement(Box, {
    flex: 1,
    marginLeft: 1
  }, /*#__PURE__*/React.createElement(Text, {
    size: 1,
    weight: "medium"
  }, title))))), /*#__PURE__*/React.createElement(Box, {
    hidden: !open,
    marginTop: 3
  }, children));
}