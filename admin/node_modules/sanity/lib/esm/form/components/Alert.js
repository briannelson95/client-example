var _templateObject;

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import { ErrorOutlineIcon, WarningOutlineIcon } from '@sanity/icons';
import { Box, Card, Flex, Text } from '@sanity/ui';
import React from 'react';
import styled from 'styled-components';
const STATUS_TONES = {
  warning: 'caution',
  error: 'critical'
};
const SuffixBox = styled(Box)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  border-top: 1px solid var(--card-border-color);\n"])));
export function Alert(props) {
  const {
    children,
    status = 'warning',
    suffix,
    title,
    ...rest
  } = props;
  return /*#__PURE__*/React.createElement(Card, _extends({
    radius: 2,
    tone: STATUS_TONES[status]
  }, rest, {
    "data-ui": "Alert"
  }), /*#__PURE__*/React.createElement(Flex, {
    padding: 4
  }, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, {
    size: 1
  }, status === 'warning' && /*#__PURE__*/React.createElement(WarningOutlineIcon, null), status === 'error' && /*#__PURE__*/React.createElement(ErrorOutlineIcon, null))), /*#__PURE__*/React.createElement(Box, {
    flex: 1,
    marginLeft: 3
  }, /*#__PURE__*/React.createElement(Text, {
    size: 1,
    weight: "semibold"
  }, title), children && /*#__PURE__*/React.createElement(Box, {
    marginTop: 3
  }, children))), suffix && /*#__PURE__*/React.createElement(SuffixBox, null, suffix));
}