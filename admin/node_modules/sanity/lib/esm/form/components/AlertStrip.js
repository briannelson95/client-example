function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { ErrorOutlineIcon, WarningOutlineIcon, InfoOutlineIcon } from '@sanity/icons';
import { Box, Card, Flex } from '@sanity/ui';
import React from 'react';
import { Details } from './Details';
const STATUS_TONES = {
  warning: 'caution',
  error: 'critical',
  info: 'positive'
};
const STATUS_ICONS = {
  warning: /*#__PURE__*/React.createElement(WarningOutlineIcon, null),
  error: /*#__PURE__*/React.createElement(ErrorOutlineIcon, null),
  info: /*#__PURE__*/React.createElement(InfoOutlineIcon, null)
};
export function AlertStrip(props) {
  const {
    children,
    status = 'warning',
    title,
    ...rest
  } = props;
  return /*#__PURE__*/React.createElement(Card, _extends({
    radius: 2,
    tone: STATUS_TONES[status]
  }, rest, {
    "data-ui": "Alert"
  }), /*#__PURE__*/React.createElement(Flex, {
    padding: 1
  }, children && /*#__PURE__*/React.createElement(Box, {
    flex: 1
  }, /*#__PURE__*/React.createElement(Details, {
    icon: STATUS_ICONS[status],
    title: title
  }, /*#__PURE__*/React.createElement(Box, {
    marginLeft: 3,
    marginTop: 3
  }, children)))));
}