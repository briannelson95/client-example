function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { Calendar } from './calendar/Calendar';
export const DatePicker = /*#__PURE__*/React.forwardRef(function DatePicker(props, ref) {
  const {
    value = new Date(),
    onChange,
    ...rest
  } = props;
  const [focusedDate, setFocusedDay] = React.useState();
  const handleSelect = React.useCallback(nextDate => {
    onChange(nextDate);
    setFocusedDay(undefined);
  }, [onChange]);
  return /*#__PURE__*/React.createElement(Calendar, _extends({}, rest, {
    ref: ref,
    selectedDate: value,
    onSelect: handleSelect,
    focusedDate: focusedDate || value,
    onFocusedDateChange: setFocusedDay
  }));
});