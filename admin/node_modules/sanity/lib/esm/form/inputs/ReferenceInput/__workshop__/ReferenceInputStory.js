import { Card, Container, Flex } from '@sanity/ui';
import { useAction } from '@sanity/ui-workshop';
import React, { useMemo, useState } from 'react';
import { useSchema } from '../../../../hooks';
import { ReviewChangesContextProvider } from '../../../studio/contexts/reviewChanges/ReviewChangesProvider';
import { createPatchChannel } from '../../../patch/PatchChannel';
export default function ReferenceInputStory() {
  var _documentType$fields;

  const schema = useSchema();
  const documentType = schema.get('referenceTest');
  const schemaType = (_documentType$fields = documentType.fields) === null || _documentType$fields === void 0 ? void 0 : _documentType$fields.find(f => f.name === 'selfRef');
  const patchChannel = useMemo(() => createPatchChannel(), []);
  const [value] = useState(undefined);
  const [focusPath] = useState([]);
  const onBlur = useAction('onBlur');
  const onChange = useAction('onChange');
  const onFocus = useAction('onFocus');
  const path = useMemo(() => ['selfRef'], []);
  return /*#__PURE__*/React.createElement(Card, {
    height: "fill"
  }, /*#__PURE__*/React.createElement(Flex, {
    align: "center",
    height: "fill",
    justify: "center",
    padding: 4,
    sizing: "border"
  }, /*#__PURE__*/React.createElement(Container, {
    width: 0
  }, /*#__PURE__*/React.createElement(ReviewChangesContextProvider, {
    changesOpen: false
  }, "TODO"))));
}