var _templateObject;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import { Button } from '@sanity/ui';
import styled, { css } from 'styled-components';
import { focusRingStyle } from '../../../../components/withFocusRing/helpers';
export const FileButton = styled(Button).attrs({
  forwardedAs: 'label'
})(_ref => {
  let {
    theme
  } = _ref;
  const {
    focusRing
  } = theme.sanity;
  const base = theme.sanity.color.base;
  const border = {
    width: 1,
    color: 'var(--card-border-color)'
  };
  return css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      &:not([data-disabled='true']) {\n        &:focus-within {\n          box-shadow: ", ";\n        }\n      }\n\n      & input {\n        overflow: hidden;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        position: absolute;\n        min-width: 0;\n        display: block;\n        appearance: none;\n        padding: 0;\n        margin: 0;\n        border: 0;\n        opacity: 0;\n      }\n    "])), focusRingStyle({
    base,
    border,
    focusRing
  }));
});