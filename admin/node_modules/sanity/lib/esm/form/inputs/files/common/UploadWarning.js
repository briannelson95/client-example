var _templateObject;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import { ResetIcon, WarningOutlineIcon } from '@sanity/icons';
import { Card, Flex, Box, Text, Stack, Button } from '@sanity/ui';
import React from 'react';
import styled from 'styled-components';
const ButtonWrapper = styled(Button)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  width: 100%;\n"])));
export function UploadWarning(_ref) {
  let {
    onClearStale
  } = _ref;
  return /*#__PURE__*/React.createElement(Card, {
    tone: "caution",
    padding: 4,
    border: true,
    radius: 2
  }, /*#__PURE__*/React.createElement(Flex, {
    gap: 4,
    marginBottom: 4
  }, /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Text, {
    size: 1
  }, /*#__PURE__*/React.createElement(WarningOutlineIcon, null))), /*#__PURE__*/React.createElement(Stack, {
    space: 3
  }, /*#__PURE__*/React.createElement(Text, {
    size: 1,
    weight: "semibold"
  }, "Incomplete upload"), /*#__PURE__*/React.createElement(Text, {
    size: 1
  }, "An upload has made no progress in the last 6m and likely got interrupted. You can safely clear the incomplete upload and try uploading again."))), /*#__PURE__*/React.createElement(ButtonWrapper, {
    icon: ResetIcon,
    text: "Clear upload",
    onClick: onClearStale,
    mode: "ghost"
  }));
}