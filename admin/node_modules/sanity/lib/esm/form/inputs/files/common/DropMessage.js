import React from 'react';
import { Box, Text, Inline } from '@sanity/ui';
import { AccessDeniedIcon, UploadIcon } from '@sanity/icons';
export function DropMessage(props) {
  const {
    hoveringFiles,
    types,
    resolveUploader
  } = props;
  const acceptedFiles = hoveringFiles.filter(file => types.some(type => resolveUploader(type, file)));
  const rejectedFilesCount = hoveringFiles.length - acceptedFiles.length;
  const multiple = types.length > 1;
  return /*#__PURE__*/React.createElement(React.Fragment, null, acceptedFiles.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Inline, {
    space: 2
  }, /*#__PURE__*/React.createElement(Text, null, /*#__PURE__*/React.createElement(UploadIcon, null)), /*#__PURE__*/React.createElement(Text, null, "Drop to upload", ' ', multiple && /*#__PURE__*/React.createElement(React.Fragment, null, acceptedFiles.length, " file", acceptedFiles.length > 1 ? 's' : ''))), rejectedFilesCount > 0 && /*#__PURE__*/React.createElement(Box, {
    marginTop: 4
  }, /*#__PURE__*/React.createElement(Inline, {
    space: 2
  }, /*#__PURE__*/React.createElement(Text, {
    muted: true,
    size: 1
  }, /*#__PURE__*/React.createElement(AccessDeniedIcon, null)), /*#__PURE__*/React.createElement(Text, {
    muted: true,
    size: 1
  }, rejectedFilesCount, " file", rejectedFilesCount > 1 ? 's' : '', " can't be uploaded here")))) : /*#__PURE__*/React.createElement(Inline, {
    space: 2
  }, /*#__PURE__*/React.createElement(Text, null, /*#__PURE__*/React.createElement(AccessDeniedIcon, null)), /*#__PURE__*/React.createElement(Text, null, "Can't upload ", hoveringFiles.length > 1 ? 'any of these files' : 'this file', " here")));
}