var _templateObject, _templateObject2, _templateObject3, _templateObject4;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import { studioTheme, rgba, Card, Flex, Spinner } from '@sanity/ui';
import styled, { css } from 'styled-components';
export const MAX_DEFAULT_HEIGHT = 30;
export const RatioBox = styled(Card)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n  min-height: 3.75rem;\n  max-height: 20rem;\n\n  & > div[data-container] {\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: flex !important;\n    align-items: center;\n    justify-content: center;\n  }\n\n  & img {\n    max-width: 100%;\n    max-height: 100%;\n  }\n"])));
export const SpinnerWrapper = styled(Spinner)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  position: absolute;\n"])));
export const Overlay = styled(Flex)(_ref => {
  let {
    tone,
    drag
  } = _ref;
  const textColor = studioTheme.color.light[tone].card.enabled.fg;
  const backgroundColor = rgba(studioTheme.color.light[tone].card.enabled.bg, 0.8);
  return css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      backdrop-filter: ", ";\n      color: ", ";\n      background-color: ", ";\n    "])), drag ? 'blur(10px)' : '', tone ? textColor : '', drag ? backgroundColor : 'transparent');
});
export const FlexOverlay = styled(Flex)(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n"])));