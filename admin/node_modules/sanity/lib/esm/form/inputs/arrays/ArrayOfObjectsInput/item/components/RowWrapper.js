var _templateObject;

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React from 'react';
import { Card } from '@sanity/ui';
import styled from 'styled-components';
import { MOVING_ITEM_CLASS_NAME } from '../../../common/sortable';
const Root = styled(Card)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  position: relative;\n  border: 1px solid transparent;\n  .dragHandle {\n    color: var(--card-shadow-umbra-color);\n  }\n  &:hover {\n    border-color: var(--card-shadow-umbra-color);\n    .dragHandle {\n      color: inherit;\n    }\n  }\n  &[aria-selected='true'] {\n    border-color: var(--card-focus-ring-color);\n  }\n  .", " & {\n    box-shadow: 0 0 0 0, 0 8px 17px 2px var(--card-shadow-umbra-color),\n      0 3px 14px 2px var(--card-shadow-penumbra-color),\n      0 5px 5px -3px var(--card-shadow-ambient-color);\n  }\n"])), MOVING_ITEM_CLASS_NAME);
export const RowWrapper = /*#__PURE__*/React.forwardRef(function RowWrapper(props, ref) {
  const {
    children,
    ...rest
  } = props;
  return /*#__PURE__*/React.createElement(Root, _extends({}, rest, {
    ref: ref,
    tone: props.tone
    /*prevent clicks in children from triggering onFocus on surrounding array input*/
    ,
    tabIndex: -1
  }), children);
});