import { Button, Stack, Text } from '@sanity/ui';
import React, { useCallback } from 'react';
import { randomKey } from '@sanity/util/content';
import { Details } from '../../../components/Details';
import { isDev } from '../../../../environment';
import { Alert } from '../../../components/Alert';
import { PatchEvent, setIfMissing } from '../../../patch';
import { FormField } from '../../../components/formField';
export function MissingKeysAlert(props) {
  const {
    error,
    onChange
  } = props;
  const handleFixMissingKeys = useCallback(() => {
    onChange(PatchEvent.from((error.value || []).map((val, i) => setIfMissing(randomKey(), [i, '_key']))));
  }, [error.value, onChange]);
  return /*#__PURE__*/React.createElement(FormField, {
    title: error.schemaType.title,
    description: error.schemaType.description
  }, /*#__PURE__*/React.createElement(Alert, {
    status: "warning",
    suffix: /*#__PURE__*/React.createElement(Stack, {
      padding: 2
    }, /*#__PURE__*/React.createElement(Button, {
      onClick: handleFixMissingKeys,
      text: "Add missing keys",
      tone: "caution"
    })),
    title: /*#__PURE__*/React.createElement(React.Fragment, null, "Missing keys")
  }, /*#__PURE__*/React.createElement(Text, {
    as: "p",
    muted: true,
    size: 1
  }, "Some items in the list are missing their keys. This must be fixed in order to edit the list."), /*#__PURE__*/React.createElement(Details, {
    marginTop: 4,
    open: isDev,
    title: /*#__PURE__*/React.createElement(React.Fragment, null, "Developer info")
  }, /*#__PURE__*/React.createElement(Stack, {
    space: 3
  }, /*#__PURE__*/React.createElement(Text, {
    as: "p",
    muted: true,
    size: 1
  }, "This usually happens when items are created using an API client, and the", ' ', /*#__PURE__*/React.createElement("code", null, "_key"), " property has not been included."), /*#__PURE__*/React.createElement(Text, {
    as: "p",
    muted: true,
    size: 1
  }, "The value of the ", /*#__PURE__*/React.createElement("code", null, "_key"), " property must be a unique string.")))));
}