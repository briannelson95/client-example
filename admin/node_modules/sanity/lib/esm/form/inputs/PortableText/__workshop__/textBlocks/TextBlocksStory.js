import { Box, Card, Container } from '@sanity/ui';
import { useAction, useBoolean } from '@sanity/ui-workshop';
import React, { useMemo } from 'react';
import { useSource } from '../../../../../studio';
const errorMarker = {
  level: 'error',
  path: [{
    _key: 'a'
  }],
  item: {
    message: 'There is an error with this text block'
  }
};
const customMarker = {
  type: 'test',
  path: [{
    _key: 'a'
  }],
  data: {
    message: '1 comment'
  }
};
const blockBase = {
  _type: 'myBlockType',
  _key: 'a',
  style: 'normal',
  markDefs: [],
  children: [{
    _type: 'span',
    _key: 'a1',
    text: "This is a custom portable text block above an empty image block! It's the block below. There should be a nice margin below me?",
    marks: []
  }]
};
export function TextBlocksStory() {
  const hasErrors = useBoolean('Has errors', false);
  const hasMarkers = useBoolean('Has markers', false);
  const markers = useMemo(() => hasMarkers ? [customMarker] : [], [hasMarkers]);
  const validation = useMemo(() => hasErrors ? [errorMarker] : [], [hasErrors]);
  const onChange = useAction('onChange');
  const attributes = useMemo(() => ({
    focused: false,
    selected: false,
    path: []
  }), []);
  const readOnly = false;
  const {
    form
  } = useSource();
  return /*#__PURE__*/React.createElement(Box, {
    padding: 4
  }, /*#__PURE__*/React.createElement(Container, {
    width: 1
  }, /*#__PURE__*/React.createElement(Card, {
    padding: 3,
    shadow: 1,
    overflow: "auto",
    style: {
      maxHeight: '100%'
    }
  }, "TODO")));
}