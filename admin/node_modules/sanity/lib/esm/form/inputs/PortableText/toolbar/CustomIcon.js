var _templateObject;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React, { useMemo } from 'react';
import styled from 'styled-components';
const CustomIconDiv = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  width: 1em;\n  height: 1em;\n  border-radius: inherit;\n  background-origin: content-box;\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  transform: scale(0.7);\n"])));
export function CustomIcon(props) {
  const {
    icon,
    active
  } = props;
  const inlineStyle = useMemo(() => ({
    backgroundImage: "url(".concat(icon, ")"),
    filter: active ? 'invert(100%)' : 'invert(0%)'
  }), [active, icon]);
  return /*#__PURE__*/React.createElement(CustomIconDiv, {
    style: inlineStyle
  });
}