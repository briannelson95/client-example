import { Box, Button, Card, Code, Grid, Stack, Text } from '@sanity/ui';
import React, { useCallback } from 'react';
import { Alert } from '../../components/Alert';
export function InvalidValue(props) {
  const {
    onChange,
    onIgnore,
    resolution
  } = props;
  const handleAction = useCallback(() => {
    if (resolution) {
      onChange({
        type: 'mutation',
        patches: resolution.patches
      });
    }
  }, [onChange, resolution]);
  if (!resolution) return null;
  return /*#__PURE__*/React.createElement(Alert, {
    suffix: /*#__PURE__*/React.createElement(Stack, {
      padding: 2
    }, resolution.action && /*#__PURE__*/React.createElement(Grid, {
      columns: [1, 2],
      gap: 1
    }, /*#__PURE__*/React.createElement(Button, {
      mode: "ghost",
      onClick: onIgnore,
      text: "Ignore"
    }), /*#__PURE__*/React.createElement(Button, {
      onClick: handleAction,
      text: resolution.action,
      tone: "caution"
    })), /*#__PURE__*/React.createElement(Box, {
      padding: 3
    }, resolution.action && /*#__PURE__*/React.createElement(Text, {
      as: "p",
      muted: true,
      size: 1
    }, "NOTE: It\u2019s generally safe to perform the action above, but if you are in doubt, get in touch with those responsible for configuring your studio."))),
    title: /*#__PURE__*/React.createElement(React.Fragment, null, "Invalid block value")
  }, /*#__PURE__*/React.createElement(Stack, {
    space: 3
  }, /*#__PURE__*/React.createElement(Text, {
    as: "p",
    muted: true,
    size: 1
  }, resolution.description), /*#__PURE__*/React.createElement(Card, {
    border: true,
    overflow: "auto",
    padding: 2,
    tone: "inherit"
  }, /*#__PURE__*/React.createElement(Code, {
    language: "json"
  }, JSON.stringify(resolution.item, null, 2)))));
}