// Modified version of https://usehooks.com/useOnClickOutside that can take multiple refs
import { useEffect } from 'react';
export function useOnClickOutside(refs, handler) {
  useEffect(() => {
    const listener = event => {
      const target = event.target;

      if (target instanceof HTMLElement) {
        if (refs.some(ref => {
          var _ref$current;

          return (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.contains(target);
        })) {
          return;
        }

        handler(event);
      }
    };

    document.addEventListener('mousedown', listener);
    document.addEventListener('touchstart', listener);
    return () => {
      document.removeEventListener('mousedown', listener);
      document.removeEventListener('touchstart', listener);
    };
  }, [refs, handler]);
}