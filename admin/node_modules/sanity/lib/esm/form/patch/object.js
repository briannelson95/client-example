import _isObject from "lodash/isObject";
import _clone from "lodash/clone";
import _omit from "lodash/omit";
import { applyPatch } from './applyPatch';
export function _objectApply(value, patch) {
  const nextValue = _clone(value);

  if (patch.path.length === 0) {
    // its directed to me
    if (patch.type === 'set') {
      if (!_isObject(patch.value)) {
        // eslint-disable-line max-depth
        throw new Error('Cannot set value of an object to a non-object');
      }

      return patch.value;
    } else if (patch.type === 'unset') {
      return undefined;
    } else if (patch.type === 'setIfMissing') {
      // console.log('IS IT missing?', value)
      return value === undefined ? patch.value : value;
    }

    throw new Error("Invalid object operation: ".concat(patch.type));
  } // The patch is not directed to me


  const [head, ...tail] = patch.path;

  if (typeof head !== 'string') {
    throw new Error("Expected field name to be a string, instad got: ".concat(head));
  }

  if (tail.length === 0 && patch.type === 'unset') {
    return _omit(nextValue, head);
  }

  nextValue[head] = applyPatch(nextValue[head], { ...patch,
    path: tail
  });
  return nextValue;
}