/* eslint-disable camelcase */
export function setIfMissing(value) {
  let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return {
    type: 'setIfMissing',
    path,
    value
  };
}
export function insert(items, position) {
  let path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  return {
    type: 'insert',
    path,
    position,
    items
  };
}
export function set(value) {
  let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return {
    type: 'set',
    path,
    value
  };
}
export function unset() {
  let path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
  return {
    type: 'unset',
    path
  };
}
export function inc() {
  let amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return {
    type: 'inc',
    path,
    value: amount
  };
}
export function dec() {
  let amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;
  let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return {
    type: 'dec',
    path,
    value: amount
  };
}
export function prefixPath(patch, segment) {
  return { ...patch,
    path: [segment, ...patch.path]
  };
}