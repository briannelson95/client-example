import React, { useCallback, useMemo, useState } from 'react';
import { PackageIcon } from '@sanity/icons';
import { useModuleStatus } from '../../../../module-status';
import { StatusButton } from '../../StatusButton';
import { isDev } from '../../../../environment';
import { useClient } from '../../../../hooks';
import { useColorScheme } from '../../../colorScheme';
import { ChangelogDialog } from './ChangelogDialog';
import { ChangelogAccordion } from './ChangelogAccordion';
const EMPTY_ARRAY = [];
export function ChangelogButton() {
  const [open, setOpen] = useState(false);
  const [buttonElement, setButtonElement] = useState(null);
  const client = useClient();
  const versionedClient = useMemo(() => client.withConfig({
    apiVersion: '1'
  }), [client]); // get root scheme

  const {
    scheme
  } = useColorScheme();
  const {
    value,
    error,
    isLoading
  } = useModuleStatus({
    client: versionedClient
  });
  const {
    changelog,
    currentVersion,
    latestVersion,
    isUpToDate
  } = value || {};
  const handleOpen = useCallback(() => setOpen(true), []);
  const handleClose = useCallback(() => {
    setOpen(false);

    if (buttonElement) {
      buttonElement.focus();
    }
  }, [buttonElement]);
  const dialogProps = useMemo(() => ({
    footer: /*#__PURE__*/React.createElement(ChangelogAccordion, {
      defaultOpen: isDev
    }),
    onClickOutside: handleClose,
    onClose: handleClose,
    // force root scheme here to "break out" of the navbar's dark scheme
    scheme
  }), [handleClose, scheme]);

  if (error || isLoading || isUpToDate) {
    return null;
  }

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StatusButton, {
    active: true,
    icon: PackageIcon,
    mode: "bleed",
    onClick: handleOpen,
    ref: setButtonElement,
    selected: open,
    statusTone: "primary"
  }), open && /*#__PURE__*/React.createElement(ChangelogDialog, {
    changelog: changelog || EMPTY_ARRAY,
    currentVersion: currentVersion,
    dialogProps: dialogProps,
    latestVersion: latestVersion
  }));
}