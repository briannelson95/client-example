function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef, useMemo } from 'react';
import { Inline, Label } from '@sanity/ui';
import { PreviewCard } from '../../../../components/PreviewCard';
import { useSchema } from '../../../../hooks';
import { DocumentPreviewPresence } from '../../../../presence';
import { IntentLink } from '../../../../router';
import { SanityPreview } from '../../../../preview';
import { useDocumentPresence } from '../../../../datastores';
import { getPublishedId } from '../../../../util';
export function SearchItem(props) {
  const {
    documentId,
    documentType,
    onClick,
    ...restProps
  } = props;
  const documentPresence = useDocumentPresence(documentId);
  const schema = useSchema();
  const schemaType = schema.get(documentType);
  const params = useMemo(() => ({
    id: getPublishedId(documentId),
    type: documentType
  }), [documentId, documentType]);
  const previewValue = useMemo(() => ({
    _id: documentId,
    _type: documentType
  }), [documentId, documentType]);
  const LinkComponent = useMemo(() =>
  /*#__PURE__*/
  // eslint-disable-next-line @typescript-eslint/no-shadow
  forwardRef(function LinkComponent(linkProps, ref) {
    return /*#__PURE__*/React.createElement(IntentLink, _extends({}, linkProps, {
      intent: "edit",
      params: params,
      tabIndex: -1,
      ref: ref
    }));
  }), [params]);
  if (!schemaType) return null;
  return /*#__PURE__*/React.createElement(PreviewCard, _extends({
    "data-as": "a",
    as: LinkComponent,
    onClick: onClick
  }, restProps, {
    radius: 2
  }), /*#__PURE__*/React.createElement(SanityPreview, {
    layout: "default",
    schemaType: schemaType,
    status: /*#__PURE__*/React.createElement(Inline, {
      space: 3
    }, documentPresence && documentPresence.length > 0 && /*#__PURE__*/React.createElement(DocumentPreviewPresence, {
      presence: documentPresence
    }), /*#__PURE__*/React.createElement(Label, {
      size: 0,
      muted: true
    }, documentType || 'NONE')),
    value: previewValue
  }));
}