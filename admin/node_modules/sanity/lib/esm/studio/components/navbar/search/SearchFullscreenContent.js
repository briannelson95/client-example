var _templateObject;

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import { Card, Portal } from '@sanity/ui';
import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { useColorScheme } from '../../../colorScheme';
const StyledCard = styled(Card)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  flex-direction: column;\n"])));
export const SearchFullscreenContent = /*#__PURE__*/forwardRef(function SearchFullscreenContent(props, ref) {
  const {
    scheme
  } = useColorScheme();
  return /*#__PURE__*/React.createElement(Portal, null, /*#__PURE__*/React.createElement(StyledCard, _extends({
    display: "flex",
    flex: 1,
    ref: ref,
    scheme: scheme
  }, props)));
});