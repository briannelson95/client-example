var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import { Box, Card } from '@sanity/ui';
import styled, { css } from 'styled-components';
import { listStyles } from './listStyles';
export const SpaceBox = styled(Box)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  ", ";\n"])), listStyles);
export const RootBox = styled(Box)(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n  ", ":first-child {\n    &:not([data-list-type='number'], [data-list-type='bullet']) {\n      margin-top: 0;\n    }\n  }\n\n  ", ":last-child {\n    margin-bottom: 0;\n  }\n"])), SpaceBox, SpaceBox);
export const ListBoxOuter = styled(Box)(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n  line-height: 1;\n"])));
export const ListBox = styled(Box)(() => {
  return css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n    &:not([hidden]) {\n      position: relative;\n      padding-left: 2rem;\n      display: inline-flex;\n    }\n\n    & > [data-list-prefix] {\n      position: absolute;\n      width: 3rem;\n      left: -2rem;\n      text-align: right;\n\n      &[data-list-prefix='bullet'] {\n        top: -0.1875em;\n\n        & > span:before {\n          content: var(--bullet-marker);\n          font-size: 0.46666em;\n        }\n      }\n\n      &[data-list-prefix='number'] {\n        counter-increment: section;\n\n        & > span:before {\n          font-size: 1em;\n          content: var(--bullet-marker);\n        }\n      }\n    }\n  "])));
});
export const ImageCard = styled(Card)(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n  position: relative;\n  padding-bottom: ", "%;\n  background-image: ", ";\n  background-size: cover;\n\n  img {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n"])), _ref => {
  let {
    $aspectRatio
  } = _ref;
  return $aspectRatio;
}, _ref2 => {
  let {
    $lqip
  } = _ref2;
  return "url(".concat($lqip, ")");
});