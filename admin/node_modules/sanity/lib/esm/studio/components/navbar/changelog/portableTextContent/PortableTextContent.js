import React from 'react';
import { PortableText } from '@portabletext/react';
import { Box, Card, Code, Heading, Stack, Text } from '@sanity/ui';
import urlBuilder from '@sanity/image-url';
import { getProject } from '@sanity/asset-utils';
import { ImageCard, ListBox, ListBoxOuter, RootBox, SpaceBox } from './PortableTextContent.styles';

function Image(_ref) {
  let {
    value
  } = _ref;

  if (!(value !== null && value !== void 0 && value.asset)) {
    return null;
  }

  const project = getProject(value.asset);
  const url = urlBuilder(project).image(value).fit('max').auto('format').url();
  const {
    asset,
    alt,
    caption
  } = value;
  const {
    dimensions,
    lqip
  } = (asset === null || asset === void 0 ? void 0 : asset.metadata) || {};
  const aspectRatio = dimensions.height / dimensions.width * 100;
  return /*#__PURE__*/React.createElement(SpaceBox, {
    marginY: 4
  }, /*#__PURE__*/React.createElement(Stack, {
    space: 3,
    as: "figure"
  }, /*#__PURE__*/React.createElement(ImageCard, {
    radius: 1,
    shadow: 1,
    overflow: "hidden",
    $aspectRatio: aspectRatio,
    $lqip: lqip
  }, /*#__PURE__*/React.createElement("img", {
    src: url,
    alt: alt || caption,
    referrerPolicy: "strict-origin-when-cross-origin"
  })), caption && /*#__PURE__*/React.createElement(Text, {
    align: "center",
    as: "figcaption",
    muted: true,
    size: 1
  }, value.caption)));
}

const components = {
  types: {
    image: _ref2 => {
      let {
        value
      } = _ref2;
      return /*#__PURE__*/React.createElement(Image, {
        value: value
      });
    },
    code: _ref3 => {
      let {
        value
      } = _ref3;
      return /*#__PURE__*/React.createElement(SpaceBox, {
        marginY: 4
      }, /*#__PURE__*/React.createElement(Card, {
        padding: 3,
        tone: "transparent",
        radius: 1,
        overflow: "auto"
      }, /*#__PURE__*/React.createElement(Code, {
        size: 1,
        language: value === null || value === void 0 ? void 0 : value.language
      }, value === null || value === void 0 ? void 0 : value.code)));
    }
  },
  block: {
    h1: _ref4 => {
      let {
        children
      } = _ref4;
      return /*#__PURE__*/React.createElement(SpaceBox, {
        marginBottom: 4,
        marginTop: 5
      }, /*#__PURE__*/React.createElement(Heading, {
        size: 5
      }, children));
    },
    h2: _ref5 => {
      let {
        children
      } = _ref5;
      return /*#__PURE__*/React.createElement(SpaceBox, {
        marginBottom: 4,
        marginTop: 5
      }, /*#__PURE__*/React.createElement(Heading, {
        size: 4
      }, children));
    },
    h3: _ref6 => {
      let {
        children
      } = _ref6;
      return /*#__PURE__*/React.createElement(SpaceBox, {
        marginBottom: 4,
        marginTop: 5
      }, /*#__PURE__*/React.createElement(Heading, {
        size: 3
      }, children));
    },
    h4: _ref7 => {
      let {
        children
      } = _ref7;
      return /*#__PURE__*/React.createElement(SpaceBox, {
        marginBottom: 4,
        marginTop: 5
      }, /*#__PURE__*/React.createElement(Heading, {
        size: 2
      }, children));
    },
    h5: _ref8 => {
      let {
        children
      } = _ref8;
      return /*#__PURE__*/React.createElement(SpaceBox, {
        marginBottom: 4,
        marginTop: 5
      }, /*#__PURE__*/React.createElement(Heading, {
        size: 1
      }, children));
    },
    h6: _ref9 => {
      let {
        children
      } = _ref9;
      return /*#__PURE__*/React.createElement(SpaceBox, {
        marginBottom: 4,
        marginTop: 5
      }, /*#__PURE__*/React.createElement(Heading, {
        size: 0
      }, children));
    },
    normal: _ref10 => {
      let {
        children
      } = _ref10;
      return /*#__PURE__*/React.createElement(SpaceBox, {
        marginY: 4
      }, /*#__PURE__*/React.createElement(Text, {
        as: "p",
        muted: true,
        size: 1
      }, children));
    }
  },
  list: {
    bullet: _ref11 => {
      let {
        children
      } = _ref11;
      return /*#__PURE__*/React.createElement(SpaceBox, {
        "data-list-type": "bullet",
        marginBottom: 4
      }, /*#__PURE__*/React.createElement(Box, {
        as: "ul"
      }, children));
    },
    number: _ref12 => {
      let {
        children
      } = _ref12;
      return /*#__PURE__*/React.createElement(SpaceBox, {
        "data-list-type": "number",
        marginBottom: 4
      }, /*#__PURE__*/React.createElement(Box, {
        as: "ol"
      }, children));
    }
  },
  listItem: {
    bullet: _ref13 => {
      let {
        children
      } = _ref13;
      return /*#__PURE__*/React.createElement(ListBoxOuter, {
        marginBottom: 1,
        forwardedAs: "li"
      }, /*#__PURE__*/React.createElement(ListBox, null, /*#__PURE__*/React.createElement(Text, {
        muted: true,
        size: 1,
        "data-list-prefix": "bullet"
      }), /*#__PURE__*/React.createElement(Text, {
        muted: true,
        size: 1
      }, children)));
    },
    number: _ref14 => {
      let {
        children
      } = _ref14;
      return /*#__PURE__*/React.createElement(ListBoxOuter, {
        marginBottom: 1,
        forwardedAs: "li"
      }, /*#__PURE__*/React.createElement(ListBox, null, /*#__PURE__*/React.createElement(Text, {
        muted: true,
        "data-list-prefix": "number",
        size: 1
      }), /*#__PURE__*/React.createElement(Text, {
        muted: true,
        size: 1
      }, children)));
    }
  }
};
export function PortableTextContent(props) {
  const {
    value
  } = props;
  return /*#__PURE__*/React.createElement(RootBox, null, /*#__PURE__*/React.createElement(PortableText, {
    value: value,
    components: components
  }));
}