import _orderBy from "lodash/orderBy";

var _templateObject;

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import React, { forwardRef, memo, useMemo } from 'react';
import * as PathUtils from '@sanity/util/paths';
import { Box, Card, Flex, MenuItem, Text } from '@sanity/ui';
import { LinkIcon } from '@sanity/icons';
import styled from 'styled-components';
import { UserAvatar } from '../../../../components/UserAvatar';
import { IntentLink } from '../../../../router';
const AvatarCard = styled(Card)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  background: transparent;\n  margin: calc((-35px + 11px) / 2);\n"])));
export const PresenceMenuItem = /*#__PURE__*/memo(function PresenceMenuItem(_ref) {
  let {
    presence
  } = _ref;

  const lastActiveLocation = _orderBy(presence.locations || [], ['lastActiveAt'], ['desc']).find(location => location.documentId);

  const hasLink = Boolean(lastActiveLocation === null || lastActiveLocation === void 0 ? void 0 : lastActiveLocation.documentId);
  const LinkComponent = useMemo(() =>
  /*#__PURE__*/
  // eslint-disable-next-line @typescript-eslint/no-shadow
  forwardRef(function LinkComponent(linkProps, ref) {
    if (!(lastActiveLocation !== null && lastActiveLocation !== void 0 && lastActiveLocation.path)) return null;
    return /*#__PURE__*/React.createElement(IntentLink, _extends({}, linkProps, {
      intent: "edit",
      params: {
        id: lastActiveLocation === null || lastActiveLocation === void 0 ? void 0 : lastActiveLocation.documentId,
        path: PathUtils.toString(lastActiveLocation === null || lastActiveLocation === void 0 ? void 0 : lastActiveLocation.path)
      },
      ref: ref
    }));
  }), [lastActiveLocation]);
  return /*#__PURE__*/React.createElement(MenuItem, {
    as: lastActiveLocation ? LinkComponent : 'div',
    "data-as": lastActiveLocation ? 'a' : 'div',
    padding: 4,
    paddingRight: 3
  }, /*#__PURE__*/React.createElement(Flex, {
    align: "center"
  }, /*#__PURE__*/React.createElement(AvatarCard, null, /*#__PURE__*/React.createElement(UserAvatar, {
    size: 1,
    key: presence.user.id,
    user: presence.user
  })), /*#__PURE__*/React.createElement(Box, {
    flex: 1,
    marginLeft: 4
  }, /*#__PURE__*/React.createElement(Text, {
    textOverflow: "ellipsis"
  }, presence.user.displayName)), hasLink && /*#__PURE__*/React.createElement(Box, {
    marginLeft: 3
  }, /*#__PURE__*/React.createElement(Text, null, /*#__PURE__*/React.createElement(LinkIcon, null)))));
});