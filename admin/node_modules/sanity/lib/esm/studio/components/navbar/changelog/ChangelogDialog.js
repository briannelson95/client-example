var _templateObject;

function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import { Box, Card, Dialog, MenuDivider, Stack, Text } from '@sanity/ui';
import React from 'react';
import styled from 'styled-components';
import { ChangelogList } from './ChangelogList';
const StickyBox = styled(Box)(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  position: sticky;\n  top: 0;\n  z-index: 1;\n"])));
const EMPTY_ARRAY = [];
export function ChangelogDialog(props) {
  const {
    changelog,
    currentVersion,
    dialogProps,
    latestVersion
  } = props;
  const changelogWithChangeItems = (changelog || EMPTY_ARRAY).filter(c => {
    var _ref;

    return ((_ref = (c === null || c === void 0 ? void 0 : c.changeItems) || EMPTY_ARRAY) === null || _ref === void 0 ? void 0 : _ref.length) > 0;
  });
  const hasChangelog = changelogWithChangeItems.length > 0;
  return /*#__PURE__*/React.createElement(Dialog, _extends({
    header: "Upgrade the Sanity Studio",
    width: 1
  }, dialogProps, {
    id: "changelog-dialog"
  }), /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StickyBox, null, /*#__PURE__*/React.createElement(Card, {
    padding: 4,
    borderBottom: hasChangelog
  }, /*#__PURE__*/React.createElement(Stack, {
    space: 4
  }, /*#__PURE__*/React.createElement(Stack, {
    space: 3
  }, hasChangelog && /*#__PURE__*/React.createElement(Text, {
    weight: "semibold"
  }, "Changelog"), currentVersion && latestVersion && /*#__PURE__*/React.createElement(Text, {
    muted: true,
    size: 1
  }, "Your Sanity Studio is version ", /*#__PURE__*/React.createElement("code", null, currentVersion), ". The latest version is ", /*#__PURE__*/React.createElement("code", null, latestVersion), "."))))), hasChangelog && /*#__PURE__*/React.createElement(Stack, {
    space: 5,
    paddingY: 4
  }, changelogWithChangeItems === null || changelogWithChangeItems === void 0 ? void 0 : changelogWithChangeItems.map((log, index) => {
    const {
      changeItems,
      version
    } = log;
    const showDivider = index < changelogWithChangeItems.length - 1;
    const isLatest = version === latestVersion;
    return /*#__PURE__*/React.createElement(React.Fragment, {
      key: version
    }, /*#__PURE__*/React.createElement(Box, {
      paddingX: 4
    }, /*#__PURE__*/React.createElement(ChangelogList, {
      changeItems: changeItems || EMPTY_ARRAY,
      version: version,
      isLatest: isLatest
    })), showDivider && /*#__PURE__*/React.createElement(MenuDivider, null));
  }))));
}