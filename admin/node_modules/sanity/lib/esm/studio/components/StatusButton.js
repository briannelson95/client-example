var _templateObject, _templateObject2;

function _taggedTemplateLiteral(strings, raw) { if (!raw) { raw = strings.slice(0); } return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

import { Button } from '@sanity/ui';
import styled, { css } from 'styled-components';
const dot = css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n  &:after {\n    content: '';\n    width: 6px;\n    height: 6px;\n    background-color: var(--status-button-dot-bg);\n    position: absolute;\n    top: 0;\n    right: 0;\n    border-radius: 50%;\n    transform: translate(-7px, 7px);\n    border: 1px solid var(--card-bg-color);\n  }\n"])));
export const StatusButton = styled(Button)(_ref => {
  let {
    theme,
    active,
    statusTone
  } = _ref;
  const {
    color
  } = theme.sanity;
  const tone = color.selectable && color.selectable[statusTone].selected.bg;
  const showDot = active && tone;
  return css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n      position: relative;\n      --status-button-dot-bg: ", ";\n\n      ", "\n    "])), tone, showDot && dot);
});