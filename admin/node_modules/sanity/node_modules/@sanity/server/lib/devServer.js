"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.startDevServer = startDevServer;

var _chalk = _interopRequireDefault(require("chalk"));

var _vite = require("vite");

var _getViteConfig = require("./getViteConfig");

var _debug = require("./debug");

var _runtime = require("./runtime");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

async function startDevServer(options) {
  const {
    cwd,
    httpPort,
    httpHost,
    basePath: base,
    vite: extendViteConfig
  } = options;
  const startTime = Date.now();
  await (0, _runtime.writeSanityRuntime)({
    cwd,
    watch: true
  });
  (0, _debug.debug)('Resolving vite config');
  let viteConfig = await (0, _getViteConfig.getViteConfig)({
    basePath: base || '/',
    mode: 'development',
    server: {
      port: httpPort,
      host: httpHost
    },
    cwd
  });

  if (extendViteConfig) {
    viteConfig = extendViteConfig(viteConfig);
  }

  (0, _debug.debug)('Creating vite server');
  const server = await (0, _vite.createServer)(viteConfig);
  const info = server.config.logger.info;
  await server.listen();
  const startupDuration = Date.now() - startTime;
  const url = "http://".concat(httpHost || 'localhost', ":").concat(httpPort || '3333');
  info("Sanity Studio " + "using ".concat(_chalk.default.cyan("vite@".concat(require('vite/package.json').version)), " ") + "ready in ".concat(_chalk.default.cyan("".concat(Math.ceil(startupDuration), "ms")), " ") + "and running at ".concat(_chalk.default.cyan(url)));
  return {
    close: () => server.close()
  };
}