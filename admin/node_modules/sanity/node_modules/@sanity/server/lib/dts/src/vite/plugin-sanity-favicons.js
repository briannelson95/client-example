import path from 'path';
import fs from 'fs/promises';
import { generateWebManifest } from '../webManifest';
const mimeTypes = {
    '.ico': 'image/x-icon',
    '.svg': 'image/svg+xml',
    '.png': 'image/png',
};
export function sanityFaviconsPlugin({ faviconsPath, staticUrlPath, }) {
    const cache = {};
    async function getFavicons() {
        if (cache.favicons) {
            return cache.favicons;
        }
        cache.favicons = await fs.readdir(faviconsPath);
        return cache.favicons;
    }
    return {
        name: '@sanity/server/sanity-favicons',
        apply: 'serve',
        configureServer(viteDevServer) {
            const webManifest = JSON.stringify(generateWebManifest(staticUrlPath), null, 2);
            const webManifestPath = `${staticUrlPath}/manifest.webmanifest`;
            return () => {
                viteDevServer.middlewares.use(async (req, res, next) => {
                    if (req.url?.endsWith(webManifestPath)) {
                        res.writeHead(200, 'OK', { 'content-type': 'application/manifest+json' });
                        res.write(webManifest);
                        res.end();
                        return;
                    }
                    const parsedUrl = req._parsedUrl || new URL(req.url || '/', 'http://localhost:3333');
                    const icons = await getFavicons();
                    const fileName = path.basename(parsedUrl.pathname || '');
                    if (!icons.includes(fileName)) {
                        next();
                        return;
                    }
                    const mimeType = mimeTypes[path.extname(fileName)] || 'application/octet-stream';
                    res.writeHead(200, 'OK', { 'content-type': mimeType });
                    res.write(await fs.readFile(path.join(faviconsPath, fileName)));
                    res.end();
                });
            };
        },
    };
}
//# sourceMappingURL=plugin-sanity-favicons.js.map