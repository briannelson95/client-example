import type { InlineConfig } from 'vite';
export interface ViteOptions {
    /**
     * Root path of the studio/sanity app
     */
    cwd: string;
    /**
     * Base path (eg under where to serve the app - `/studio` or similar)
     * Will be normalized by `getViteConfig` to ensure it starts and end with a `/`
     */
    basePath?: string;
    /**
     * Output directory (eg where to place the built files, if any)
     */
    outputDir?: string;
    /**
     * Whether or not to enable source maps
     */
    sourceMap?: boolean;
    /**
     * Whether or not to minify the output (only used in `mode: 'production'`)
     */
    minify?: boolean;
    /**
     * HTTP development server configuration
     */
    server?: {
        port?: number;
        host?: string;
    };
    /**
     * Mode to run vite in - eg development or production
     */
    mode: 'development' | 'production';
}
/**
 * Get a configuration object for Vite based on the passed options
 *
 * @internal Only meant for consumption inside of Sanity modules, do not depend on this externally
 */
export declare function getViteConfig(options: ViteOptions): Promise<InlineConfig>;
/**
 * Ensure Sanity entry chunk is always loaded
 *
 * @param config - User-modified configuration
 * @returns Merged configuration
 * @internal
 */
export declare function finalizeViteConfig(config: InlineConfig): InlineConfig;
//# sourceMappingURL=getViteConfig.d.ts.map