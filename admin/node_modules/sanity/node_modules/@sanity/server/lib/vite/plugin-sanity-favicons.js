"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sanityFaviconsPlugin = sanityFaviconsPlugin;

var _path = _interopRequireDefault(require("path"));

var _promises = _interopRequireDefault(require("fs/promises"));

var _webManifest = require("../webManifest");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const mimeTypes = {
  '.ico': 'image/x-icon',
  '.svg': 'image/svg+xml',
  '.png': 'image/png'
};

function sanityFaviconsPlugin(_ref) {
  let {
    faviconsPath,
    staticUrlPath
  } = _ref;
  const cache = {};

  async function getFavicons() {
    if (cache.favicons) {
      return cache.favicons;
    }

    cache.favicons = await _promises.default.readdir(faviconsPath);
    return cache.favicons;
  }

  return {
    name: '@sanity/server/sanity-favicons',
    apply: 'serve',

    configureServer(viteDevServer) {
      const webManifest = JSON.stringify((0, _webManifest.generateWebManifest)(staticUrlPath), null, 2);
      const webManifestPath = "".concat(staticUrlPath, "/manifest.webmanifest");
      return () => {
        viteDevServer.middlewares.use(async (req, res, next) => {
          var _req$url;

          if ((_req$url = req.url) !== null && _req$url !== void 0 && _req$url.endsWith(webManifestPath)) {
            res.writeHead(200, 'OK', {
              'content-type': 'application/manifest+json'
            });
            res.write(webManifest);
            res.end();
            return;
          }

          const parsedUrl = req._parsedUrl || new URL(req.url || '/', 'http://localhost:3333');
          const icons = await getFavicons();

          const fileName = _path.default.basename(parsedUrl.pathname || '');

          if (!icons.includes(fileName)) {
            next();
            return;
          }

          const mimeType = mimeTypes[_path.default.extname(fileName)] || 'application/octet-stream';
          res.writeHead(200, 'OK', {
            'content-type': mimeType
          });
          res.write(await _promises.default.readFile(_path.default.join(faviconsPath, fileName)));
          res.end();
        });
      };
    }

  };
}