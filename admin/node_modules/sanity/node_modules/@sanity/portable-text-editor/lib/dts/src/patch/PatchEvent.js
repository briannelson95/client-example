import { flatten } from 'lodash';
import { prefixPath, set, unset, setIfMissing, insert, diffMatchPatch } from './patches';
export default class PatchEvent {
    constructor(patches) {
        this.patches = patches;
    }
    static from(...patches) {
        return new PatchEvent(flatten(patches));
    }
    prepend(...patches) {
        return PatchEvent.from([...flatten(patches), ...this.patches]);
    }
    append(...patches) {
        return PatchEvent.from([...this.patches, ...flatten(patches)]);
    }
    prefixAll(segment) {
        return PatchEvent.from(this.patches.map((patch) => prefixPath(patch, segment)));
    }
}
export { PatchEvent, set, unset, setIfMissing, insert, diffMatchPatch };
//# sourceMappingURL=PatchEvent.js.map