{"version":3,"file":"index.js","sources":["../src/utils/schema.ts","../src/utils/getPortableTextFeatures.ts","../src/patch/patches.ts","../src/utils/validateValue.ts","../src/utils/debug.ts","../src/utils/values.ts","../src/utils/weakMaps.ts","../src/editor/hooks/usePortableTextEditor.ts","../src/editor/hooks/usePortableTextEditorSelection.ts","../src/editor/hooks/usePortableTextEditorValue.ts","../src/utils/operationToPatches.ts","../src/editor/plugins/createWithMaxBlocks.ts","../src/utils/withPreserveKeys.ts","../src/editor/plugins/createWithObjectKeys.ts","../src/utils/withoutPatching.ts","../src/patch/arrayInsert.ts","../src/patch/array.ts","../src/patch/object.ts","../src/patch/primitive.ts","../src/patch/string.ts","../src/patch/applyPatch.ts","../src/utils/patchToOperations.ts","../src/editor/plugins/createWithUndoRedo.ts","../src/editor/plugins/createWithPatches.ts","../src/utils/paths.ts","../src/utils/ranges.ts","../src/editor/plugins/createWithPortableTextBlockStyle.ts","../src/editor/plugins/createWithPortableTextLists.ts","../src/editor/plugins/createWithPortableTextMarkModel.ts","../src/editor/plugins/createWithPortableTextSelections.ts","../src/editor/plugins/createWithSchemaTypes.ts","../src/editor/plugins/createWithUtils.ts","../src/editor/plugins/createWithEditableAPI.ts","../src/editor/plugins/createWithHotKeys.ts","../src/editor/plugins/createWithInsertData.ts","../src/editor/plugins/index.ts","../src/editor/PortableTextEditor.tsx","../src/utils/patches.ts","../src/utils/selection.ts","../src/editor/nodes/DefaultAnnotation.tsx","../src/editor/DraggableChild.tsx","../src/editor/Leaf.tsx","../src/editor/nodes/index.ts","../src/editor/nodes/TextBlock.tsx","../src/editor/nodes/DefaultObject.tsx","../src/editor/DraggableBlock.tsx","../src/editor/Element.tsx","../src/editor/hooks/useForwardedRef.ts","../src/editor/Editable.tsx"],"sourcesContent":["import Schema from '@sanity/schema'\n\nexport function compileType(rawType: any) {\n  return Schema.compile({\n    name: 'blockTypeSchema',\n    types: [rawType],\n  }).get(rawType.name)\n}\n","import {ArraySchemaType, ObjectSchemaType, SchemaType} from '@sanity/types'\nimport {PortableTextBlock, PortableTextFeatures} from '../types/portableText'\nimport {Type} from '../types/schema'\n\nexport function getPortableTextFeatures(\n  portabletextType: ArraySchemaType<PortableTextBlock>\n): PortableTextFeatures {\n  if (!portabletextType) {\n    throw new Error(\"Parameter 'portabletextType' missing (required)\")\n  }\n  const blockType = portabletextType.of?.find(findBlockType) as ObjectSchemaType | undefined\n  if (!blockType) {\n    throw new Error('Block type is not defined in this schema (required)')\n  }\n  const childrenField = blockType.fields?.find((field) => field.name === 'children') as\n    | {type: ArraySchemaType}\n    | undefined\n  if (!childrenField) {\n    throw new Error('Children field for block type found in schema (required)')\n  }\n  const ofType = childrenField.type.of\n  if (!ofType) {\n    throw new Error('Valid types for block children not found in schema (required)')\n  }\n  const spanType = ofType.find((memberType) => memberType.name === 'span') as\n    | ObjectSchemaType\n    | undefined\n  if (!spanType) {\n    throw new Error('Span type not found in schema (required)')\n  }\n  const inlineObjectTypes = (ofType.filter((memberType) => memberType.name !== 'span') ||\n    []) as ObjectSchemaType[]\n  const blockObjectTypes = (portabletextType.of?.filter((field) => field.name !== blockType.name) ||\n    []) as ObjectSchemaType[]\n  const annotations = resolveEnabledAnnotationTypes(spanType)\n  return {\n    styles: resolveEnabledStyles(blockType),\n    decorators: resolveEnabledDecorators(spanType),\n    lists: resolveEnabledListItems(blockType),\n    annotations: annotations,\n    types: {\n      block: blockType,\n      span: spanType,\n      portableText: portabletextType,\n      inlineObjects: inlineObjectTypes,\n      blockObjects: blockObjectTypes,\n      annotations: annotations.map((an: Type) => an.type),\n    },\n  }\n}\n\nfunction resolveEnabledStyles(blockType: ObjectSchemaType) {\n  const styleField = blockType.fields?.find((btField) => btField.name === 'style')\n  if (!styleField) {\n    throw new Error(\"A field with name 'style' is not defined in the block type (required).\")\n  }\n  const textStyles =\n    styleField.type.options?.list &&\n    styleField.type.options.list?.filter((style: {value: string}) => style.value)\n  if (!textStyles || textStyles.length === 0) {\n    throw new Error(\n      'The style fields need at least one style ' +\n        \"defined. I.e: {title: 'Normal', value: 'normal'}.\"\n    )\n  }\n  return textStyles\n}\n\nfunction resolveEnabledAnnotationTypes(spanType: ObjectSchemaType) {\n  return (spanType as any).annotations.map((annotation: Type) => {\n    return {\n      blockEditor: annotation.blockEditor,\n      portableText: annotation.portableText,\n      title: annotation.title,\n      type: annotation,\n      value: annotation.name,\n      icon: annotation.icon,\n    }\n  })\n}\n\nfunction resolveEnabledDecorators(spanType: ObjectSchemaType) {\n  return (spanType as any).decorators\n}\n\nfunction resolveEnabledListItems(blockType: ObjectSchemaType) {\n  const listField = blockType.fields?.find((btField) => btField.name === 'list')\n  if (!listField) {\n    throw new Error(\"A field with name 'list' is not defined in the block type (required).\")\n  }\n  const listItems =\n    listField.type.options?.list &&\n    listField.type.options.list.filter((list: {value: string}) => list.value)\n  if (!listItems) {\n    throw new Error('The list field need at least to be an empty array')\n  }\n  return listItems\n}\n\nfunction findBlockType(type: SchemaType): ObjectSchemaType | null {\n  if (type.type) {\n    return findBlockType(type.type)\n  }\n\n  if (type.name === 'block') {\n    return type as ObjectSchemaType\n  }\n\n  return null\n}\n","import {Path, PathSegment} from '@sanity/types'\nimport * as DMP from 'diff-match-patch'\n\nimport type {\n  SetIfMissingPatch,\n  InsertPatch,\n  InsertPosition,\n  SetPatch,\n  UnsetPatch,\n  DiffMatchPatch,\n} from '../types/patch'\n\nexport function setIfMissing(value: any, path: Path = []): SetIfMissingPatch {\n  return {\n    type: 'setIfMissing',\n    path,\n    value,\n  }\n}\n\n// eslint-disable-next-line new-cap\nconst dmp = new DMP.diff_match_patch()\n\nexport function diffMatchPatch(\n  currentValue: string,\n  nextValue: string,\n  path: Path = []\n): DiffMatchPatch {\n  const patch = dmp\n    .patch_make(currentValue, nextValue)\n    .map((_patch) => _patch.toString())\n    .join('')\n  return {type: 'diffMatchPatch', path, value: patch}\n}\n\nexport function insert(items: any[], position: InsertPosition, path: Path = []): InsertPatch {\n  return {\n    type: 'insert',\n    path,\n    position,\n    items,\n  }\n}\n\nexport function set(value: any, path: Path = []): SetPatch {\n  return {type: 'set', path, value}\n}\n\nexport function unset(path: Path = []): UnsetPatch {\n  return {type: 'unset', path}\n}\n\nexport function prefixPath<T extends {path: Path}>(patch: T, segment: PathSegment): T {\n  return {\n    ...patch,\n    path: [segment, ...patch.path],\n  }\n}\n","import {flatten, isObject, uniq} from 'lodash'\nimport {set, unset, insert} from '../patch/PatchEvent'\nimport {PortableTextBlock, PortableTextChild, PortableTextFeatures} from '../types/portableText'\nimport {InvalidValueResolution} from '../types/editor'\n\nexport function validateValue(\n  value: PortableTextBlock[] | undefined,\n  portableTextFeatures: PortableTextFeatures,\n  keyGenerator: () => string\n): {valid: boolean; resolution: InvalidValueResolution | null} {\n  let resolution: InvalidValueResolution | null = null\n  let valid = true\n  const validChildTypes = [\n    ...[portableTextFeatures.types.span.name],\n    ...portableTextFeatures.types.inlineObjects.map((t) => t.name),\n  ]\n  const validBlockTypes = [\n    ...[portableTextFeatures.types.block.name],\n    ...portableTextFeatures.types.blockObjects.map((t) => t.name),\n  ]\n\n  // Undefined is allowed\n  if (value === undefined) {\n    return {valid: true, resolution: null}\n  }\n  // Only lengthy arrays are allowed\n  if (!Array.isArray(value) || value.length === 0) {\n    return {\n      valid: false,\n      resolution: {\n        patches: [unset([])],\n        description: 'Value must be an array or undefined',\n        action: 'Unset the value',\n        item: value,\n      },\n    }\n  }\n  if (\n    value.some((blk: PortableTextBlock, index: number): boolean => {\n      if (!isObject(blk)) {\n        resolution = {\n          patches: [unset([index])],\n          description: `Block must be an object, got ${String(blk)}`,\n          action: `Unset invalid item`,\n          item: blk,\n        }\n        return true\n      }\n      // Test that every block has a _key\n      if (!blk._key) {\n        resolution = {\n          patches: [set({...blk, _key: keyGenerator()}, [index])],\n          description: `Block at index ${index} is missing required _key.`,\n          action: 'Set the block with a random _key value',\n          item: blk,\n        }\n        return true\n      }\n      // Test that every block has valid _type\n      if (!blk._type || !validBlockTypes.includes(blk._type)) {\n        // Special case where block type is set to default 'block', but the block type is named something else according to the schema.\n        if (blk._type === 'block') {\n          const currentBlockTypeName = portableTextFeatures.types.block.name\n          resolution = {\n            patches: [set({...blk, _type: currentBlockTypeName}, [{_key: blk._key}])],\n            description: `Block with _key '${blk._key}' has invalid type name '${blk._type}'. According to the schema, the block type name is '${currentBlockTypeName}'`,\n            action: `Use type '${currentBlockTypeName}'`,\n            item: blk,\n          }\n          return true\n        }\n        resolution = {\n          patches: [unset([{_key: blk._key}])],\n          description: `Block with _key '${blk._key}' has invalid _type '${blk._type}'`,\n          action: 'Remove the block',\n          item: blk,\n        }\n        return true\n      }\n      // Test that every child in text block is valid\n      if (blk._type === portableTextFeatures.types.block.name) {\n        // Test that it has children\n        if (!blk.children) {\n          resolution = {\n            patches: [unset([{_key: blk._key}])],\n            description: `Text block with _key '${blk._key}' is missing required key 'children'.`,\n            action: 'Remove the block',\n            item: blk,\n          }\n          return true\n        }\n        // Test that markDefs exists\n        if (!blk.markDefs) {\n          resolution = {\n            patches: [set({...blk, markDefs: []}, [{_key: blk._key}])],\n            description: `Block is missing required key 'markDefs'.`,\n            action: 'Add empty markDefs array',\n            item: blk,\n          }\n          return true\n        }\n\n        // // Test that every span has .marks\n        // const spansWithUndefinedMarks = blk.children\n        //   .filter(cld => cld._type === portableTextFeatures.types.span.name)\n        //   .filter(cld => typeof cld.marks === 'undefined')\n\n        // if (spansWithUndefinedMarks.length > 0) {\n        //   const first = spansWithUndefinedMarks[0]\n        //   resolution = {\n        //     patches: [\n        //       set({...first, marks: []}, [{_key: blk._key}, 'children', {_key: first._key}])\n        //     ],\n        //     description: `Span has no .marks array`,\n        //     action: 'Add empty marks array',\n        //     item: first\n        //   }\n        //   return true\n        // }\n        const allUsedMarks: string[] = uniq(\n          flatten(\n            blk.children\n              .filter((cld: any) => cld._type === portableTextFeatures.types.span.name)\n              .map((cld: any) => cld.marks || [])\n          )\n        )\n        // // Test that all markDefs are in use\n        // if (blk.markDefs && blk.markDefs.length > 0) {\n        //   const unusedMarkDefs: string[] = uniq(\n        //     blk.markDefs.map(def => def._key).filter(key => !allUsedMarks.includes(key))\n        //   )\n        //   if (unusedMarkDefs.length > 0) {\n        //     resolution = {\n        //       patches: unusedMarkDefs.map(key =>\n        //         unset([{_key: blk._key}, 'markDefs', {_key: key}])\n        //       ),\n        //       description: `Block has unused mark definitions: ${unusedMarkDefs.join(', ')}.`,\n        //       action: 'Remove unused markDefs',\n        //       item: blk\n        //     }\n        //     return true\n        //   }\n        // }\n\n        // Test that every annotation mark used has a definition\n        const annotationMarks = allUsedMarks.filter(\n          (mark) => !portableTextFeatures.decorators.map((dec) => dec.value).includes(mark)\n        )\n        const orphanedMarks = annotationMarks.filter(\n          (mark) => !blk.markDefs.find((def: any) => def._key === mark)\n        )\n        if (orphanedMarks.length > 0) {\n          const children = blk.children.filter(\n            (cld: any) =>\n              Array.isArray(cld.marks) &&\n              cld.marks.some((mark: any) => orphanedMarks.includes(mark))\n          ) as PortableTextChild[]\n          if (children) {\n            resolution = {\n              patches: children.map((child) => {\n                return set(\n                  child.marks.filter((cmrk: any) => !orphanedMarks.includes(cmrk)),\n                  [{_key: blk._key}, 'children', {_key: child._key}, 'marks']\n                )\n              }),\n              description: `Block with _key '${blk._key}' contains marks (${orphanedMarks.join(\n                ', '\n              )}) not supported by the current content model.`,\n              action: 'Remove invalid marks',\n              item: blk,\n            }\n            return true\n          }\n        }\n\n        // Test that children is lengthy\n        if (blk.children && blk.children.length === 0) {\n          const newSpan = {\n            _type: portableTextFeatures.types.span.name,\n            _key: keyGenerator(),\n            text: '',\n          }\n          resolution = {\n            patches: [insert([newSpan], 'after', [{_key: blk._key}, 'children', 0])],\n            description: `Children for text block with _key '${blk._key}' is empty.`,\n            action: 'Insert an empty text',\n            item: blk,\n          }\n          return true\n        }\n        // Test every child\n        if (\n          blk.children.some((child: any, cIndex: number) => {\n            if (!child._key) {\n              const newchild = {...child, _key: keyGenerator()}\n              resolution = {\n                patches: [set(newchild, [{_key: blk._key}, 'children', cIndex])],\n                description: `Child at index ${cIndex} is missing required _key in block with _key ${blk._key}.`,\n                action: 'Set a new random _key on the object',\n                item: blk,\n              }\n              return true\n            }\n            // Verify that childs have valid types\n            if (!child._type || validChildTypes.includes(child._type) === false) {\n              resolution = {\n                patches: [unset([{_key: blk._key}, 'children', {_key: child._key}])],\n                description: `Child with _key '${child._key}' in block with key '${blk._key}' has invalid '_type' property (${child._type}).`,\n                action: 'Remove the object',\n                item: blk,\n              }\n              return true\n            }\n            // Verify that spans have .text\n            if (child._type === portableTextFeatures.types.span.name && child.text === undefined) {\n              resolution = {\n                patches: [\n                  set({...child, text: ''}, [{_key: blk._key}, 'children', {_key: child._key}]),\n                ],\n                description: `Child with _key '${child._key}' in block with key '${blk._key}' is missing text property!`,\n                action: `Write an empty .text to the object`,\n                item: blk,\n              }\n              return true\n            }\n            return false\n          })\n        ) {\n          valid = false\n        }\n      }\n      return false\n    })\n  ) {\n    valid = false\n  }\n  return {valid, resolution}\n}\n","import debug from 'debug'\n\nconst rootName = 'sanity-pte:'\n\nexport default debug(rootName)\nexport function debugWithName(name: string): debug.Debugger {\n  const namespace = `${rootName}${name}`\n  if (debug && debug.enabled(namespace)) {\n    return debug(namespace)\n  }\n  return debug(rootName)\n}\n","import {isEqual} from 'lodash'\nimport {Node, Element, Text, Descendant} from 'slate'\nimport {PathSegment} from '@sanity/types'\nimport {\n  MarkDef,\n  PortableTextBlock,\n  PortableTextChild,\n  PortableTextFeatures,\n  TextBlock,\n} from '../types/portableText'\n\nconst EMPTY_MARKDEFS: MarkDef[] = []\n\ntype Partial<T> = {\n  [P in keyof T]?: T[P]\n}\n\nfunction keepObjectEquality(\n  object: PortableTextBlock | PortableTextChild,\n  keyMap: Record<string, PortableTextBlock | PortableTextChild>\n) {\n  const value = keyMap[object._key]\n  if (value && isEqual(object, value)) {\n    return value\n  }\n  keyMap[object._key] = object\n  return object\n}\n\nexport function toSlateValue(\n  value: PortableTextBlock[] | undefined,\n  {portableTextFeatures}: {portableTextFeatures: PortableTextFeatures},\n  keyMap: Record<string, any> = {}\n): Descendant[] {\n  if (value && Array.isArray(value)) {\n    return value.map((block) => {\n      const {_type, _key, ...rest} = block\n      const voidChildren = [{_key: `${_key}-void-child`, _type: 'span', text: '', marks: []}]\n      const isPortableText = block && block._type === portableTextFeatures.types.block.name\n      if (isPortableText) {\n        const textBlock = block as TextBlock\n        let hasInlines = false\n        const hasMissingStyle = typeof textBlock.style === 'undefined'\n        const hasMissingMarkDefs = typeof textBlock.markDefs === 'undefined'\n        const children = textBlock.children.map((child) => {\n          const {_type: cType, _key: cKey, ...cRest} = child\n          if (cType !== 'span') {\n            hasInlines = true\n            return keepObjectEquality(\n              {\n                _type: cType,\n                _key: cKey,\n                children: voidChildren,\n                value: cRest,\n                __inline: true,\n              },\n              keyMap\n            )\n          }\n          // Original object\n          return child\n        })\n        if (!hasMissingStyle && !hasMissingMarkDefs && !hasInlines && Element.isElement(block)) {\n          // Original object\n          return block\n        }\n        if (hasMissingStyle) {\n          rest.style = portableTextFeatures.styles[0].value\n        }\n        if (hasMissingMarkDefs) {\n          rest.markDefs = EMPTY_MARKDEFS\n        }\n        return keepObjectEquality({_type, _key, ...rest, children}, keyMap)\n      }\n      return keepObjectEquality(\n        {\n          _type,\n          _key,\n          children: voidChildren,\n          value: rest,\n        },\n        keyMap\n      )\n    }) as Descendant[]\n  }\n  return []\n}\n\nexport function fromSlateValue(\n  value: (Node | Partial<Node>)[],\n  textBlockType: string,\n  keyMap: Record<string, PortableTextBlock | PortableTextChild> = {}\n): PortableTextBlock[] {\n  return value.map((block) => {\n    const {_key, _type} = block\n    if (!_key || !_type) {\n      throw new Error('Not a valid block')\n    }\n    if (_type === textBlockType && 'children' in block && Array.isArray(block.children) && _key) {\n      let hasInlines = false\n      const children = block.children.map((child) => {\n        const {_type: _cType} = child\n        if ('value' in child && _cType !== 'span') {\n          hasInlines = true\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const {value: v, _key: k, _type: t, __inline: _i, children: _c, ...rest} = child\n          return keepObjectEquality({...rest, ...v, _key: k as string, _type: t as string}, keyMap)\n        }\n        return child\n      })\n      if (!hasInlines) {\n        return block as PortableTextBlock // Original object\n      }\n      return keepObjectEquality({...block, children, _key, _type}, keyMap) as PortableTextBlock\n    }\n    const blockValue = 'value' in block && block.value\n    return keepObjectEquality(\n      {_key, _type, ...(typeof blockValue === 'object' ? blockValue : {})},\n      keyMap\n    ) as PortableTextBlock\n  })\n}\n\nexport function isEqualToEmptyEditor(\n  children: Descendant[] | PortableTextBlock[],\n  portableTextFeatures: PortableTextFeatures\n): boolean {\n  return (\n    children === undefined ||\n    (children && Array.isArray(children) && children.length === 0) ||\n    (children &&\n      Array.isArray(children) &&\n      children.length === 1 &&\n      Element.isElement(children[0]) &&\n      children[0]._type === portableTextFeatures.types.block.name &&\n      'style' in children[0] &&\n      children[0].style === portableTextFeatures.styles[0].value &&\n      Array.isArray(children[0].children) &&\n      children[0].children.length === 1 &&\n      Text.isText(children[0].children[0]) &&\n      children[0].children[0]._type === 'span' &&\n      children[0].children[0].text === '')\n  )\n}\n\nexport function findBlockAndIndexFromPath(\n  firstPathSegment: PathSegment,\n  children: (Node | Partial<Node>)[]\n): [Element | undefined, number | undefined] {\n  let blockIndex = -1\n  const isNumber = Number.isInteger(Number(firstPathSegment))\n  if (isNumber) {\n    blockIndex = Number(firstPathSegment)\n  } else if (children) {\n    blockIndex = children.findIndex(\n      (blk) => Element.isElement(blk) && isEqual({_key: blk._key}, firstPathSegment)\n    )\n  }\n  if (blockIndex > -1) {\n    return [children[blockIndex] as Element, blockIndex]\n  }\n  return [undefined, -1]\n}\n\nexport function findChildAndIndexFromPath(\n  secondPathSegment: PathSegment,\n  block: Element\n): [Element | Text | undefined, number] {\n  let childIndex = -1\n  const isNumber = Number.isInteger(Number(secondPathSegment))\n  if (isNumber) {\n    childIndex = Number(secondPathSegment)\n  } else {\n    childIndex = block.children.findIndex((child) => isEqual({_key: child._key}, secondPathSegment))\n  }\n  if (childIndex > -1) {\n    return [block.children[childIndex] as Element | Text, childIndex]\n  }\n  return [undefined, -1]\n}\n\nexport function getValueOrInitialValue(\n  value: unknown,\n  initialValue: PortableTextBlock[]\n): PortableTextBlock[] | undefined {\n  if (value && Array.isArray(value) && value.length > 0) {\n    return value\n  }\n  return initialValue\n}\n","import {Editor, Element, Range} from 'slate'\nimport {EditorSelection} from '..'\n\n/**\n * Dragging\n */\n\n// Is the editor dragging something?\nexport const IS_DRAGGING: WeakMap<Editor, boolean> = new WeakMap()\n// Is the editor dragging a element?\nexport const IS_DRAGGING_BLOCK_ELEMENT: WeakMap<Editor, Element> = new WeakMap()\nexport const IS_DRAGGING_CHILD_ELEMENT: WeakMap<Editor, Element> = new WeakMap()\n// When dragging elements, this will be the target element\nexport const IS_DRAGGING_ELEMENT_TARGET: WeakMap<Editor, Element> = new WeakMap()\nexport const IS_DRAGGING_ELEMENT_RANGE: WeakMap<Editor, Range> = new WeakMap()\n// Target position for dragging over a block\nexport const IS_DRAGGING_BLOCK_TARGET_POSITION: WeakMap<Editor, 'top' | 'bottom'> = new WeakMap()\n\nexport const KEY_TO_SLATE_ELEMENT: WeakMap<Editor, any | undefined> = new WeakMap()\nexport const KEY_TO_VALUE_ELEMENT: WeakMap<Editor, any | undefined> = new WeakMap()\n\n// Keep object relation to slate range in the portable-text-range\nexport const SLATE_TO_PORTABLE_TEXT_RANGE = new WeakMap<Range, EditorSelection>()\n","import {createContext, useContext} from 'react'\n\nimport {PortableTextEditor} from '../PortableTextEditor'\n\n/**\n * A React context for sharing the editor object.\n */\n\nexport const PortableTextEditorContext = createContext<PortableTextEditor | null>(null)\n\n/**\n * Get the current editor object from the React context.\n */\n\nexport const usePortableTextEditor = () => {\n  const editor = useContext(PortableTextEditorContext)\n\n  if (!editor) {\n    throw new Error(\n      `The \\`usePortableTextEditor\\` hook must be used inside the <PortableTextEditor> component's context.`\n    )\n  }\n\n  return editor\n}\n","import {createContext, useContext} from 'react'\nimport {EditorSelection} from '../../types/editor'\n\n/**\n * A React context for sharing the editor selection.\n */\n\nexport const PortableTextEditorSelectionContext = createContext<EditorSelection | null>(null)\n\n/**\n * Get the current editor selection from the React context.\n */\n\nexport const usePortableTextEditorSelection = () => {\n  const selection = useContext(PortableTextEditorSelectionContext)\n\n  if (selection === undefined) {\n    throw new Error(\n      `The \\`usePortableTextEditorSelection\\` hook must be used inside the <PortableTextEditor> component's context.`\n    )\n  }\n  return selection\n}\n","import {createContext, useContext} from 'react'\nimport {PortableTextBlock} from '../../types/portableText'\n\n/**\n * A React context for sharing the editor value.\n */\n\nexport const PortableTextEditorValueContext = createContext<PortableTextBlock[] | undefined>(\n  undefined\n)\n\n/**\n * Get the current editor value from the React context.\n */\n\nexport const usePortableTextEditorValue = () => {\n  return useContext(PortableTextEditorValueContext)\n}\n","import {Path} from '@sanity/types'\nimport {omitBy, isUndefined, get} from 'lodash'\nimport {\n  Editor,\n  MoveNodeOperation,\n  InsertTextOperation,\n  RemoveTextOperation,\n  SetNodeOperation,\n  InsertNodeOperation,\n  SplitNodeOperation,\n  RemoveNodeOperation,\n  MergeNodeOperation,\n  Text,\n  Descendant,\n} from 'slate'\nimport {set, insert, unset, diffMatchPatch, setIfMissing} from '../patch/PatchEvent'\nimport {PortableTextFeatures, PortableTextBlock, TextSpan} from '../types/portableText'\nimport type {Patch, InsertPosition} from '../types/patch'\nimport {PatchFunctions} from '../editor/plugins/createWithPatches'\nimport {fromSlateValue} from './values'\nimport {debugWithName} from './debug'\n\nconst debug = debugWithName('operationToPatches')\n\nexport function createOperationToPatches(\n  portableTextFeatures: PortableTextFeatures\n): PatchFunctions {\n  const textBlockName = portableTextFeatures.types.block.name\n  function insertTextPatch(\n    editor: Editor,\n    operation: InsertTextOperation,\n    beforeValue: Descendant[]\n  ) {\n    debug('Operation', JSON.stringify(operation, null, 2))\n    const block =\n      editor.isTextBlock(editor.children[operation.path[0]]) && editor.children[operation.path[0]]\n    if (!block) {\n      throw new Error('Could not find block')\n    }\n    const textChild =\n      editor.isTextBlock(block) &&\n      Text.isText(block.children[operation.path[1]]) &&\n      (block.children[operation.path[1]] as TextSpan)\n    if (!textChild) {\n      throw new Error('Could not find child')\n    }\n    const path: Path = [{_key: block._key}, 'children', {_key: textChild._key}, 'text']\n    const prevBlock = beforeValue[operation.path[0]]\n    const prevChild = editor.isTextBlock(prevBlock) && prevBlock.children[operation.path[1]]\n    const prevText = Text.isText(prevChild) ? prevChild.text : ''\n    const patch = diffMatchPatch(prevText, textChild.text, path)\n    return patch.value.length ? [patch] : []\n  }\n\n  function removeTextPatch(\n    editor: Editor,\n    operation: RemoveTextOperation,\n    beforeValue: Descendant[]\n  ) {\n    const block = editor && editor.children[operation.path[0]]\n    if (!block) {\n      throw new Error('Could not find block')\n    }\n    const textChild =\n      editor.isTextBlock(block) &&\n      Text.isText(block.children[operation.path[1]]) &&\n      (block.children[operation.path[1]] as TextSpan)\n    if (!textChild) {\n      throw new Error('Could not find child')\n    }\n    const path: Path = [{_key: block._key}, 'children', {_key: textChild._key}, 'text']\n    const beforeBlock = beforeValue[operation.path[0]]\n    const prevTextChild = editor.isTextBlock(beforeBlock) && beforeBlock.children[operation.path[1]]\n    const prevText = Text.isText(prevTextChild) && prevTextChild.text\n    const patch = diffMatchPatch(prevText || '', textChild.text, path)\n    return patch.value ? [patch] : []\n  }\n\n  function setNodePatch(editor: Editor, operation: SetNodeOperation) {\n    if (operation.path.length === 1) {\n      const block = editor.children[operation.path[0]]\n      if (typeof block._key !== 'string') {\n        throw new Error('Expected block to have a _key')\n      }\n      const setNode = omitBy(\n        {...editor.children[operation.path[0]], ...operation.newProperties},\n        isUndefined\n      )\n      return [set(fromSlateValue([setNode], textBlockName)[0], [{_key: block._key}])]\n    } else if (operation.path.length === 2) {\n      const block = editor.children[operation.path[0]]\n      if (editor.isTextBlock(block)) {\n        const child = block.children[operation.path[1]]\n        if (child) {\n          const blockKey = block._key\n          const childKey = child._key\n          const patches: Patch[] = []\n          Object.keys(operation.newProperties).forEach((keyName) => {\n            const val = get(operation.newProperties, keyName)\n            patches.push(set(val, [{_key: blockKey}, 'children', {_key: childKey}, keyName]))\n          })\n          return patches\n        }\n        throw new Error('Could not find a valid child')\n      }\n      throw new Error('Could not find a valid block')\n    } else {\n      throw new Error(`Unexpected path encountered: ${JSON.stringify(operation.path)}`)\n    }\n  }\n\n  function insertNodePatch(\n    editor: Editor,\n    operation: InsertNodeOperation,\n    beforeValue: Descendant[]\n  ): Patch[] {\n    const block = beforeValue[operation.path[0]]\n    if (operation.path.length === 1) {\n      const position = operation.path[0] === 0 ? 'before' : 'after'\n      const beforeBlock = beforeValue[operation.path[0] - 1]\n      const targetKey = operation.path[0] === 0 ? block?._key : beforeBlock?._key\n      if (targetKey) {\n        return [\n          insert([fromSlateValue([operation.node], textBlockName)[0]], position, [\n            {_key: targetKey},\n          ]),\n        ]\n      }\n      return [\n        setIfMissing(beforeValue, []),\n        insert([fromSlateValue([operation.node], textBlockName)[0]], 'before', [operation.path[0]]),\n      ]\n    } else if (operation.path.length === 2 && editor.children[operation.path[0]]) {\n      if (!editor.isTextBlock(block)) {\n        throw new Error('Invalid block')\n      }\n      const position =\n        block.children.length === 0 || !block.children[operation.path[1] - 1] ? 'before' : 'after'\n      const child = fromSlateValue(\n        [\n          {\n            _key: 'bogus',\n            _type: textBlockName,\n            children: [operation.node as Descendant],\n          },\n        ],\n        textBlockName\n      )[0].children[0]\n      return [\n        insert([child], position, [\n          {_key: block._key},\n          'children',\n          block.children.length <= 1 || !block.children[operation.path[1] - 1]\n            ? 0\n            : {_key: block.children[operation.path[1] - 1]._key},\n        ]),\n      ]\n    }\n    throw new Error(\n      `Unexpected path encountered: ${JSON.stringify(operation.path)} - ${JSON.stringify(\n        beforeValue\n      )}`\n    )\n  }\n\n  function splitNodePatch(\n    editor: Editor,\n    operation: SplitNodeOperation,\n    beforeValue: Descendant[]\n  ) {\n    const patches: Patch[] = []\n    const splitBlock = editor.children[operation.path[0]]\n    if (!editor.isTextBlock(splitBlock)) {\n      throw new Error(\n        `Block with path ${JSON.stringify(\n          operation.path[0]\n        )} is not a text block and can't be split`\n      )\n    }\n    if (operation.path.length === 1) {\n      const oldBlock = beforeValue[operation.path[0]]\n      if (editor.isTextBlock(oldBlock)) {\n        const targetValue = fromSlateValue(\n          [editor.children[operation.path[0] + 1]],\n          textBlockName\n        )[0]\n        if (targetValue) {\n          patches.push(insert([targetValue], 'after', [{_key: splitBlock._key}]))\n          const spansToUnset = oldBlock.children.slice(operation.position)\n          spansToUnset.forEach((span) => {\n            const path = [{_key: oldBlock._key}, 'children', {_key: span._key}]\n            patches.push(unset(path))\n          })\n        }\n      }\n      return patches\n    }\n    if (operation.path.length === 2) {\n      const splitSpan = splitBlock.children[operation.path[1]]\n      if (Text.isText(splitSpan)) {\n        const targetSpans = fromSlateValue(\n          [\n            {\n              ...splitBlock,\n              children: splitBlock.children.slice(operation.path[1] + 1, operation.path[1] + 2),\n            },\n          ],\n          textBlockName\n        )[0].children\n\n        patches.push(\n          insert(targetSpans, 'after', [\n            {_key: splitBlock._key},\n            'children',\n            {_key: splitSpan._key},\n          ])\n        )\n        patches.push(\n          set(splitSpan.text, [{_key: splitBlock._key}, 'children', {_key: splitSpan._key}, 'text'])\n        )\n      }\n      return patches\n    }\n    return patches\n  }\n\n  function removeNodePatch(\n    _: Editor,\n    operation: RemoveNodeOperation,\n    beforeValue: PortableTextBlock[]\n  ) {\n    const block = beforeValue[operation.path[0]]\n    if (operation.path.length === 1) {\n      // Remove a single block\n      if (block && block._key) {\n        return [unset([{_key: block._key}])]\n      }\n      throw new Error('Block not found')\n    } else if (operation.path.length === 2) {\n      const spanToRemove = block && block.children && block.children[operation.path[1]]\n      if (spanToRemove) {\n        return [unset([{_key: block._key}, 'children', {_key: spanToRemove._key}])]\n      }\n      // If it was not there before, do nothing\n      debug('Span not found in editor trying to remove node')\n      return []\n    } else {\n      throw new Error(`Unexpected path encountered: ${JSON.stringify(operation.path)}`)\n    }\n  }\n\n  function mergeNodePatch(\n    editor: Editor,\n    operation: MergeNodeOperation,\n    beforeValue: PortableTextBlock[]\n  ) {\n    const patches: Patch[] = []\n    if (operation.path.length === 1) {\n      const block = beforeValue[operation.path[0]]\n      const targetKey = block && block._key\n      if (targetKey) {\n        const newBlock = fromSlateValue([editor.children[operation.path[0] - 1]], textBlockName)[0]\n        patches.push(set(newBlock, [{_key: newBlock._key}]))\n        patches.push(unset([{_key: targetKey}]))\n      } else {\n        throw new Error('Target key not found!')\n      }\n    } else if (operation.path.length === 2) {\n      const block = beforeValue[operation.path[0]]\n      const mergedSpan = block.children[operation.path[1]]\n      const targetBlock = editor.children[operation.path[0]]\n      if (!editor.isTextBlock(targetBlock)) {\n        throw new Error('Invalid block')\n      }\n      const targetSpan = targetBlock.children[operation.path[1] - 1]\n      if (Text.isText(targetSpan)) {\n        // Set the merged span with it's new value\n        patches.push(\n          set(targetSpan.text, [{_key: block._key}, 'children', {_key: targetSpan._key}, 'text'])\n        )\n        patches.push(unset([{_key: block._key}, 'children', {_key: mergedSpan._key}]))\n      }\n    } else {\n      throw new Error(`Unexpected path encountered: ${JSON.stringify(operation.path)}`)\n    }\n    return patches\n  }\n\n  function moveNodePatch(\n    _: Editor,\n    operation: MoveNodeOperation,\n    beforeValue: PortableTextBlock[]\n  ) {\n    const patches: Patch[] = []\n    const block = beforeValue[operation.path[0]]\n    const targetBlock = beforeValue[operation.newPath[0]]\n    if (operation.path.length === 1) {\n      const position: InsertPosition = operation.path[0] > operation.newPath[0] ? 'before' : 'after'\n      patches.push(unset([{_key: block._key}]))\n      patches.push(\n        insert([fromSlateValue([block], textBlockName)[0]], position, [{_key: targetBlock._key}])\n      )\n    } else if (operation.path.length === 2) {\n      const child = block.children[operation.path[1]]\n      const targetChild = targetBlock.children[operation.newPath[1]]\n      const position = operation.newPath[1] === targetBlock.children.length ? 'after' : 'before'\n      const childToInsert = fromSlateValue([block], textBlockName)[0].children[operation.path[1]]\n      patches.push(unset([{_key: block._key}, 'children', {_key: child._key}]))\n      patches.push(\n        insert([childToInsert], position, [\n          {_key: targetBlock._key},\n          'children',\n          {_key: targetChild._key},\n        ])\n      )\n    }\n    return patches\n  }\n\n  return {\n    insertNodePatch,\n    insertTextPatch,\n    mergeNodePatch,\n    moveNodePatch,\n    removeNodePatch,\n    removeTextPatch,\n    setNodePatch,\n    splitNodePatch,\n  }\n}\n","import {PortableTextSlateEditor} from '../../types/editor'\n\n/**\n * This plugin makes sure that the PTE maxBlocks prop is respected\n *\n */\nexport function createWithMaxBlocks() {\n  return function withMaxBlocks(editor: PortableTextSlateEditor): PortableTextSlateEditor {\n    const {apply} = editor\n    editor.apply = (operation) => {\n      const rows = editor.maxBlocks || -1\n      if (rows > 0 && editor.children.length >= rows) {\n        if (\n          (operation.type === 'insert_node' || operation.type === 'split_node') &&\n          operation.path.length === 1\n        ) {\n          return\n        }\n      }\n      apply(operation)\n    }\n    return editor\n  }\n}\n","import {Editor} from 'slate'\n\nexport const PRESERVE_KEYS: WeakMap<Editor, boolean | undefined> = new WeakMap()\n\nexport function withPreserveKeys(editor: Editor, fn: () => void): void {\n  const prev = isPreservingKeys(editor)\n  PRESERVE_KEYS.set(editor, true)\n  fn()\n  PRESERVE_KEYS.set(editor, !prev)\n}\n\nexport function isPreservingKeys(editor: Editor): boolean | undefined {\n  return PRESERVE_KEYS.get(editor)\n}\n","import {Element, Transforms, Node, Editor} from 'slate'\nimport {PortableTextFeatures} from '../../types/portableText'\nimport {PortableTextSlateEditor} from '../../types/editor'\nimport {isPreservingKeys, PRESERVE_KEYS} from '../../utils/withPreserveKeys'\n\n/**\n * This plugin makes sure that every new node in the editor get a new _key prop when created\n *\n */\nexport function createWithObjectKeys(\n  portableTextFeatures: PortableTextFeatures,\n  keyGenerator: () => string\n) {\n  return function withKeys(editor: PortableTextSlateEditor): PortableTextSlateEditor {\n    PRESERVE_KEYS.set(editor, false)\n    const {apply, normalizeNode} = editor\n    editor.apply = (operation) => {\n      if (operation.type === 'split_node') {\n        operation.properties = {\n          ...operation.properties,\n          _key: keyGenerator(),\n        }\n      }\n      if (operation.type === 'insert_node') {\n        // Must be given a new key or adding/removing marks while typing gets in trouble (duped keys)!\n        const withNewKey = !isPreservingKeys(editor) || !('_key' in operation.node)\n        if (!Editor.isEditor(operation.node)) {\n          operation.node = {\n            ...operation.node,\n            ...(withNewKey ? {_key: keyGenerator()} : {}),\n          }\n        }\n      }\n      apply(operation)\n    }\n    editor.normalizeNode = (entry) => {\n      const [node, path] = entry\n      if (Element.isElement(node) && node._type === portableTextFeatures.types.block.name) {\n        // Set key on block itself\n        if (!node._key) {\n          Transforms.setNodes(editor, {_key: keyGenerator()}, {at: path})\n        }\n        // Set keys on it's children\n        for (const [child, childPath] of Node.children(editor, path)) {\n          if (!child._key) {\n            Transforms.setNodes(editor, {_key: keyGenerator()}, {at: childPath})\n            return\n          }\n        }\n      }\n      // Do the original `normalizeNode` to enforce other constraints.\n      normalizeNode(entry)\n    }\n\n    return editor\n  }\n}\n","import {Editor} from 'slate'\n\nexport const PATCHING: WeakMap<Editor, boolean | undefined> = new WeakMap()\n\nexport function withoutPatching(editor: Editor, fn: () => void): void {\n  const prev = isPatching(editor)\n  PATCHING.set(editor, false)\n  fn()\n  PATCHING.set(editor, prev)\n}\n\nexport function isPatching(editor: Editor): boolean | undefined {\n  return PATCHING.get(editor)\n}\n","export const BEFORE = 'before'\nexport const AFTER = 'after'\n\nexport default function insert(array: any[], position: string, index: number, ...args: any[]) {\n  if (position !== BEFORE && position !== AFTER) {\n    throw new Error(`Invalid position \"${position}\", must be either ${BEFORE} or ${AFTER}`)\n  }\n\n  const items = flatten(...args)\n\n  if (array.length === 0) {\n    return items\n  }\n\n  const len = array.length\n  const idx = Math.abs((len + index) % len) % len\n\n  const normalizedIdx = position === 'after' ? idx + 1 : idx\n\n  const copy = array.slice()\n  copy.splice(normalizedIdx, 0, ...flatten(items))\n  return copy\n}\n\nfunction flatten(...values: any[]) {\n  return values.reduce((prev, item) => prev.concat(item), [])\n}\n","import {PathSegment} from '@sanity/types'\nimport {findIndex} from 'lodash'\nimport applyPatch from './applyPatch'\nimport insert from './arrayInsert'\n\nconst hasOwn = Object.prototype.hasOwnProperty.call.bind(Object.prototype.hasOwnProperty)\n\nfunction move(arr: any[], from: number, to: any) {\n  const nextValue = arr.slice()\n  const val = nextValue[from]\n  nextValue.splice(from, 1)\n  nextValue.splice(to, 0, val)\n  return nextValue\n}\n\nfunction findTargetIndex(array: any[], pathSegment: PathSegment) {\n  if (typeof pathSegment === 'number') {\n    return pathSegment\n  }\n  const index = findIndex(array, pathSegment)\n  return index === -1 ? false : index\n}\n\nexport default function apply(\n  value: any,\n  patch: {type: any; path: any; value: any; position: any; items: any}\n) {\n  const nextValue = value.slice() // make a copy for internal mutation\n\n  if (patch.path.length === 0) {\n    // its directed to me\n    if (patch.type === 'setIfMissing') {\n      if (!Array.isArray(patch.value)) {\n        // eslint-disable-line max-depth\n        throw new Error('Cannot set value of an array to a non-array')\n      }\n      return value === undefined ? patch.value : value\n    } else if (patch.type === 'set') {\n      if (!Array.isArray(patch.value)) {\n        // eslint-disable-line max-depth\n        throw new Error('Cannot set value of an array to a non-array')\n      }\n      return patch.value\n    } else if (patch.type === 'unset') {\n      return undefined\n    } else if (patch.type === 'move') {\n      if (!patch.value || !hasOwn(patch.value, 'from') || !hasOwn(patch.value, 'to')) {\n        // eslint-disable-line max-depth\n        throw new Error(\n          `Invalid value of 'move' patch. Expected a value with \"from\" and \"to\" indexes, instead got: ${JSON.stringify(\n            patch.value\n          )}`\n        )\n      }\n      return move(nextValue, patch.value.from, patch.value.to)\n    }\n    throw new Error(`Invalid array operation: ${patch.type}`)\n  }\n\n  const [head, ...tail] = patch.path\n\n  const index = findTargetIndex(value, head)\n\n  // If the given selector could not be found, return as-is\n  if (index === false) {\n    return nextValue\n  }\n\n  if (tail.length === 0) {\n    if (patch.type === 'insert') {\n      const {position, items} = patch\n      return insert(value, position, index, items)\n    } else if (patch.type === 'unset') {\n      if (typeof index !== 'number') {\n        throw new Error(`Expected array index to be a number, instead got \"${index}\"`)\n      }\n      nextValue.splice(index, 1)\n      return nextValue\n    }\n  }\n\n  // The patch is not directed to me\n  nextValue[index] = applyPatch(nextValue[index], {\n    ...patch,\n    path: tail,\n  })\n  return nextValue\n}\n","import {omit, clone, isObject} from 'lodash'\nimport applyPatch from './applyPatch'\n\nexport default function apply(value: any, patch: {type: any; path: any; value: any}) {\n  const nextValue = clone(value)\n  if (patch.path.length === 0) {\n    // its directed to me\n    if (patch.type === 'set') {\n      if (!isObject(patch.value)) {\n        // eslint-disable-line max-depth\n        throw new Error('Cannot set value of an object to a non-object')\n      }\n      return patch.value\n    } else if (patch.type === 'unset') {\n      return undefined\n    } else if (patch.type === 'setIfMissing') {\n      // console.log('IS IT missing?', value)\n      return value === undefined ? patch.value : value\n    }\n    throw new Error(`Invalid object operation: ${patch.type}`)\n  }\n\n  // The patch is not directed to me\n  const [head, ...tail] = patch.path\n  if (typeof head !== 'string') {\n    throw new Error(`Expected field name to be a string, instad got: ${head}`)\n  }\n\n  if (tail.length === 0 && patch.type === 'unset') {\n    return omit(nextValue, head)\n  }\n\n  nextValue[head] = applyPatch(nextValue[head], {\n    ...patch,\n    path: tail,\n  })\n  return nextValue\n}\n","const OPERATIONS: Record<string, any> = {\n  replace(_currentValue: any, nextValue: any) {\n    return nextValue\n  },\n  set(_currentValue: any, nextValue: any) {\n    return nextValue\n  },\n  setIfMissing(currentValue: any, nextValue: any) {\n    return currentValue === undefined ? nextValue : currentValue\n  },\n  unset(_currentValue: any, _nextValue: any) {\n    return undefined\n  },\n  inc(currentValue: any, nextValue: any) {\n    return currentValue + nextValue\n  },\n  dec(currentValue: any, nextValue: any) {\n    return currentValue - nextValue\n  },\n}\n\nconst SUPPORTED_PATCH_TYPES = Object.keys(OPERATIONS)\n\nexport default function apply(value: any, patch: any) {\n  if (!SUPPORTED_PATCH_TYPES.includes(patch.type)) {\n    throw new Error(\n      `Received patch of unsupported type: \"${JSON.stringify(\n        patch.type\n      )}\" for primitives. This is most likely a bug.`\n    )\n  }\n\n  if (patch.path.length > 0) {\n    throw new Error(\n      `Cannot apply deep operations on primitive values. Received patch with type \"${\n        patch.type\n      }\" and path \"${patch.path\n        .map((path: any) => JSON.stringify(path))\n        .join('.')} that targeted the value \"${JSON.stringify(value)}\"`\n    )\n  }\n  return OPERATIONS[patch.type](value, patch.value)\n}\n","import * as DMP from 'diff-match-patch'\n\n// eslint-disable-next-line new-cap\nconst dmp = new DMP.diff_match_patch()\n\ntype fn = (oldVal: any, newVal: any) => any\nconst OPERATIONS: Record<string, fn> = {\n  replace(currentValue: any, nextValue: any) {\n    return nextValue\n  },\n  set(currentValue: any, nextValue: any) {\n    return nextValue\n  },\n  setIfMissing(currentValue: undefined, nextValue: any) {\n    return currentValue === undefined ? nextValue : currentValue\n  },\n  unset(currentValue: any, nextValue: any) {\n    return undefined\n  },\n  diffMatchPatch(currentValue: string, nextValue: string) {\n    return dmp.patch_apply(dmp.patch_fromText(nextValue), currentValue)[0]\n  },\n}\n\nconst SUPPORTED_PATCH_TYPES = Object.keys(OPERATIONS)\n\nexport default function apply(\n  value: string,\n  patch: {type: string; path: any[]; value: any}\n): string {\n  if (!SUPPORTED_PATCH_TYPES.includes(patch.type)) {\n    throw new Error(\n      `Received patch of unsupported type: \"${JSON.stringify(\n        patch.type\n      )}\" for string. This is most likely a bug.`\n    )\n  }\n\n  if (patch.path.length > 0) {\n    throw new Error(\n      `Cannot apply deep operations on string values. Received patch with type \"${\n        patch.type\n      }\" and path \"${patch.path.join('.')} that targeted the value \"${JSON.stringify(value)}\"`\n    )\n  }\n  const func = OPERATIONS[patch.type]\n  if (func) {\n    return func(value, patch.value)\n  }\n  throw new Error('Unknown patch type')\n}\n","import {isObject, isString} from 'lodash'\nimport applyArrayPatch from './array'\nimport applyObjectPatch from './object'\nimport applyPrimitivePatch from './primitive'\nimport applyStringPatch from './string'\n\nexport function applyAll(value: any, patches: any[]) {\n  return patches.reduce(_apply, value)\n}\n\nfunction applyPatch(value: string, patch: {type: string; path: any[]; value: any}) {\n  if (Array.isArray(value)) {\n    return applyArrayPatch(value, patch as any)\n  }\n  if (isString(value)) {\n    return applyStringPatch(value, patch)\n  }\n  if (isObject(value)) {\n    return applyObjectPatch(value, patch)\n  }\n  return applyPrimitivePatch(value, patch)\n}\n\nexport default function _apply(value: string, patch: {type: string; path: any[]; value: any}) {\n  const res = applyPatch(value, patch)\n  // console.log('applyPatch(%o, %o) : %o (noop? %o)', value, patch, res, value === res)\n  return res\n}\n","/* eslint-disable max-statements */\nimport {Editor, Transforms, Element, Path as SlatePath, Descendant} from 'slate'\nimport * as DMP from 'diff-match-patch'\nimport {Path, KeyedSegment, PathSegment} from '@sanity/types'\nimport {isEqual} from 'lodash'\nimport type {Patch, InsertPatch, UnsetPatch, SetPatch, DiffMatchPatch} from '../types/patch'\nimport {PortableTextFeatures, PortableTextBlock, PortableTextChild} from '../types/portableText'\nimport {applyAll} from '../patch/applyPatch'\nimport {isEqualToEmptyEditor, toSlateValue} from './values'\nimport {debugWithName} from './debug'\nimport {KEY_TO_SLATE_ELEMENT} from './weakMaps'\n\nconst debug = debugWithName('operationToPatches')\n\n// eslint-disable-next-line new-cap\nconst dmp = new DMP.diff_match_patch()\n\nexport function createPatchToOperations(\n  portableTextFeatures: PortableTextFeatures,\n  keyGenerator: () => string\n): (\n  editor: Editor,\n  patch: Patch,\n  patches: Patch[],\n  snapshot: PortableTextBlock[] | undefined\n) => boolean {\n  function diffMatchPatch(editor: Editor, patch: DiffMatchPatch) {\n    const blockKey = findLastKey([patch.path[0]])\n    const blockIndex = editor.children.findIndex((node, indx) => {\n      return blockKey ? node._key === blockKey : indx === patch.path[0]\n    })\n    const block = editor.children[blockIndex] as Element\n    const childKey = findLastKey([patch.path[2]])\n    const childIndex = block.children.findIndex((node, indx) => {\n      return childKey ? node._key === childKey : indx === patch.path[0]\n    })\n    const parsed = dmp.patch_fromText(patch.value)[0]\n    if (parsed) {\n      const slatePath = [blockIndex, childIndex]\n      const distance = parsed.length2 - parsed.length1\n      const point = {\n        path: slatePath,\n        offset:\n          distance >= 0\n            ? (parsed.start1 || 0) + parsed.diffs[0][1].length\n            : (parsed.start2 || 0) + parsed.length2 - distance,\n      }\n      debug(\n        `DiffMatchPatch (${distance < 0 ? 'remove' : 'insert'}) at ${JSON.stringify(slatePath)}}: `,\n        JSON.stringify(point, null, 2),\n        JSON.stringify(parsed, null, 2)\n      )\n      debugState(editor, 'before')\n\n      let text\n      if (parsed.diffs[1]) {\n        text = parsed.diffs[1][1]\n      } else {\n        text = parsed.diffs[0][1]\n      }\n      debug(`Text: '${text}'`)\n      if (distance >= 0) {\n        editor.apply({\n          type: 'insert_text',\n          path: point.path,\n          offset: point.offset,\n          text,\n        })\n      } else {\n        editor.apply({\n          type: 'remove_text',\n          path: point.path,\n          offset: point.offset - text.length,\n          text,\n        })\n      }\n      debugState(editor, 'after')\n    }\n    return true\n  }\n\n  function insertPatch(editor: Editor, patch: InsertPatch) {\n    // Insert blocks\n    if (patch.path.length === 1) {\n      const {items, position} = patch\n      const blocksToInsert = toSlateValue(\n        items as PortableTextBlock[],\n        {portableTextFeatures},\n        KEY_TO_SLATE_ELEMENT.get(editor)\n      ) as Descendant[]\n      const posKey = findLastKey(patch.path)\n      const index = editor.children.findIndex((node, indx) => {\n        return posKey ? node._key === posKey : indx === patch.path[0]\n      })\n      const normalizedIdx = position === 'after' ? index + 1 : index\n      debug(`Inserting blocks at path [${normalizedIdx}]`)\n      debugState(editor, 'before')\n      const isEmpty = isEqualToEmptyEditor(editor.children, portableTextFeatures)\n      debug('isEmpty', isEmpty)\n      if (isEmpty) {\n        debug('Removing placeholder block')\n        Transforms.removeNodes(editor, {at: [0]})\n      }\n      Transforms.insertNodes(editor, blocksToInsert, {at: [normalizedIdx]})\n      if (isEmpty) {\n        Transforms.select(editor, {\n          focus: {path: [0, 0], offset: 0},\n          anchor: {path: [0, 0], offset: 0},\n        })\n      }\n      debugState(editor, 'after')\n      return true\n    }\n    const {items, position} = patch\n    const posKey = findLastKey(patch.path)\n    const blockIndex = editor.children.findIndex((node, indx) => {\n      return posKey ? node._key === posKey : indx === patch.path[0]\n    })\n\n    // Insert children\n    const block: PortableTextBlock | undefined =\n      editor.children && blockIndex > -1 ? editor.children[blockIndex] : undefined\n    const childIndex =\n      block &&\n      block.children.findIndex((node: PortableTextChild, indx: number) => {\n        return isKeyedSegment(patch.path[2])\n          ? node._key === patch.path[2]._key\n          : indx === patch.path[2]\n      })\n    const childrenToInsert =\n      block &&\n      toSlateValue(\n        [{...block, children: items as PortableTextChild[]}],\n        {portableTextFeatures},\n        KEY_TO_SLATE_ELEMENT.get(editor)\n      )\n\n    const normalizedIdx = position === 'after' ? childIndex + 1 : childIndex\n    const targetPath = [blockIndex, normalizedIdx]\n    debug(`Inserting children at path ${targetPath}`)\n    debugState(editor, 'before')\n    if (childrenToInsert && Element.isElement(childrenToInsert[0])) {\n      Transforms.insertNodes(editor, childrenToInsert[0].children, {at: targetPath})\n    }\n    debugState(editor, 'after')\n    return true\n  }\n\n  function setPatch(editor: Editor, patch: SetPatch) {\n    const blockIndex = editor.children.findIndex((node, indx) => {\n      return isKeyedSegment(patch.path[0])\n        ? node._key === patch.path[0]._key\n        : indx === patch.path[0]\n    })\n    debug('blockIndex', blockIndex)\n    const block: PortableTextBlock | undefined =\n      blockIndex > -1 ? editor.children[blockIndex] : undefined\n    const childIndex =\n      block &&\n      block.children.findIndex((node: PortableTextChild, indx: number) => {\n        return isKeyedSegment(patch.path[2])\n          ? node._key === patch.path[2]._key\n          : indx === patch.path[2]\n      })\n    let value: any = patch.value\n    const targetPath: SlatePath = childIndex > -1 ? [blockIndex, childIndex] : [blockIndex]\n    if (typeof patch.path[3] === 'string') {\n      value = {}\n      value[patch.path[3]] = patch.value\n    }\n    const isTextBlock = portableTextFeatures.types.block.name === block?._type\n    if (isTextBlock) {\n      debug(`Setting nodes at ${JSON.stringify(patch.path)} - ${JSON.stringify(targetPath)}`)\n      debug('Value to set', JSON.stringify(value, null, 2))\n      debugState(editor, 'before')\n      if (targetPath.length === 1) {\n        debug('Setting block property')\n        const {children, ...nextRest} = value\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const {children: prevChildren, ...prevRest} = block || {children: undefined}\n        editor.apply({\n          type: 'set_node',\n          path: targetPath,\n          properties: {...prevRest},\n          newProperties: nextRest,\n        })\n        if (block && Element.isElement(block)) {\n          block.children.forEach((c, cIndex) => {\n            editor.apply({\n              type: 'remove_node',\n              path: targetPath.concat(cIndex),\n              node: c,\n            })\n          })\n        }\n        if (Array.isArray(children)) {\n          children.forEach((c, cIndex) => {\n            editor.apply({\n              type: 'insert_node',\n              path: targetPath.concat(cIndex),\n              node: c,\n            })\n          })\n        }\n      } else if (typeof value.text === 'string') {\n        debug('Setting text property')\n        const prevSel = editor.selection && {...editor.selection}\n        editor.apply({\n          type: 'remove_text',\n          path: targetPath,\n          offset: 0,\n          text: block?.children[childIndex].text,\n        })\n        editor.apply({\n          type: 'insert_text',\n          path: targetPath,\n          offset: 0,\n          text: value.text,\n        })\n        const onSamePath = prevSel && isEqual(prevSel.focus.path, targetPath)\n        // const onSameText =\n        //   editor.selection &&\n        //   editor.selection.focus.path[0] === blockIndex &&\n        //   patch.path[3] === 'text'\n        if (onSamePath) {\n          debug('On same path, restoring previous selection')\n          Transforms.select(editor, prevSel)\n        }\n        //  else if (onSameText) {\n        //   debug('Adjusting for inserted text')\n        //   const newOffset = typeof patch.value === 'string' ? patch.value.length : 0\n        //   const point = {path: targetPath, offset: newOffset}\n        //   Transforms.select(editor, {focus: point, anchor: point})\n        // }\n      } else {\n        debug('Setting non-text property')\n        editor.apply({\n          type: 'set_node',\n          path: targetPath,\n          properties: {},\n          newProperties: value,\n        })\n      }\n      debugState(editor, 'after')\n      return true\n    }\n    // If this is a object block, just set the whole block\n    else if (!isTextBlock && block) {\n      const newVal = applyAll([block.value], [patch])[0]\n      Transforms.setNodes(editor, {...block, value: newVal}, {at: [blockIndex]})\n      return true\n    }\n    return false\n  }\n\n  function unsetPatch(editor: Editor, patch: UnsetPatch, previousPatch?: Patch) {\n    // Value\n    if (patch.path.length === 0) {\n      debug(`Removing everything`)\n      debugState(editor, 'before')\n      editor.children.forEach((c, i) => {\n        Transforms.removeNodes(editor, {at: [i]})\n      })\n      Transforms.insertNodes(editor, editor.createPlaceholderBlock(), {at: [0]})\n      Transforms.select(editor, {\n        focus: {path: [0, 0], offset: 0},\n        anchor: {path: [0, 0], offset: 0},\n      })\n      debugState(editor, 'after')\n      return true\n    }\n    // Single blocks\n    if (patch.path.length === 1) {\n      const lastKey = findLastKey(patch.path)\n      const index = editor.children.findIndex((node, indx) =>\n        lastKey ? node._key === lastKey : indx === patch.path[0]\n      )\n      if (index > -1) {\n        debug(`Removing block at path [${index}]`)\n        debugState(editor, 'before')\n        if (editor.selection && editor.selection.focus.path[0] === index) {\n          const point = {path: [editor.selection.focus.path[0] - 1 || 0], offset: 0}\n          Transforms.select(editor, {focus: point, anchor: point})\n          Transforms.move(editor, {unit: 'line'})\n        }\n        Transforms.removeNodes(editor, {at: [index]})\n        debugState(editor, 'after')\n        return true\n      }\n    }\n\n    const blockIndex = editor.children.findIndex((node, indx) => {\n      return isKeyedSegment(patch.path[0])\n        ? node._key === patch.path[0]._key\n        : indx === patch.path[0]\n    })\n\n    const block: PortableTextBlock | undefined =\n      blockIndex > -1 ? editor.children[blockIndex] : undefined\n\n    const isTextBlock = portableTextFeatures.types.block.name === block?._type\n\n    // Unset on text block children\n    if (isTextBlock && patch.path[1] === 'children' && patch.path.length === 3) {\n      const childIndex =\n        block &&\n        block.children.findIndex((node: PortableTextChild, indx: number) => {\n          return isKeyedSegment(patch.path[2])\n            ? node._key === patch.path[2]._key\n            : indx === patch.path[2]\n        })\n      const targetPath = [blockIndex, childIndex]\n      const prevSel = editor.selection && {...editor.selection}\n      const onSamePath = isEqual(editor.selection?.focus.path, targetPath)\n\n      debug(`Removing child at path ${JSON.stringify(targetPath)}`)\n      debugState(editor, 'before')\n      if (prevSel && onSamePath && editor.isTextBlock(block)) {\n        const needToAdjust = childIndex >= prevSel.focus.path[1]\n        if (needToAdjust) {\n          const isMergeUnset =\n            previousPatch?.type === 'set' &&\n            previousPatch.path[3] === 'text' &&\n            typeof previousPatch.value === 'string' &&\n            isEqual(\n              previousPatch.value.slice(-block.children[childIndex].text.length),\n              block.children[childIndex].text\n            )\n          if (isMergeUnset) {\n            debug('Adjusting selection for merging of nodes')\n            prevSel.focus = {...prevSel.focus}\n            prevSel.focus.path = [targetPath[0], targetPath[1] - 1]\n            prevSel.focus.offset =\n              block.children[childIndex - 1].text.length -\n              block.children[childIndex].text.length +\n              prevSel.focus.offset\n            prevSel.anchor = prevSel.focus\n            Transforms.select(editor, prevSel)\n            Transforms.removeNodes(editor, {at: [blockIndex, childIndex]})\n            debugState(editor, 'after')\n            return true\n          }\n        }\n      }\n      Transforms.removeNodes(editor, {at: [blockIndex, childIndex]})\n      debugState(editor, 'after')\n      return true\n    }\n    // Inside block objects - patch block and set it again\n    if (!isTextBlock && block) {\n      const newBlock = applyAll([block], [patch])[0]\n      Transforms.setNodes(editor, newBlock, {at: [blockIndex]})\n      return true\n    }\n    return false\n  }\n\n  let previousPatch: Patch | undefined\n\n  return function (editor: Editor, patch: Patch): boolean {\n    let changed = false\n    debug('\\n\\nNEW PATCH =============================================================')\n    debug(JSON.stringify(patch, null, 2))\n    try {\n      switch (patch.type) {\n        case 'insert':\n          changed = insertPatch(editor, patch)\n          break\n        case 'unset':\n          changed = unsetPatch(editor, patch, previousPatch)\n          break\n        case 'set':\n          changed = setPatch(editor, patch)\n          break\n        case 'diffMatchPatch':\n          changed = diffMatchPatch(editor, patch)\n          break\n        default:\n          debug('Unhandled patch', patch.type)\n      }\n    } catch (err) {\n      console.error(err)\n    }\n    previousPatch = patch\n    return changed\n  }\n}\n\nfunction isKeyedSegment(segment: PathSegment): segment is KeyedSegment {\n  return typeof segment === 'object' && '_key' in segment\n}\n\n// Helper function to find the last part of a patch path that has a known key\nfunction findLastKey(path: Path) {\n  let key: string | null = null\n\n  path\n    .concat('')\n    .reverse()\n    .forEach((part) => {\n      if (isKeyedSegment(part)) {\n        key = part._key\n      }\n    })\n\n  return key\n}\n\nfunction debugState(editor: Editor, stateName: string) {\n  debug(`Children ${stateName}:`, JSON.stringify(editor.children, null, 2))\n  debug(`Selection ${stateName}: `, JSON.stringify(editor.selection, null, 2))\n}\n","/* eslint-disable complexity */\n/* eslint-disable no-eq-null */\n/* eslint-disable max-depth */\n/**\n * This plugin will make the editor support undo/redo on the local state only.\n * The undo/redo steps are rebased against incoming patches since the step occurred.\n */\n\nimport {isEqual, flatten} from 'lodash'\nimport {\n  Editor,\n  Element as SlateElement,\n  Operation,\n  Path,\n  SplitNodeOperation,\n  InsertTextOperation,\n  RemoveTextOperation,\n  SelectionOperation,\n} from 'slate'\nimport * as DMP from 'diff-match-patch'\nimport type {Patch} from '../../types/patch'\nimport {PatchObservable, PortableTextSlateEditor} from '../../types/editor'\nimport {debugWithName} from '../../utils/debug'\nimport {isPatching} from '../../utils/withoutPatching'\n\nconst debug = debugWithName('plugin:withUndoRedo')\n// eslint-disable-next-line new-cap\nconst dmp = new DMP.diff_match_patch()\n\nconst SAVING = new WeakMap<Editor, boolean | undefined>()\nconst MERGING = new WeakMap<Editor, boolean | undefined>()\nconst UNDO_STEP_LIMIT = 300\n\nconst isMerging = (editor: Editor): boolean | undefined => {\n  return MERGING.get(editor)\n}\n\nconst isSaving = (editor: Editor): boolean | undefined => {\n  if (!isPatching(editor)) {\n    return false\n  }\n  return SAVING.get(editor)\n}\n\nexport function createWithUndoRedo(\n  incomingPatches$?: PatchObservable\n): [editor: (editor: PortableTextSlateEditor) => PortableTextSlateEditor, cleanupFn: () => void] {\n  // TODO: unsubscribe to this\n  // Subscribe to incoming patches\n  let cleanupFn: () => void = () => undefined\n  const incomingPatches: {patch: Patch; time: Date}[] = []\n  if (incomingPatches$) {\n    debug('Subscribing to patches')\n    const sub = incomingPatches$.subscribe(({patches}) => {\n      patches.forEach((patch) => {\n        if (patch.origin !== 'local') {\n          incomingPatches.push({patch: patch, time: new Date()})\n        }\n      })\n    })\n    cleanupFn = () => {\n      debug('Unsubscribing to patches')\n      sub.unsubscribe()\n    }\n  }\n\n  return [\n    (editor: PortableTextSlateEditor) => {\n      editor.history = {undos: [], redos: []}\n      const {apply} = editor\n      // Apply function for merging and saving local history inspired from 'slate-history' by Ian Storm Taylor\n      editor.apply = (op: Operation) => {\n        if (editor.readOnly) {\n          apply(op)\n          return\n        }\n        const {operations, history} = editor\n        const {undos} = history\n        const step = undos[undos.length - 1]\n        const lastOp = step && step.operations && step.operations[step.operations.length - 1]\n        const overwrite = shouldOverwrite(op, lastOp)\n        let save = isSaving(editor)\n        let merge = isMerging(editor)\n\n        if (save == null) {\n          save = shouldSave(op, lastOp)\n        }\n\n        if (save) {\n          if (merge == null) {\n            if (step == null) {\n              merge = false\n              // eslint-disable-next-line no-negated-condition\n            } else if (operations.length !== 0) {\n              merge = true\n            } else {\n              merge = shouldMerge(op, lastOp) || overwrite\n            }\n          }\n\n          if (step && merge) {\n            if (overwrite) {\n              step.operations.pop()\n            }\n            step.operations.push(op)\n          } else {\n            const stp = {\n              operations: [\n                ...(editor.selection === null ? [] : [createSelectOperation(editor)]),\n                op,\n              ],\n              timestamp: new Date(),\n            }\n            undos.push(stp)\n            debug('Created new undo step', step)\n          }\n\n          while (undos.length > UNDO_STEP_LIMIT) {\n            undos.shift()\n          }\n\n          if (shouldClear(op)) {\n            history.redos = []\n          }\n        }\n        apply(op)\n      }\n\n      editor.undo = () => {\n        if (editor.readOnly) {\n          return\n        }\n        const {undos} = editor.history\n        if (undos.length > 0) {\n          const step = undos[undos.length - 1]\n          debug('Undoing', step)\n          if (step.operations.length > 0) {\n            const otherPatches = [...incomingPatches.filter((item) => item.time >= step.timestamp)]\n            let transformedOperations = step.operations\n            otherPatches.forEach((item) => {\n              transformedOperations = flatten(\n                transformedOperations.map((op) => transformOperation(editor, item.patch, op))\n              )\n            })\n            withoutSaving(editor, () => {\n              Editor.withoutNormalizing(editor, () => {\n                transformedOperations\n                  .map(Operation.inverse)\n                  .reverse()\n                  .forEach((op) => {\n                    // Try this as the document could be changed from the outside,\n                    // and sometimes we can't perform the undo operation on the current doc.\n                    try {\n                      editor.apply(op)\n                    } catch (err) {\n                      debug('Could not perform undo step', err)\n                      editor.history.redos.push(step)\n                      editor.history.undos.pop()\n                    }\n                  })\n              })\n            })\n          }\n          editor.history.redos.push(step)\n          editor.history.undos.pop()\n          editor.onChange()\n        }\n      }\n\n      editor.redo = () => {\n        if (editor.readOnly) {\n          return\n        }\n        const {redos} = editor.history\n        if (redos.length > 0) {\n          const step = redos[redos.length - 1]\n          debug('Redoing', step)\n          if (step.operations.length > 0) {\n            const otherPatches = incomingPatches.filter((item) => item.time > step.timestamp)\n            let transformedOperations = step.operations\n            otherPatches.forEach((item) => {\n              transformedOperations = flatten(\n                transformedOperations.map((op) => transformOperation(editor, item.patch, op))\n              )\n            })\n            withoutSaving(editor, () => {\n              Editor.withoutNormalizing(editor, () => {\n                transformedOperations.forEach((op) => {\n                  try {\n                    editor.apply(op)\n                  } catch (err) {\n                    debug('Could not perform redo step', err)\n                    editor.history.undos.push(step)\n                    editor.history.redos.pop()\n                  }\n                })\n              })\n            })\n          }\n          editor.history.undos.push(step)\n          editor.history.redos.pop()\n          editor.onChange()\n        }\n      }\n\n      // Plugin return\n      return editor\n    },\n    cleanupFn,\n  ]\n}\n\n// This will adjust the user selection according to patcehes done by others.\n// TODO: complete all necessary steps of the algorithm and write tests.\n\n// eslint-disable-next-line max-statements\nfunction transformOperation(editor: Editor, patch: Patch, operation: Operation): Operation[] {\n  // debug(`Rebasing selection for patch ${patch.type} against operation ${operation.type}`)\n\n  let transformedOperation = {...operation}\n\n  if (patch.type === 'insert' && patch.path.length === 1) {\n    return [adjustBlockPath(editor, patch, operation, patch.items.length)]\n  }\n  if (patch.type === 'unset' && patch.path.length === 1) {\n    return [adjustBlockPath(editor, patch, operation, -1)]\n  }\n\n  // Someone reset the whole value\n  if (patch.type === 'unset' && patch.path.length === 0) {\n    debug(`Adjusting selection for unset everything patch and ${operation.type} operation`)\n    return [operation]\n  }\n\n  if (patch.type === 'diffMatchPatch') {\n    const blockIndex = editor.children.findIndex((blk) => isEqual({_key: blk._key}, patch.path[0]))\n    const block = editor.children[blockIndex]\n    if (SlateElement.isElement(block) && Array.isArray(block.children)) {\n      const childIndex = block.children.findIndex((child) =>\n        isEqual({_key: child._key}, patch.path[2])\n      )\n      const parsed = dmp.patch_fromText(patch.value)[0]\n      if (!parsed) {\n        debug('Could not parse diffMatchPatch', patch)\n        return [operation]\n      }\n      const distance = parsed.length2 - parsed.length1\n      const patchIsRemovingText = parsed.diffs.some((diff) => diff[0] === -1)\n\n      if (operation.type === 'split_node' && operation.path.length > 1) {\n        const splitOperation = transformedOperation as SplitNodeOperation\n        if (patchIsRemovingText) {\n          splitOperation.position -= distance\n        } else {\n          splitOperation.position += distance\n        }\n        return [splitOperation]\n      }\n\n      if (\n        (operation.type === 'insert_text' || operation.type === 'remove_text') &&\n        Path.isPath(operation.path) &&\n        operation.path[0] !== undefined &&\n        operation.path[0] === blockIndex &&\n        operation.path[1] === childIndex\n      ) {\n        if (operation.type === 'insert_text') {\n          let insertOffset = 0\n          for (const diff of parsed.diffs) {\n            if (diff[0] === 0) {\n              insertOffset = diff[1].length\n            }\n            if (diff[0] === 1) {\n              break\n            }\n          }\n          if (parsed.start1 !== null && insertOffset + parsed.start1 <= operation.offset) {\n            const insertTextOperation = transformedOperation as InsertTextOperation\n            insertTextOperation.offset += distance\n            transformedOperation = insertTextOperation\n          }\n          // TODO: deal with overlapping ranges\n          return [transformedOperation]\n        }\n\n        if (operation.type === 'remove_text') {\n          let insertOffset = 0\n          for (const diff of parsed.diffs) {\n            if (diff[0] === 0) {\n              insertOffset = diff[1].length\n            }\n            if (diff[0] === -1) {\n              break\n            }\n          }\n          if (parsed.start1 !== null && insertOffset + parsed.start1 <= operation.offset) {\n            const removeTextOperation = transformedOperation as RemoveTextOperation\n            removeTextOperation.offset -= distance\n            transformedOperation = removeTextOperation\n          }\n          return [transformedOperation]\n        }\n      }\n      // // Selection operations with diffPatchMatch\n      // if (operation.type === 'set_selection') {\n      //   const newProperties = transformedOperation.newProperties\n      //   if (newProperties && patchIsRemovingText) {\n      //     newProperties.offset = newProperties.offset - distance\n      //   } else if (newProperties) {\n      //     newProperties.offset = newProperties.offset + distance\n      //   }\n      //   return [newProperties ? {...transformedOperation, newProperties} : transformedOperation]\n      // }\n    }\n    // TODO: transform this?\n    // if (operation.type === 'set_selection' && patch.type !== 'diffMatchPatch') {\n    //   console.log('set_selection other', JSON.stringify(patch))\n    // }\n  }\n  return [operation]\n}\n\nfunction adjustBlockPath(\n  editor: Editor,\n  patch: Patch,\n  operation: Operation,\n  level: number\n): Operation {\n  const myIndex = editor.children.findIndex((blk) => isEqual({_key: blk._key}, patch.path[0]))\n  if (\n    myIndex >= 0 &&\n    operation.type !== 'set_selection' &&\n    Array.isArray(operation.path) &&\n    operation.path[0] !== undefined &&\n    operation.path[0] >= myIndex + level\n  ) {\n    const transformedOperation = {...operation}\n    const newPath = [operation.path[0] + level, ...operation.path.slice(1)]\n    debug(`Adjusting ${operation.type} for block ${patch.type}`, operation.path, newPath)\n    transformedOperation.path = newPath\n    return transformedOperation\n  }\n  return operation\n}\n\n// Helper functions for editor.apply above\n\nconst shouldMerge = (op: Operation, prev: Operation | undefined): boolean => {\n  if (op.type === 'set_selection') {\n    return true\n  }\n\n  // Text input\n  if (\n    prev &&\n    op.type === 'insert_text' &&\n    prev.type === 'insert_text' &&\n    op.offset === prev.offset + prev.text.length &&\n    Path.equals(op.path, prev.path) &&\n    op.text !== ' ' // Tokenize between words\n  ) {\n    return true\n  }\n\n  // Text deletion\n  if (\n    prev &&\n    op.type === 'remove_text' &&\n    prev.type === 'remove_text' &&\n    op.offset + op.text.length === prev.offset &&\n    Path.equals(op.path, prev.path)\n  ) {\n    return true\n  }\n\n  // Don't merge\n  return false\n}\n\nconst shouldSave = (op: Operation, prev: Operation | undefined): boolean => {\n  if (op.type === 'set_selection' && op.newProperties === null) {\n    return false\n  }\n\n  return true\n}\n\nconst shouldOverwrite = (op: Operation, prev: Operation | undefined): boolean => {\n  if (prev && op.type === 'set_selection' && prev.type === 'set_selection') {\n    return true\n  }\n\n  return false\n}\n\nconst shouldClear = (op: Operation): boolean => {\n  if (op.type === 'set_selection') {\n    return false\n  }\n\n  return true\n}\n\nexport function withoutSaving(editor: Editor, fn: () => void): void {\n  const prev = isSaving(editor)\n  SAVING.set(editor, false)\n  fn()\n  SAVING.set(editor, prev)\n}\n\nfunction createSelectOperation(editor: Editor): SelectionOperation {\n  return {\n    type: 'set_selection',\n    properties: {...editor.selection},\n    newProperties: {...editor.selection},\n  }\n}\n","/* eslint-disable max-nested-callbacks */\nimport {Observable, Subject, Subscription} from 'rxjs'\nimport {\n  Descendant,\n  Editor,\n  InsertNodeOperation,\n  InsertTextOperation,\n  MergeNodeOperation,\n  MoveNodeOperation,\n  Operation,\n  RemoveNodeOperation,\n  RemoveTextOperation,\n  SetNodeOperation,\n  SplitNodeOperation,\n} from 'slate'\nimport {debounce} from 'lodash'\nimport {insert, setIfMissing, unset} from '../../patch/PatchEvent'\nimport type {Patch} from '../../types/patch'\n\nimport {fromSlateValue, isEqualToEmptyEditor} from '../../utils/values'\nimport {PortableTextBlock, PortableTextFeatures} from '../../types/portableText'\nimport {EditorChange, PortableTextSlateEditor} from '../../types/editor'\nimport {debugWithName} from '../../utils/debug'\nimport {PATCHING, isPatching, withoutPatching} from '../../utils/withoutPatching'\nimport {KEY_TO_VALUE_ELEMENT} from '../../utils/weakMaps'\nimport {createPatchToOperations} from '../../utils/patchToOperations'\nimport {keyGenerator} from '../..'\nimport {withPreserveKeys} from '../../utils/withPreserveKeys'\nimport {withoutSaving} from './createWithUndoRedo'\n\nconst debug = debugWithName('plugin:withPatches')\n\nexport type PatchFunctions = {\n  insertNodePatch: (\n    editor: PortableTextSlateEditor,\n    operation: InsertNodeOperation,\n    previousChildren: Descendant[]\n  ) => Patch[]\n  insertTextPatch: (\n    editor: PortableTextSlateEditor,\n    operation: InsertTextOperation,\n    previousChildren: Descendant[]\n  ) => Patch[]\n  mergeNodePatch: (\n    editor: PortableTextSlateEditor,\n    operation: MergeNodeOperation,\n    previousChildren: Descendant[]\n  ) => Patch[]\n  moveNodePatch: (\n    editor: PortableTextSlateEditor,\n    operation: MoveNodeOperation,\n    previousChildren: Descendant[]\n  ) => Patch[]\n  removeNodePatch: (\n    editor: PortableTextSlateEditor,\n    operation: RemoveNodeOperation,\n    previousChildren: Descendant[]\n  ) => Patch[]\n  removeTextPatch: (\n    editor: PortableTextSlateEditor,\n    operation: RemoveTextOperation,\n    previousChildren: Descendant[]\n  ) => Patch[]\n  setNodePatch: (\n    editor: PortableTextSlateEditor,\n    operation: SetNodeOperation,\n    previousChildren: Descendant[]\n  ) => Patch[]\n  splitNodePatch: (\n    editor: PortableTextSlateEditor,\n    operation: SplitNodeOperation,\n    previousChildren: Descendant[]\n  ) => Patch[]\n}\n\nexport function createWithPatches(\n  {\n    insertNodePatch,\n    insertTextPatch,\n    mergeNodePatch,\n    moveNodePatch,\n    removeNodePatch,\n    removeTextPatch,\n    setNodePatch,\n    splitNodePatch,\n  }: PatchFunctions,\n  change$: Subject<EditorChange>,\n  portableTextFeatures: PortableTextFeatures,\n  syncValue: () => void,\n  incomingPatches$?: Observable<{\n    patches: Patch[]\n    snapshot: PortableTextBlock[] | undefined\n  }>\n): [editor: (editor: PortableTextSlateEditor) => PortableTextSlateEditor, cleanupFn: () => void] {\n  // The previous editor children are needed to figure out the _key of deleted nodes\n  // The editor.children would no longer contain that information if the node is already deleted.\n  let previousChildren: Descendant[]\n\n  const patchToOperations = createPatchToOperations(portableTextFeatures, keyGenerator)\n  let patchSubscription: Subscription\n  const cleanupFn = () => {\n    if (patchSubscription) {\n      debug('Unsubscribing to patches')\n      patchSubscription.unsubscribe()\n    }\n  }\n  return [\n    function withPatches(editor: PortableTextSlateEditor) {\n      PATCHING.set(editor, true)\n\n      previousChildren = [...editor.children]\n\n      // Sync the with props.value in PortableTextEditor after we have processed batches of incoming patches.\n      // This is only for consistency checking against the props.value, so it can be debounced without problems.\n      const syncValueAfterIncomingPatches = debounce(() => syncValue(), 100, {\n        trailing: true,\n        leading: false,\n      })\n\n      // Subscribe and deal with incoming patches\n      if (incomingPatches$) {\n        debug('Subscribing to patches')\n        patchSubscription = incomingPatches$.subscribe(({patches, snapshot}) => {\n          const remotePatches = patches.filter((p) => p.origin !== 'local')\n          if (remotePatches.length !== 0) {\n            Editor.withoutNormalizing(editor, () => {\n              remotePatches.forEach((patch) => {\n                debug(`Handling remote patch ${JSON.stringify(patch)}`)\n                withoutPatching(editor, () => {\n                  withoutSaving(editor, () => {\n                    withPreserveKeys(editor, () => {\n                      try {\n                        patchToOperations(editor, patch, patches, snapshot)\n                      } catch (err) {\n                        debug('Got error trying to create operations from patch')\n                        console.error(err)\n                      }\n                    })\n                  })\n                })\n              })\n            })\n          }\n          syncValueAfterIncomingPatches()\n        })\n      }\n\n      const {apply} = editor\n\n      editor.apply = (operation: Operation): void | Editor => {\n        if (editor.readOnly) {\n          editor.apply(operation)\n          return editor\n        }\n        let patches: Patch[] = []\n\n        // Update previous children here before we apply\n        previousChildren = editor.children\n\n        const editorWasEmpty = isEqualToEmptyEditor(previousChildren, portableTextFeatures)\n\n        // Apply the operation\n        apply(operation)\n\n        const editorIsEmpty = isEqualToEmptyEditor(editor.children, portableTextFeatures)\n\n        if (!isPatching(editor)) {\n          debug(`Editor is not producing patch for operation ${operation.type}`, operation)\n          return editor\n        }\n\n        if (editorWasEmpty && operation.type !== 'set_selection') {\n          patches.push(setIfMissing([], []))\n          patches.push(\n            insert(\n              [\n                fromSlateValue(\n                  previousChildren.length === 0\n                    ? [editor.createPlaceholderBlock()]\n                    : previousChildren,\n                  portableTextFeatures.types.block.name,\n                  KEY_TO_VALUE_ELEMENT.get(editor)\n                )[0],\n              ],\n              'before',\n              [0]\n            )\n          )\n        }\n        switch (operation.type) {\n          case 'insert_text':\n            patches = [...patches, ...insertTextPatch(editor, operation, previousChildren)]\n            break\n          case 'remove_text':\n            patches = [...patches, ...removeTextPatch(editor, operation, previousChildren)]\n            break\n          case 'remove_node':\n            patches = [...patches, ...removeNodePatch(editor, operation, previousChildren)]\n            break\n          case 'split_node':\n            patches = [...patches, ...splitNodePatch(editor, operation, previousChildren)]\n            break\n          case 'insert_node':\n            patches = [...patches, ...insertNodePatch(editor, operation, previousChildren)]\n            break\n          case 'set_node':\n            patches = [...patches, ...setNodePatch(editor, operation, previousChildren)]\n            break\n          case 'merge_node':\n            patches = [...patches, ...mergeNodePatch(editor, operation, previousChildren)]\n            break\n          case 'move_node':\n            patches = [...patches, ...moveNodePatch(editor, operation, previousChildren)]\n            break\n          case 'set_selection':\n          default:\n          // Do nothing\n        }\n\n        // Unset the value if the operation made the editor empty\n        if (editorIsEmpty && ['remove_text', 'remove_node'].includes(operation.type)) {\n          patches = [...patches, unset([])]\n          change$.next({\n            type: 'unset',\n            previousValue: fromSlateValue(\n              previousChildren,\n              portableTextFeatures.types.block.name,\n              KEY_TO_VALUE_ELEMENT.get(editor)\n            ),\n          })\n        }\n\n        // Emit all patches\n        if (patches.length > 0) {\n          patches.forEach((patch) => {\n            change$.next({\n              type: 'patch',\n              patch: {...patch, origin: 'local'},\n            })\n          })\n        }\n        return editor\n      }\n      return editor\n    },\n    cleanupFn,\n  ]\n}\n","import {isEqual} from 'lodash'\nimport {Editor, Point, Path as SlatePath, Element, Node} from 'slate'\nimport {isKeySegment, Path} from '@sanity/types'\nimport {EditorSelectionPoint} from '../types/editor'\nimport {PortableTextBlock, PortableTextFeatures} from '../types/portableText'\n\nexport function createKeyedPath(\n  point: Point,\n  value: PortableTextBlock[] | undefined,\n  portableTextFeatures: PortableTextFeatures\n): Path | null {\n  const blockPath = [point.path[0]]\n  if (!value) {\n    return null\n  }\n  const block = value[blockPath[0]]\n  if (!block) {\n    return null\n  }\n  const keyedBlockPath = [{_key: block._key}]\n  if (block._type !== portableTextFeatures.types.block.name) {\n    return keyedBlockPath as Path\n  }\n  let keyedChildPath\n  const childPath = point.path.slice(0, 2)\n  const child = block.children[childPath[1]]\n  if (child) {\n    keyedChildPath = ['children', {_key: child._key}]\n  }\n  return (keyedChildPath ? [...keyedBlockPath, ...keyedChildPath] : keyedBlockPath) as Path\n}\n\nexport function createArrayedPath(point: EditorSelectionPoint, editor: Editor): SlatePath {\n  if (!editor) {\n    return []\n  }\n  const [block, blockPath] = Array.from(\n    Editor.nodes(editor, {\n      at: [],\n      match: (n) => isKeySegment(point.path[0]) && n._key === point.path[0]._key,\n    })\n  )[0] || [undefined, undefined]\n  if (!block || !Element.isElement(block)) {\n    return []\n  }\n  if (editor.isVoid(block)) {\n    return blockPath\n  }\n  const childPath = [point.path[2]]\n  const childIndex = block.children.findIndex((child) => isEqual([{_key: child._key}], childPath))\n  if (childIndex >= 0 && block.children[childIndex]) {\n    const child = block.children[childIndex]\n    if (Element.isElement(child) && editor.isVoid(child)) {\n      return blockPath.concat(childIndex).concat(0)\n    }\n    return blockPath.concat(childIndex)\n  }\n  return blockPath\n}\n","import {BaseRange, Editor, Range} from 'slate'\nimport {EditorSelection, EditorSelectionPoint} from '../types/editor'\nimport {PortableTextBlock, PortableTextFeatures} from '../types/portableText'\nimport {createArrayedPath, createKeyedPath} from './paths'\n\nexport function toPortableTextRange(\n  value: PortableTextBlock[] | undefined,\n  range: BaseRange | Partial<BaseRange> | null,\n  portableTextFeatures: PortableTextFeatures\n): EditorSelection {\n  if (!range) {\n    return null\n  }\n  let anchor: EditorSelectionPoint | null = null\n  let focus: EditorSelectionPoint | null = null\n  const anchorPath = range.anchor && createKeyedPath(range.anchor, value, portableTextFeatures)\n  if (anchorPath && range.anchor) {\n    anchor = {\n      path: anchorPath,\n      offset: range.anchor.offset,\n    }\n  }\n  const focusPath = range.focus && createKeyedPath(range.focus, value, portableTextFeatures)\n  if (focusPath && range.focus) {\n    focus = {\n      path: focusPath,\n      offset: range.focus.offset,\n    }\n  }\n  return anchor && focus ? {anchor, focus} : null\n}\n\nexport function toSlateRange(selection: EditorSelection, editor: Editor): Range | null {\n  if (!selection || !editor) {\n    return null\n  }\n  const anchor = {\n    path: createArrayedPath(selection.anchor, editor),\n    offset: selection.anchor.offset,\n  }\n  const focus = {\n    path: createArrayedPath(selection.focus, editor),\n    offset: selection.focus.offset,\n  }\n  const range = anchor && focus ? {anchor, focus} : null\n  return range\n}\n","import {Subject} from 'rxjs'\nimport {Editor, Transforms, Element, Path, Text as SlateText} from 'slate'\nimport {PortableTextBlock, PortableTextFeatures} from '../../types/portableText'\nimport {EditorChange, PortableTextSlateEditor} from '../../types/editor'\nimport {debugWithName} from '../../utils/debug'\nimport {toPortableTextRange} from '../../utils/ranges'\nimport {fromSlateValue} from '../../utils/values'\n\nconst debug = debugWithName('plugin:withPortableTextBlockStyle')\n\nexport function createWithPortableTextBlockStyle(\n  portableTextFeatures: PortableTextFeatures,\n  change$: Subject<EditorChange>\n): (editor: PortableTextSlateEditor) => PortableTextSlateEditor {\n  const defaultStyle = portableTextFeatures.styles[0].value\n  return function withPortableTextBlockStyle(\n    editor: PortableTextSlateEditor\n  ): PortableTextSlateEditor {\n    // Extend Slate's default normalization to reset split node to normal style\n    // if there is no text at the right end of the split.\n    const {normalizeNode} = editor\n    editor.normalizeNode = (nodeEntry) => {\n      normalizeNode(nodeEntry)\n      const [, path] = nodeEntry\n      for (const op of editor.operations) {\n        if (\n          op.type === 'split_node' &&\n          op.path.length === 1 &&\n          editor.isTextBlock(op.properties) &&\n          op.properties.style !== defaultStyle &&\n          op.path[0] === path[0] &&\n          !Path.equals(path, op.path)\n        ) {\n          const [child] = Editor.node(editor, [op.path[0] + 1, 0])\n          if (SlateText.isText(child) && child.text === '') {\n            debug(`Normalizing split node to ${defaultStyle} style`, op)\n            Transforms.setNodes(editor, {style: defaultStyle}, {at: [op.path[0] + 1], voids: false})\n            break\n          }\n        }\n      }\n    }\n    editor.pteHasBlockStyle = (style: string): boolean => {\n      if (!editor.selection) {\n        return false\n      }\n      const selectedBlocks = [\n        ...Editor.nodes(editor, {\n          at: editor.selection,\n          match: (node) => editor.isTextBlock(node) && node.style === style,\n        }),\n      ]\n      if (selectedBlocks.length > 0) {\n        return true\n      }\n      return false\n    }\n\n    editor.pteToggleBlockStyle = (blockStyle: string): void => {\n      if (!editor.selection) {\n        return\n      }\n      const selectedBlocks = [\n        ...Editor.nodes(editor, {\n          at: editor.selection,\n          match: (node) =>\n            Element.isElement(node) && node._type === portableTextFeatures.types.block.name,\n        }),\n      ]\n      selectedBlocks.forEach(([node, path]) => {\n        if (editor.isTextBlock(node) && node.style === blockStyle) {\n          debug(`Unsetting block style '${blockStyle}'`)\n          Transforms.setNodes(editor, {...node, style: defaultStyle} as PortableTextBlock, {\n            at: path,\n          })\n        } else {\n          if (blockStyle) {\n            debug(`Setting style '${blockStyle}'`)\n          } else {\n            debug('Setting default style', defaultStyle)\n          }\n          Transforms.setNodes(\n            editor,\n            {\n              ...node,\n              style: blockStyle || defaultStyle,\n            } as PortableTextBlock,\n            {at: path}\n          )\n        }\n      })\n      // Emit a new selection here (though it might be the same).\n      // Toolbars and similar on the outside may rely on selection changes to update themselves.\n      change$.next({\n        type: 'selection',\n        selection: toPortableTextRange(\n          fromSlateValue(editor.children, portableTextFeatures.types.block.name),\n          editor.selection,\n          portableTextFeatures\n        ),\n      })\n      editor.onChange()\n    }\n    return editor\n  }\n}\n","import {Editor, Transforms, Element, Text} from 'slate'\nimport {PortableTextBlock, PortableTextFeatures, TextBlock} from '../../types/portableText'\nimport {PortableTextSlateEditor} from '../../types/editor'\nimport {debugWithName} from '../../utils/debug'\n\nconst debug = debugWithName('plugin:withPortableTextLists')\nconst MAX_LIST_LEVEL = 10\n\nexport function createWithPortableTextLists(portableTextFeatures: PortableTextFeatures) {\n  return function withPortableTextLists(editor: PortableTextSlateEditor): PortableTextSlateEditor {\n    editor.pteToggleListItem = (listItemStyle: string) => {\n      const isActive = editor.pteHasListStyle(listItemStyle)\n      if (isActive) {\n        debug(`Remove list item '${listItemStyle}'`)\n        editor.pteUnsetListItem(listItemStyle)\n      } else {\n        debug(`Add list item '${listItemStyle}'`)\n        editor.pteSetListItem(listItemStyle)\n      }\n    }\n\n    editor.pteUnsetListItem = (listItemStyle: string) => {\n      if (!editor.selection) {\n        return\n      }\n      const selectedBlocks = [\n        ...Editor.nodes(editor, {\n          at: editor.selection,\n          match: (node) =>\n            Element.isElement(node) && node._type === portableTextFeatures.types.block.name,\n        }),\n      ]\n      selectedBlocks.forEach(([node, path]) => {\n        if (editor.isListBlock(node)) {\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const {listItem, level, ...rest} = node\n          const newNode = {\n            ...rest,\n            listItem: undefined,\n            level: undefined,\n          } as PortableTextBlock\n          debug(`Unsetting list '${listItemStyle}'`)\n          Transforms.setNodes(editor, newNode, {at: path})\n        }\n      })\n    }\n\n    editor.pteSetListItem = (listItemStyle: string) => {\n      if (!editor.selection) {\n        return\n      }\n      const selectedBlocks = [\n        ...Editor.nodes(editor, {\n          at: editor.selection,\n          match: (node) => editor.isTextBlock(node),\n        }),\n      ]\n      selectedBlocks.forEach(([node, path]) => {\n        debug(`Setting list '${listItemStyle}'`)\n        Transforms.setNodes(\n          editor,\n          {\n            ...node,\n            level: 1,\n            listItem:\n              listItemStyle ||\n              (portableTextFeatures.lists[0] && portableTextFeatures.lists[0].value),\n          } as PortableTextBlock,\n          {at: path}\n        )\n      })\n    }\n\n    editor.pteEndList = () => {\n      if (!editor.selection) {\n        return false\n      }\n      const selectedBlocks = [\n        ...Editor.nodes(editor, {\n          at: editor.selection,\n          match: (node) =>\n            Element.isElement(node) &&\n            editor.isListBlock(node) &&\n            node.children.length === 1 &&\n            Text.isText(node.children[0]) &&\n            node.children[0].text === '',\n        }),\n      ]\n      if (selectedBlocks.length === 0) {\n        return false\n      }\n      selectedBlocks.forEach(([node, path]) => {\n        if (Element.isElement(node)) {\n          debug('Unset list')\n          Transforms.setNodes(\n            editor,\n            // @todo: fix typing\n            {\n              ...node,\n              level: undefined,\n              listItem: undefined,\n            } as any,\n            {at: path}\n          )\n        }\n      })\n      return true // Note: we are exiting the plugin chain by not returning editor (or hotkey plugin 'enter' will fire)\n    }\n\n    editor.pteIncrementBlockLevels = (reverse?: boolean): boolean => {\n      if (!editor.selection) {\n        return false\n      }\n      const selectedBlocks = [\n        ...Editor.nodes(editor, {\n          at: editor.selection,\n          match: (node) => !!editor.isListBlock(node),\n        }),\n      ]\n      if (selectedBlocks.length === 0) {\n        return false\n      }\n      selectedBlocks.forEach(([node, path]) => {\n        if (editor.isListBlock(node)) {\n          let level = node.level || 1\n          if (reverse) {\n            level--\n            debug('Decrementing list level', Math.min(MAX_LIST_LEVEL, Math.max(1, level)))\n          } else {\n            level++\n            debug('Incrementing list level', Math.min(MAX_LIST_LEVEL, Math.max(1, level)))\n          }\n          Transforms.setNodes(\n            editor,\n            {level: Math.min(MAX_LIST_LEVEL, Math.max(1, level))},\n            {at: path}\n          )\n        }\n      })\n      return true\n    }\n\n    editor.pteHasListStyle = (listStyle: string): boolean => {\n      if (!editor.selection) {\n        return false\n      }\n      const selectedBlocks = [\n        ...Editor.nodes(editor, {\n          at: editor.selection,\n          match: (node) => editor.isListBlock(node) && node.listItem === listStyle,\n        }),\n      ]\n      if (selectedBlocks.length > 0) {\n        return true\n      }\n      return false\n    }\n\n    return editor\n  }\n}\n","/* eslint-disable complexity */\n/**\n *\n * This plugin will change Slate's default marks model (every prop is a mark) with the Portable Text model (marks is an array of strings on prop .marks).\n *\n */\n\nimport {isEqual, flatten, uniq} from 'lodash'\nimport {Editor, Range, Transforms, Text, Path, NodeEntry, Element} from 'slate'\n\nimport {debugWithName} from '../../utils/debug'\nimport {PortableTextSlateEditor} from '../../types/editor'\nimport {PortableTextFeatures} from '../../types/portableText'\n\nconst debug = debugWithName('plugin:withPortableTextMarkModel')\n\nexport function createWithPortableTextMarkModel(\n  portableTextFeatures: PortableTextFeatures,\n  keyGenerator: () => string\n): (editor: PortableTextSlateEditor) => PortableTextSlateEditor {\n  return function withPortableTextMarkModel(editor: PortableTextSlateEditor) {\n    const {apply, normalizeNode} = editor\n    const decorators = portableTextFeatures.decorators.map((t) => t.value)\n\n    // Extend Slate's default normalization. Merge spans with same set of .marks when doing merge_node operations, and clean up markDefs / marks\n    editor.normalizeNode = (nodeEntry) => {\n      normalizeNode(nodeEntry)\n      if (\n        editor.operations.some((op) =>\n          [\n            'insert_node',\n            'insert_text',\n            'merge_node',\n            'remove_node',\n            'remove_text',\n            'set_node',\n          ].includes(op.type)\n        )\n      ) {\n        mergeSpans(editor)\n      }\n      const [node, path] = nodeEntry\n      const isSpan = Text.isText(node) && node._type === portableTextFeatures.types.span.name\n      const isTextBlock = editor.isTextBlock(node)\n      if (isSpan || isTextBlock) {\n        if (!isTextBlock && !Array.isArray(node.marks)) {\n          debug('Adding .marks to span node')\n          Transforms.setNodes(editor, {marks: []}, {at: path})\n          editor.onChange()\n        }\n        for (const op of editor.operations) {\n          // Make sure markDefs are copied over when merging two blocks.\n          if (\n            op.type === 'merge_node' &&\n            op.path.length === 1 &&\n            'markDefs' in op.properties &&\n            op.properties._type === portableTextFeatures.types.block.name &&\n            Array.isArray(op.properties.markDefs) &&\n            op.properties.markDefs.length > 0 &&\n            op.path[0] - 1 >= 0\n          ) {\n            const [targetBlock, targetPath] = Editor.node(editor, [op.path[0] - 1])\n            debug(`Copying markDefs over to merged block`, op)\n            if (editor.isTextBlock(targetBlock)) {\n              const oldDefs = (Array.isArray(targetBlock.markDefs) && targetBlock.markDefs) || []\n              const newMarkDefs = uniq([...oldDefs, ...op.properties.markDefs])\n              const isNormalized = isEqual(newMarkDefs, targetBlock.markDefs)\n              // eslint-disable-next-line max-depth\n              if (!isNormalized) {\n                Transforms.setNodes(editor, {markDefs: newMarkDefs}, {at: targetPath, voids: false})\n                editor.onChange()\n              }\n            }\n          }\n          // Make sure markDefs are copied over to new block when splitting a block.\n          if (\n            op.type === 'split_node' &&\n            op.path.length === 1 &&\n            Element.isElementProps(op.properties) &&\n            op.properties._type === portableTextFeatures.types.block.name &&\n            'markDefs' in op.properties &&\n            Array.isArray(op.properties.markDefs) &&\n            op.properties.markDefs.length > 0 &&\n            op.path[0] + 1 < editor.children.length\n          ) {\n            const [targetBlock, targetPath] = Editor.node(editor, [op.path[0] + 1])\n            debug(`Copying markDefs over to split block`, op)\n            if (editor.isTextBlock(targetBlock)) {\n              const oldDefs = (Array.isArray(targetBlock.markDefs) && targetBlock.markDefs) || []\n              Transforms.setNodes(\n                editor,\n                {markDefs: uniq([...oldDefs, ...op.properties.markDefs])},\n                {at: targetPath, voids: false}\n              )\n              editor.onChange()\n            }\n          }\n          // Make sure marks are reset, if a block is split at the end.\n          if (\n            op.type === 'split_node' &&\n            op.path.length === 2 &&\n            op.properties._type === portableTextFeatures.types.span.name &&\n            'marks' in op.properties &&\n            Array.isArray(op.properties.marks) &&\n            op.properties.marks.length > 0 &&\n            op.path[0] + 1 < editor.children.length\n          ) {\n            const [child, childPath] = Editor.node(editor, [op.path[0] + 1, 0])\n            if (\n              Text.isText(child) &&\n              child.text === '' &&\n              Array.isArray(child.marks) &&\n              child.marks.length > 0\n            ) {\n              Transforms.setNodes(editor, {marks: []}, {at: childPath, voids: false})\n              editor.onChange()\n            }\n          }\n          // Make sure markDefs are reset, if a block is split at start.\n          if (\n            op.type === 'split_node' &&\n            op.path.length === 1 &&\n            op.properties._type === portableTextFeatures.types.block.name &&\n            'markDefs' in op.properties &&\n            Array.isArray(op.properties.markDefs) &&\n            op.properties.markDefs.length > 0\n          ) {\n            const [block, blockPath] = Editor.node(editor, [op.path[0]])\n            if (\n              editor.isTextBlock(block) &&\n              block.children.length === 1 &&\n              block.markDefs.length > 0 &&\n              Text.isText(block.children[0]) &&\n              block.children[0].text === '' &&\n              block.children[0].marks.length === 0\n            ) {\n              Transforms.setNodes(editor, {markDefs: []}, {at: blockPath})\n              editor.onChange()\n            }\n          }\n        }\n        // Empty marks if text is empty\n        if (isSpan && Array.isArray(node.marks) && node.marks.length > 0 && node.text === '') {\n          Transforms.setNodes(editor, {marks: []}, {at: path, voids: false})\n          editor.onChange()\n        }\n      }\n      // Check consistency of markDefs\n      if (\n        isTextBlock &&\n        editor.operations.some((op) =>\n          ['split_node', 'remove_node', 'remove_text', 'merge_node'].includes(op.type)\n        )\n      ) {\n        normalizeMarkDefs(editor)\n      }\n    }\n\n    // Special hook before inserting text at the end of an annotation.\n    editor.apply = (op) => {\n      if (op.type === 'insert_text') {\n        const {selection} = editor\n        if (\n          selection &&\n          Range.isCollapsed(selection) &&\n          Editor.marks(editor)?.marks?.some((mark) => !decorators.includes(mark))\n        ) {\n          const [node] = Array.from(\n            Editor.nodes(editor, {\n              mode: 'lowest',\n              at: selection.focus,\n              match: (n) => n._type === portableTextFeatures.types.span.name,\n              voids: false,\n            })\n          )[0] || [undefined]\n          if (\n            Text.isText(node) &&\n            node.text.length === selection.focus.offset &&\n            Array.isArray(node.marks) &&\n            node.marks.length > 0\n          ) {\n            apply(op)\n            Transforms.splitNodes(editor, {\n              match: Text.isText,\n              at: {...selection.focus, offset: selection.focus.offset},\n            })\n            const marksWithoutAnnotationMarks: string[] = (\n              {\n                ...(Editor.marks(editor) || {}),\n              }.marks || []\n            ).filter((mark) => decorators.includes(mark))\n            Transforms.setNodes(\n              editor,\n              {marks: marksWithoutAnnotationMarks},\n              {at: Path.next(selection.focus.path)}\n            )\n            return\n          }\n        }\n      }\n      apply(op)\n    }\n\n    // Override built in addMark function\n    editor.addMark = (mark: string) => {\n      if (editor.selection) {\n        if (Range.isExpanded(editor.selection)) {\n          // Split if needed\n          Transforms.setNodes(editor, {}, {match: Text.isText, split: true})\n          // Use new selection\n          const splitTextNodes = [\n            ...Editor.nodes(editor, {at: editor.selection, match: Text.isText}),\n          ]\n          const shouldRemoveMark = flatten(\n            splitTextNodes.map((item) => item[0]).map((node) => node.marks)\n          ).includes(mark)\n          if (shouldRemoveMark) {\n            editor.removeMark(mark)\n            return\n          }\n          Editor.withoutNormalizing(editor, () => {\n            splitTextNodes.forEach(([node, path]) => {\n              const marks = [\n                ...(Array.isArray(node.marks) ? node.marks : []).filter(\n                  (eMark: string) => eMark !== mark\n                ),\n                mark,\n              ]\n              Transforms.setNodes(\n                editor,\n                {marks},\n                {at: path, match: Text.isText, split: true, hanging: true}\n              )\n            })\n          })\n          Editor.normalize(editor)\n        } else {\n          const existingMarks: string[] =\n            {\n              ...(Editor.marks(editor) || {}),\n            }.marks || []\n          const marks = {\n            ...(Editor.marks(editor) || {}),\n            marks: [...existingMarks, mark],\n          }\n          editor.marks = marks as Text\n        }\n        editor.onChange()\n      }\n    }\n\n    // Override built in removeMark function\n    editor.removeMark = (mark: string) => {\n      const {selection} = editor\n      if (selection) {\n        if (Range.isExpanded(selection)) {\n          Editor.withoutNormalizing(editor, () => {\n            // Split if needed\n            Transforms.setNodes(editor, {}, {match: Text.isText, split: true})\n            if (editor.selection) {\n              const splitTextNodes = [\n                ...Editor.nodes(editor, {at: editor.selection, match: Text.isText}),\n              ]\n              splitTextNodes.forEach(([node, path]) => {\n                const block = editor.children[path[0]]\n                if (Element.isElement(block) && block.children.includes(node)) {\n                  Transforms.setNodes(\n                    editor,\n                    {\n                      marks: (Array.isArray(node.marks) ? node.marks : []).filter(\n                        (eMark: string) => eMark !== mark\n                      ),\n                    },\n                    {at: path}\n                  )\n                }\n              })\n            }\n          })\n          Editor.normalize(editor)\n        } else {\n          const existingMarks: string[] =\n            {\n              ...(Editor.marks(editor) || {}),\n            }.marks || []\n          const marks = {\n            ...(Editor.marks(editor) || {}),\n            marks: existingMarks.filter((eMark) => eMark !== mark),\n          }\n          editor.marks = marks as Text\n        }\n        editor.onChange()\n      }\n    }\n\n    editor.pteIsMarkActive = (mark: string): boolean => {\n      if (!editor.selection || editor.selection.focus.path.length < 2) {\n        return false\n      }\n      let existingMarks =\n        {\n          ...(Editor.marks(editor) || {}),\n        }.marks || []\n      if (Range.isExpanded(editor.selection)) {\n        Array.from(Editor.nodes(editor, {match: Text.isText, at: editor.selection})).forEach(\n          (n) => {\n            const [node] = n as NodeEntry<Text>\n            existingMarks = uniq([...existingMarks, ...((node.marks as string[]) || [])])\n          }\n        )\n      }\n      return existingMarks.includes(mark)\n    }\n\n    // Custom editor function to toggle a mark\n    editor.pteToggleMark = (mark: string) => {\n      const isActive = editor.pteIsMarkActive(mark)\n      if (isActive) {\n        debug(`Remove mark '${mark}'`)\n        Editor.removeMark(editor, mark)\n      } else {\n        debug(`Add mark '${mark}'`)\n        Editor.addMark(editor, mark, true)\n      }\n      editor.onChange()\n    }\n    return editor\n  }\n\n  /**\n   * Normalize re-marked spans in selection\n   */\n  function mergeSpans(editor: Editor) {\n    const {selection} = editor\n    if (selection) {\n      for (const [node, path] of Array.from(\n        Editor.nodes(editor, {\n          at: Editor.range(editor, [selection.anchor.path[0]], [selection.focus.path[0]]),\n        })\n      ).reverse()) {\n        const [parent] = path.length > 1 ? Editor.node(editor, Path.parent(path)) : [undefined]\n        const nextPath = [path[0], path[1] + 1]\n        if (Editor.isBlock(editor, parent)) {\n          const nextNode = parent.children[nextPath[1]]\n          if (Text.isText(node) && Text.isText(nextNode) && isEqual(nextNode.marks, node.marks)) {\n            debug('Merging spans')\n            Transforms.mergeNodes(editor, {at: nextPath, voids: true})\n            editor.onChange()\n          }\n        }\n      }\n    }\n  }\n  /**\n   * Normalize markDefs\n   *\n   */\n  function normalizeMarkDefs(editor: Editor) {\n    const {selection} = editor\n    if (selection) {\n      const blocks = Editor.nodes(editor, {\n        at: selection,\n        match: (n) => n._type === portableTextFeatures.types.block.name,\n      })\n      for (const [block, path] of blocks) {\n        if (editor.isTextBlock(block)) {\n          const newMarkDefs = block.markDefs.filter((def) => {\n            return block.children.find((child) => {\n              return (\n                Text.isText(child) && Array.isArray(child.marks) && child.marks.includes(def._key)\n              )\n            })\n          })\n          if (!isEqual(newMarkDefs, block.markDefs)) {\n            debug('Removing markDef not in use')\n            Transforms.setNodes(\n              editor,\n              {\n                markDefs: newMarkDefs,\n              },\n              {at: path}\n            )\n            editor.onChange()\n          }\n        }\n      }\n    }\n  }\n}\n","import {Subject} from 'rxjs'\nimport {EditorChange, EditorSelection, PortableTextSlateEditor} from '../../types/editor'\nimport {PortableTextFeatures} from '../../types/portableText'\nimport {debugWithName} from '../../utils/debug'\nimport {toPortableTextRange} from '../../utils/ranges'\nimport {fromSlateValue} from '../../utils/values'\nimport {KEY_TO_VALUE_ELEMENT, SLATE_TO_PORTABLE_TEXT_RANGE} from '../../utils/weakMaps'\n\nconst debug = debugWithName('plugin:withPortableTextSelections')\n\n// This plugin will make sure that we emit a PT selection whenever the editor has changed.\nexport function createWithPortableTextSelections(\n  change$: Subject<EditorChange>,\n  portableTextFeatures: PortableTextFeatures\n) {\n  return function withPortableTextSelections(\n    editor: PortableTextSlateEditor\n  ): PortableTextSlateEditor {\n    const emitSelection = () => {\n      let ptRange: EditorSelection = null\n      if (editor.selection) {\n        const existing = SLATE_TO_PORTABLE_TEXT_RANGE.get(editor.selection)\n        if (existing) {\n          ptRange = existing\n        } else {\n          ptRange = toPortableTextRange(\n            fromSlateValue(\n              editor.children,\n              portableTextFeatures.types.block.name,\n              KEY_TO_VALUE_ELEMENT.get(editor)\n            ),\n            editor.selection,\n            portableTextFeatures\n          )\n          SLATE_TO_PORTABLE_TEXT_RANGE.set(editor.selection, ptRange)\n        }\n      }\n      if (ptRange) {\n        debug(`Emitting selection ${JSON.stringify(ptRange)}`)\n        change$.next({type: 'selection', selection: ptRange})\n      } else {\n        change$.next({type: 'selection', selection: null})\n      }\n    }\n\n    const {onChange} = editor\n    editor.onChange = () => {\n      const hasChanges = editor.operations.length > 0\n      onChange()\n      if (hasChanges) {\n        emitSelection()\n      }\n    }\n    return editor\n  }\n}\n","import {Element, Operation, InsertNodeOperation, Text as SlateText} from 'slate'\nimport {PortableTextFeatures, TextBlock, ListItem, TextSpan} from '../../types/portableText'\nimport {debugWithName} from '../../utils/debug'\nimport {PortableTextSlateEditor} from '../../types/editor'\n\nconst debug = debugWithName('plugin:withSchemaTypes')\n/**\n * This plugin makes sure that shema types are recognized properly by Slate as blocks, voids, inlines\n *\n */\nexport function createWithSchemaTypes(portableTextFeatures: PortableTextFeatures) {\n  return function withSchemaTypes(editor: PortableTextSlateEditor): PortableTextSlateEditor {\n    editor.isTextBlock = (value: any): value is TextBlock => {\n      return (\n        !editor.isVoid(value) &&\n        'markDefs' in value &&\n        'style' in value &&\n        'children' in value &&\n        '_type' in value &&\n        portableTextFeatures.types.block.name === value._type\n      )\n    }\n    editor.isTextSpan = (value: any): value is TextSpan => {\n      return (\n        !editor.isVoid(value) &&\n        'text' in value &&\n        'marks' in value &&\n        '_type' in value &&\n        portableTextFeatures.types.span.name === value._type\n      )\n    }\n    editor.isListBlock = (value: any): value is ListItem => {\n      return Boolean(\n        editor.isTextBlock(value) &&\n          'listItem' in value &&\n          'level' in value &&\n          value.listItem &&\n          Number.isInteger(value.level)\n      )\n    }\n    editor.isVoid = (element: Element): boolean => {\n      return (\n        portableTextFeatures.types.block.name !== element._type &&\n        (portableTextFeatures.types.blockObjects.map((obj) => obj.name).includes(element._type) ||\n          portableTextFeatures.types.inlineObjects.map((obj) => obj.name).includes(element._type))\n      )\n    }\n    editor.isInline = (element: Element): boolean => {\n      const inlineSchemaTypes = portableTextFeatures.types.inlineObjects.map((obj) => obj.name)\n      return (\n        inlineSchemaTypes.includes(element._type) &&\n        '__inline' in element &&\n        element.__inline === true\n      )\n    }\n    // Extend Slate's default normalization to add _type span to span inserted after a inline void object\n    const {apply} = editor\n    editor.apply = (op: Operation) => {\n      const isInsertTextWithoutType =\n        op.type === 'insert_node' &&\n        op.path.length === 2 &&\n        SlateText.isText(op.node) &&\n        op.node._type === undefined\n      if (isInsertTextWithoutType) {\n        const insertNodeOperation = op as InsertNodeOperation\n        const newNode: SlateText = {\n          ...(insertNodeOperation.node as SlateText),\n          _type: 'span',\n        }\n        op.node = newNode\n        debug('Setting span type to child without a type', op)\n      }\n      apply(op)\n    }\n    return editor\n  }\n}\n","import {Editor, Range, Transforms, Text, Descendant} from 'slate'\nimport {PortableTextSlateEditor} from '../../types/editor'\nimport {PortableTextFeatures} from '../../types/portableText'\nimport {debugWithName} from '../../utils/debug'\n\nconst debug = debugWithName('plugin:withUtils')\n\ninterface Options {\n  portableTextFeatures: PortableTextFeatures\n  keyGenerator: () => string\n}\n/**\n * This plugin makes various util commands available in the editor\n *\n */\nexport function createWithUtils({portableTextFeatures, keyGenerator}: Options) {\n  return function withUtils(editor: PortableTextSlateEditor): PortableTextSlateEditor {\n    editor.createPlaceholderBlock = (): Descendant => {\n      return {\n        _type: portableTextFeatures.types.block.name,\n        _key: keyGenerator(),\n        style: portableTextFeatures.styles[0].value,\n        markDefs: [],\n        children: [\n          {\n            _type: 'span',\n            _key: keyGenerator(),\n            text: '',\n            marks: [],\n          },\n        ],\n      }\n    }\n    // Expands the the selection to wrap around the word the focus is at\n    editor.pteExpandToWord = () => {\n      const {selection} = editor\n      if (selection && !Range.isExpanded(selection)) {\n        const [textNode] = Editor.node(editor, selection.focus, {depth: 2})\n        if (!textNode || !Text.isText(textNode) || textNode.text.length === 0) {\n          debug(`pteExpandToWord: Can't expand to word here`)\n          return\n        }\n        const {focus} = selection\n        const focusOffset = focus.offset\n        const charsBefore = textNode.text.slice(0, focusOffset)\n        const charsAfter = textNode.text.slice(focusOffset, -1)\n        const isEmpty = (str: string) => str.match(/\\s/g)\n        const whiteSpaceBeforeIndex = charsBefore\n          .split('')\n          .reverse()\n          .findIndex((str) => isEmpty(str))\n        const newStartOffset =\n          whiteSpaceBeforeIndex > -1 ? charsBefore.length - whiteSpaceBeforeIndex : 0\n        const whiteSpaceAfterIndex = charsAfter.split('').findIndex((obj) => isEmpty(obj))\n        const newEndOffset =\n          charsBefore.length +\n          (whiteSpaceAfterIndex > -1 ? whiteSpaceAfterIndex : charsAfter.length + 1)\n        if (!(newStartOffset === newEndOffset || isNaN(newStartOffset) || isNaN(newEndOffset))) {\n          debug('pteExpandToWord: Expanding to focused word')\n          Transforms.setSelection(editor, {\n            anchor: {...selection.anchor, offset: newStartOffset},\n            focus: {...selection.focus, offset: newEndOffset},\n          })\n          return\n        }\n        debug(`pteExpandToWord: Can't expand to word here`)\n      }\n    }\n    return editor\n  }\n}\n","import {Text, Range, Transforms, Editor, Element as SlateElement, Node} from 'slate'\nimport {Path} from '@sanity/types'\nimport {ReactEditor} from '@sanity/slate-react'\nimport {DOMNode} from '@sanity/slate-react/dist/utils/dom'\nimport {Type} from '../../types/schema'\nimport {PortableTextBlock, PortableTextChild, PortableTextFeatures} from '../../types/portableText'\nimport {\n  EditableAPIDeleteOptions,\n  EditorSelection,\n  PortableTextSlateEditor,\n} from '../../types/editor'\nimport {toSlateValue, fromSlateValue} from '../../utils/values'\nimport {toSlateRange, toPortableTextRange} from '../../utils/ranges'\nimport {PortableTextEditor} from '../PortableTextEditor'\n\nimport {debugWithName} from '../../utils/debug'\nimport {KEY_TO_VALUE_ELEMENT, SLATE_TO_PORTABLE_TEXT_RANGE} from '../../utils/weakMaps'\n\nconst debug = debugWithName('API:editable')\n\nexport function createWithEditableAPI(\n  portableTextEditor: PortableTextEditor,\n  portableTextFeatures: PortableTextFeatures,\n  keyGenerator: () => string\n) {\n  return function withEditableAPI(editor: PortableTextSlateEditor): PortableTextSlateEditor {\n    portableTextEditor.setEditable({\n      focus: (): void => {\n        // Make a selection if missing\n        if (!editor.selection) {\n          const point = {path: [0, 0], offset: 0}\n          Transforms.select(editor, {focus: point, anchor: point})\n          editor.onChange()\n        }\n        ReactEditor.focus(editor)\n      },\n      blur: (): void => {\n        ReactEditor.blur(editor)\n      },\n      toggleMark: (mark: string): void => {\n        editor.pteToggleMark(mark)\n      },\n      toggleList: (listStyle: string): void => {\n        editor.pteToggleListItem(listStyle)\n      },\n      toggleBlockStyle: (blockStyle: string): void => {\n        editor.pteToggleBlockStyle(blockStyle)\n      },\n      isMarkActive: (mark: string): boolean => {\n        // Try/catch this, as Slate may error because the selection is currently wrong\n        // TODO: catch only relevant error from Slate\n        try {\n          return editor.pteIsMarkActive(mark)\n        } catch (err) {\n          console.warn(err)\n          return false\n        }\n      },\n      marks: (): string[] => {\n        return (\n          {\n            ...(Editor.marks(editor) || {}),\n          }.marks || []\n        )\n      },\n      undo: (): void => editor.undo(),\n      redo: (): void => editor.redo(),\n      select: (selection: EditorSelection): void => {\n        const slateSelection = toSlateRange(selection, editor)\n        if (slateSelection) {\n          Transforms.select(editor, slateSelection)\n        } else {\n          Transforms.deselect(editor)\n        }\n        editor.onChange()\n      },\n      focusBlock: (): PortableTextBlock | undefined => {\n        if (editor.selection) {\n          // Try/catch this, as Slate may error because the selection is currently wrong\n          // TODO: catch only relevant error from Slate\n          try {\n            const [block] = Array.from(\n              Editor.nodes(editor, {\n                at: editor.selection.focus,\n                match: (n) => Editor.isBlock(editor, n),\n              })\n            )[0] || [undefined]\n            if (block) {\n              return fromSlateValue(\n                [block],\n                portableTextFeatures.types.block.name,\n                KEY_TO_VALUE_ELEMENT.get(editor)\n              )[0]\n            }\n          } catch (err) {\n            return undefined\n          }\n        }\n        return undefined\n      },\n      focusChild: (): PortableTextChild | undefined => {\n        if (editor.selection) {\n          try {\n            const [node] = Array.from(\n              Editor.nodes(editor, {\n                mode: 'lowest',\n                at: editor.selection.focus,\n                match: (n) => n._type !== undefined,\n                voids: true,\n              })\n            )[0] || [undefined]\n            if (node && !Editor.isBlock(editor, node)) {\n              const pseudoBlock: PortableTextBlock = {\n                _key: 'pseudo',\n                _type: portableTextFeatures.types.block.name,\n                children: [node],\n              }\n              return fromSlateValue(\n                [pseudoBlock],\n                portableTextFeatures.types.block.name,\n                KEY_TO_VALUE_ELEMENT.get(editor)\n              )[0].children[0]\n            }\n          } catch (err) {\n            return undefined\n          }\n        }\n        return undefined\n      },\n      insertChild: (type: Type, value?: {[prop: string]: any}): Path => {\n        if (!editor.selection) {\n          throw new Error('The editor has no selection')\n        }\n        const [focusBlock] = Array.from(\n          Editor.nodes(editor, {\n            at: editor.selection.focus,\n            match: (n) => Editor.isBlock(editor, n),\n          })\n        )[0] || [undefined]\n        if (!focusBlock) {\n          throw new Error('No focus block')\n        }\n        if (focusBlock && Editor.isVoid(editor, focusBlock)) {\n          throw new Error(\"Can't insert childs into block objects\")\n        }\n        const block = toSlateValue(\n          [\n            {\n              _key: keyGenerator(),\n              _type: portableTextFeatures.types.block.name,\n              children: [\n                {\n                  _key: keyGenerator(),\n                  _type: type.name,\n                  ...(value ? value : {}),\n                },\n              ],\n            },\n          ],\n          portableTextEditor\n        )[0] as unknown as SlateElement\n        const child = block.children[0]\n        Editor.insertNode(editor, child as Node)\n        editor.onChange()\n        return (\n          toPortableTextRange(\n            fromSlateValue(\n              editor.children,\n              portableTextFeatures.types.block.name,\n              KEY_TO_VALUE_ELEMENT.get(editor)\n            ),\n            editor.selection,\n            portableTextFeatures\n          )?.focus.path || []\n        )\n      },\n      insertBlock: (type: Type, value?: {[prop: string]: any}): Path => {\n        if (!editor.selection) {\n          throw new Error('The editor has no selection')\n        }\n        const block = toSlateValue(\n          [\n            {\n              _key: keyGenerator(),\n              _type: type.name,\n              ...(value ? value : {}),\n            },\n          ],\n          portableTextEditor\n        )[0] as unknown as Node\n        Editor.insertNode(editor, block)\n        editor.onChange()\n        return (\n          toPortableTextRange(\n            fromSlateValue(\n              editor.children,\n              portableTextFeatures.types.block.name,\n              KEY_TO_VALUE_ELEMENT.get(editor)\n            ),\n            editor.selection,\n            portableTextFeatures\n          )?.focus.path || []\n        )\n      },\n      hasBlockStyle: (style: string): boolean => {\n        try {\n          return editor.pteHasBlockStyle(style)\n        } catch (err) {\n          // This is fine.\n          // debug(err)\n          return false\n        }\n      },\n      hasListStyle: (listStyle: string): boolean => {\n        try {\n          return editor.pteHasListStyle(listStyle)\n        } catch (err) {\n          // This is fine.\n          // debug(err)\n          return false\n        }\n      },\n      isVoid: (element: PortableTextBlock | PortableTextChild) => {\n        return ![\n          portableTextFeatures.types.block.name,\n          portableTextFeatures.types.span.name,\n        ].includes(element._type)\n      },\n      findByPath: (\n        path: Path\n      ): [PortableTextBlock | PortableTextChild | undefined, Path | undefined] => {\n        const slatePath = toSlateRange(\n          {focus: {path, offset: 0}, anchor: {path, offset: 0}},\n          editor\n        )\n        if (slatePath) {\n          const [block, blockPath] = Editor.node(editor, slatePath.focus.path.slice(0, 1))\n          if (block && blockPath && typeof block._key === 'string') {\n            if (path.length === 1 && slatePath.focus.path.length === 1) {\n              return [\n                fromSlateValue([block], portableTextFeatures.types.block.name)[0],\n                [{_key: block._key}],\n              ]\n            }\n            const ptBlock = fromSlateValue(\n              [block],\n              portableTextFeatures.types.block.name,\n              KEY_TO_VALUE_ELEMENT.get(editor)\n            )[0]\n            const ptChild = ptBlock.children[slatePath.focus.path[1]]\n            if (ptChild) {\n              return [ptChild, [{_key: block._key}, 'children', {_key: ptChild._key}]]\n            }\n          }\n        }\n        return [undefined, undefined]\n      },\n      findDOMNode: (element: PortableTextBlock | PortableTextChild): DOMNode | undefined => {\n        let node: DOMNode | undefined\n        try {\n          const [item] = Array.from(\n            Editor.nodes(editor, {\n              at: [],\n              match: (n) => n._key === element._key,\n            }) || []\n          )[0] || [undefined]\n          node = ReactEditor.toDOMNode(editor, item)\n        } catch (err) {\n          // Nothing\n        }\n        return node\n      },\n      activeAnnotations: (): PortableTextBlock[] => {\n        if (!editor.selection || editor.selection.focus.path.length < 2) {\n          return []\n        }\n        try {\n          const activeAnnotations: PortableTextBlock[] = []\n          const spans = Editor.nodes(editor, {\n            at: editor.selection,\n            match: (node) =>\n              Text.isText(node) &&\n              node.marks !== undefined &&\n              Array.isArray(node.marks) &&\n              node.marks.length > 0,\n          })\n          for (const [span, path] of spans) {\n            const [block] = Editor.node(editor, path, {depth: 1})\n            if (editor.isTextBlock(block)) {\n              block.markDefs.forEach((def) => {\n                if (\n                  Text.isText(span) &&\n                  span.marks &&\n                  Array.isArray(span.marks) &&\n                  span.marks.includes(def._key)\n                ) {\n                  activeAnnotations.push(def)\n                }\n              })\n            }\n          }\n          return activeAnnotations\n        } catch (err) {\n          return []\n        }\n      },\n      addAnnotation: (\n        type: Type,\n        value?: {[prop: string]: PortableTextBlock}\n      ): {spanPath: Path; markDefPath: Path} | undefined => {\n        const {selection} = editor\n        if (selection) {\n          const [block] = Editor.node(editor, selection.focus, {depth: 1})\n          if (\n            SlateElement.isElement(block) &&\n            block._type === portableTextFeatures.types.block.name\n          ) {\n            const annotationKey = keyGenerator()\n            if (editor.isTextBlock(block)) {\n              Transforms.setNodes(\n                editor,\n                {\n                  markDefs: [...block.markDefs, {_type: type.name, _key: annotationKey, ...value}],\n                },\n                {at: selection.focus}\n              )\n              editor.onChange()\n              if (Range.isCollapsed(selection)) {\n                editor.pteExpandToWord()\n                editor.onChange()\n              }\n              const [textNode] = Editor.node(editor, selection.focus, {depth: 2})\n              if (editor.selection) {\n                Editor.withoutNormalizing(editor, () => {\n                  // Split if needed\n                  Transforms.setNodes(editor, {}, {match: Text.isText, split: true})\n                  if (editor.selection && Text.isText(textNode)) {\n                    Transforms.setNodes(\n                      editor,\n                      {\n                        marks: [...((textNode.marks || []) as string[]), annotationKey],\n                      },\n                      {\n                        at: editor.selection,\n                        match: (n) => n._type === portableTextFeatures.types.span.name,\n                      }\n                    )\n                    editor.onChange()\n                  }\n                })\n                Editor.normalize(editor)\n                editor.onChange()\n                const newSelection = toPortableTextRange(\n                  fromSlateValue(\n                    editor.children,\n                    portableTextFeatures.types.block.name,\n                    KEY_TO_VALUE_ELEMENT.get(editor)\n                  ),\n                  editor.selection,\n                  portableTextFeatures\n                )\n                // eslint-disable-next-line max-depth\n                if (newSelection && typeof block._key === 'string') {\n                  // Insert an empty string to continue writing non-annotated text\n                  Editor.withoutNormalizing(editor, () => {\n                    if (editor.selection) {\n                      Transforms.insertNodes(\n                        editor,\n                        [{_type: 'span', text: '', marks: [], _key: keyGenerator()}],\n                        {\n                          at: Range.end(editor.selection),\n                        }\n                      )\n                      editor.onChange()\n                    }\n                  })\n                  return {\n                    spanPath: newSelection.focus.path,\n                    markDefPath: [{_key: block._key}, 'markDefs', {_key: annotationKey}],\n                  }\n                }\n              }\n            }\n          }\n        }\n        return undefined\n      },\n      delete: (selection: EditorSelection, options?: EditableAPIDeleteOptions): void => {\n        if (selection) {\n          const range = toSlateRange(selection, editor)\n          if (range) {\n            if (!options?.mode || options?.mode === 'selected') {\n              debug(`Deleting content in selection`)\n              Transforms.delete(editor, {\n                at: range,\n                hanging: true,\n                voids: true,\n              })\n              editor.onChange()\n              return\n            }\n            const nodes = Editor.nodes(editor, {\n              at: range,\n              match: (node) => {\n                if (options?.mode === 'blocks') {\n                  debug(`Deleting blocks touched by selection`)\n                  return (\n                    editor.isTextBlock(node) ||\n                    (!editor.isTextBlock(node) && SlateElement.isElement(node))\n                  )\n                }\n                debug(`Deleting children touched by selection`)\n                return (\n                  node._type === portableTextFeatures.types.span.name || // Text children\n                  (!editor.isTextBlock(node) && SlateElement.isElement(node)) // inline blocks\n                )\n              },\n            })\n            const nodeAndPaths = [...nodes]\n            nodeAndPaths.forEach(([, p]) => {\n              Transforms.removeNodes(editor, {\n                at: p,\n                voids: true,\n                hanging: true,\n              })\n            })\n            editor.onChange()\n          }\n        }\n      },\n      removeAnnotation: (type: Type): void => {\n        let {selection} = editor\n        debug('Removing annotation', type)\n        if (selection) {\n          // Select the whole annotation if collapsed\n          if (Range.isCollapsed(selection)) {\n            const [node, nodePath] = Editor.node(editor, selection, {depth: 2})\n            if (Text.isText(node) && node.marks && typeof node.text === 'string') {\n              Transforms.select(editor, nodePath)\n              selection = editor.selection\n            }\n          }\n          // Do this without normalization or span references will be unstable!\n          Editor.withoutNormalizing(editor, () => {\n            if (selection && Range.isExpanded(selection)) {\n              selection = editor.selection\n              if (!selection) {\n                return\n              }\n              // Split the span first\n              Transforms.setNodes(editor, {}, {match: Text.isText, split: true})\n              editor.onChange()\n\n              // Everything in the selection which has marks\n              const spans = [\n                ...Editor.nodes(editor, {\n                  at: selection,\n                  match: (node) =>\n                    Text.isText(node) &&\n                    node.marks !== undefined &&\n                    Array.isArray(node.marks) &&\n                    node.marks.length > 0,\n                }),\n              ]\n              spans.forEach(([span, path]) => {\n                const [block] = Editor.node(editor, path, {depth: 1})\n                if (editor.isTextBlock(block)) {\n                  block.markDefs\n                    .filter((def) => def._type === type.name)\n                    .forEach((def) => {\n                      if (\n                        Text.isText(span) &&\n                        Array.isArray(span.marks) &&\n                        span.marks.includes(def._key)\n                      ) {\n                        const newMarks = [...(span.marks || []).filter((mark) => mark !== def._key)]\n                        Transforms.setNodes(\n                          editor,\n                          {\n                            marks: newMarks,\n                          },\n                          {at: path, voids: false, split: false}\n                        )\n                      }\n                    })\n                }\n              })\n            }\n          })\n          Editor.normalize(editor)\n          editor.onChange()\n        }\n      },\n      getSelection: (): EditorSelection | null => {\n        let ptRange: EditorSelection = null\n        if (editor.selection) {\n          const existing = SLATE_TO_PORTABLE_TEXT_RANGE.get(editor.selection)\n          if (existing) {\n            return existing\n          }\n          ptRange = toPortableTextRange(\n            fromSlateValue(\n              editor.children,\n              portableTextFeatures.types.block.name,\n              KEY_TO_VALUE_ELEMENT.get(editor)\n            ),\n            editor.selection,\n            portableTextFeatures\n          )\n          SLATE_TO_PORTABLE_TEXT_RANGE.set(editor.selection, ptRange)\n        }\n        return ptRange\n      },\n      getValue: () => {\n        return fromSlateValue(\n          editor.children,\n          portableTextFeatures.types.block.name,\n          KEY_TO_VALUE_ELEMENT.get(editor)\n        )\n      },\n      isCollapsedSelection: () => {\n        return !!editor.selection && Range.isCollapsed(editor.selection)\n      },\n      isExpandedSelection: () => {\n        return !!editor.selection && Range.isExpanded(editor.selection)\n      },\n    })\n    return editor\n  }\n}\n","/* eslint-disable max-statements */\n/* eslint-disable complexity */\nimport {Editor, Transforms, Path, Range} from 'slate'\nimport isHotkey from 'is-hotkey'\nimport {ReactEditor} from '@sanity/slate-react'\nimport {PortableTextFeatures} from '../../types/portableText'\nimport {PortableTextSlateEditor} from '../../types/editor'\nimport {HotkeyOptions} from '../../types/options'\nimport {debugWithName} from '../../utils/debug'\nimport {toSlateValue} from '../../utils/values'\nimport {PortableTextEditor} from '../PortableTextEditor'\n\nconst debug = debugWithName('plugin:withHotKeys')\n\nconst DEFAULT_HOTKEYS: HotkeyOptions = {\n  marks: {\n    'mod+b': 'strong',\n    'mod+i': 'em',\n    'mod+u': 'underline',\n    \"mod+'\": 'code',\n  },\n  custom: {},\n}\n\n/**\n * This plugin takes care of all hotkeys in the editor\n *\n */\nexport function createWithHotkeys(\n  portableTextFeatures: PortableTextFeatures,\n  keyGenerator: () => string,\n  portableTextEditor: PortableTextEditor,\n  hotkeysFromOptions?: HotkeyOptions\n): (editor: PortableTextSlateEditor & ReactEditor) => any {\n  const reservedHotkeys = ['enter', 'tab', 'shift', 'delete', 'end']\n  const activeHotkeys = hotkeysFromOptions || DEFAULT_HOTKEYS // TODO: Merge where possible? A union?\n  const createEmptyBlock = () =>\n    toSlateValue(\n      [\n        {\n          _type: portableTextFeatures.types.block.name,\n          _key: keyGenerator(),\n          style: 'normal',\n          markDefs: [],\n          children: [\n            {\n              _type: 'span',\n              _key: keyGenerator(),\n              text: '',\n              marks: [],\n            },\n          ],\n        },\n      ],\n      portableTextEditor\n    )[0]\n  return function withHotKeys(editor: PortableTextSlateEditor & ReactEditor) {\n    editor.pteWithHotKeys = (event: React.KeyboardEvent<HTMLDivElement>): void => {\n      // Wire up custom marks hotkeys\n      Object.keys(activeHotkeys).forEach((cat) => {\n        if (cat === 'marks') {\n          // eslint-disable-next-line guard-for-in\n          for (const hotkey in activeHotkeys[cat]) {\n            if (reservedHotkeys.includes(hotkey)) {\n              throw new Error(`The hotkey ${hotkey} is reserved!`)\n            }\n            if (isHotkey(hotkey, event.nativeEvent)) {\n              event.preventDefault()\n              const possibleMark = activeHotkeys[cat]\n              if (possibleMark) {\n                const mark = possibleMark[hotkey]\n                debug(`HotKey ${hotkey} to toggle ${mark}`)\n                editor.pteToggleMark(mark)\n              }\n            }\n          }\n        }\n        if (cat === 'custom') {\n          // eslint-disable-next-line guard-for-in\n          for (const hotkey in activeHotkeys[cat]) {\n            if (reservedHotkeys.includes(hotkey)) {\n              throw new Error(`The hotkey ${hotkey} is reserved!`)\n            }\n            if (isHotkey(hotkey, event.nativeEvent)) {\n              const possibleCommand = activeHotkeys[cat]\n              if (possibleCommand) {\n                const command = possibleCommand[hotkey]\n                command(event, portableTextEditor)\n              }\n            }\n          }\n        }\n      })\n\n      const isEnter = isHotkey('enter', event.nativeEvent)\n      const isTab = isHotkey('tab', event.nativeEvent)\n      const isShiftEnter = isHotkey('shift+enter', event.nativeEvent)\n      const isShiftTab = isHotkey('shift+tab', event.nativeEvent)\n      const isBackspace = isHotkey('backspace', event.nativeEvent)\n      const isDelete = isHotkey('delete', event.nativeEvent)\n\n      // Disallow deleting void blocks by backspace from another line.\n      // Otherwise it's so easy to delete the void block above when trying to delete text on\n      // the line below or above\n      if (\n        isBackspace &&\n        editor.selection &&\n        editor.selection.focus.path[0] > 0 &&\n        Range.isCollapsed(editor.selection)\n      ) {\n        const [prevBlock, prevPath] = Editor.node(\n          editor,\n          Path.previous(editor.selection.focus.path.slice(0, 1))\n        )\n        const [focusBlock] = Editor.node(editor, editor.selection.focus, {depth: 1})\n        if (\n          prevBlock &&\n          focusBlock &&\n          Editor.isVoid(editor, prevBlock) &&\n          editor.selection.focus.offset === 0\n        ) {\n          debug('Preventing deleting void block above')\n          event.preventDefault()\n          event.stopPropagation()\n          Transforms.removeNodes(editor, {match: (n) => n === focusBlock})\n          Transforms.select(editor, prevPath)\n          editor.onChange()\n          return\n        }\n      }\n      if (\n        isDelete &&\n        editor.selection &&\n        editor.selection.focus.offset === 0 &&\n        Range.isCollapsed(editor.selection) &&\n        editor.children[editor.selection.focus.path[0] + 1]\n      ) {\n        const [nextBlock] = Editor.node(editor, Path.next(editor.selection.focus.path.slice(0, 1)))\n        const [focusBlock, focusBlockPath] = Editor.node(editor, editor.selection.focus, {depth: 1})\n        if (\n          nextBlock &&\n          focusBlock &&\n          !Editor.isVoid(editor, focusBlock) &&\n          Editor.isVoid(editor, nextBlock)\n        ) {\n          debug('Preventing deleting void block below')\n          event.preventDefault()\n          event.stopPropagation()\n          Transforms.removeNodes(editor, {match: (n) => n === focusBlock})\n          Transforms.select(editor, focusBlockPath)\n          editor.onChange()\n          return\n        }\n      }\n\n      // Tab for lists\n      if (isTab || isShiftTab) {\n        if (editor.pteIncrementBlockLevels(isShiftTab)) {\n          event.preventDefault()\n        }\n      }\n\n      // Deal with enter key combos\n      if (isEnter && !isShiftEnter && editor.selection) {\n        let focusBlock\n        try {\n          ;[focusBlock] = Editor.node(editor, editor.selection.focus, {depth: 1})\n        } catch (err) {\n          // Just ignore\n        }\n        // List item enter key\n        if (editor.isListBlock(focusBlock)) {\n          if (editor.pteEndList()) {\n            event.preventDefault()\n          }\n          return\n        }\n\n        // Enter from another style than the first (default one)\n        if (\n          editor.isTextBlock(focusBlock) &&\n          focusBlock.style &&\n          focusBlock.style !== portableTextFeatures.styles[0].value\n        ) {\n          const [, end] = Range.edges(editor.selection)\n          const endAtEndOfNode = Editor.isEnd(editor, end, end.path)\n          if (endAtEndOfNode) {\n            Editor.insertNode(editor, createEmptyBlock())\n            event.preventDefault()\n            return\n          }\n        }\n        // Block object enter key\n        if (focusBlock && Editor.isVoid(editor, focusBlock)) {\n          Editor.insertNode(editor, createEmptyBlock())\n          event.preventDefault()\n          return\n        }\n      }\n\n      // Soft line breaks\n      if (isShiftEnter) {\n        event.preventDefault()\n        editor.insertText('\\n')\n        return\n      }\n\n      // Undo/redo\n      if (isHotkey('mod+z', event.nativeEvent)) {\n        event.preventDefault()\n        editor.undo()\n        return\n      }\n      if (isHotkey('mod+y', event.nativeEvent) || isHotkey('mod+shift+z', event.nativeEvent)) {\n        event.preventDefault()\n        editor.redo()\n      }\n    }\n    return editor\n  }\n}\n","import {Node, Element, Transforms, Editor, Descendant, Range, Text} from 'slate'\nimport {htmlToBlocks, normalizeBlock} from '@sanity/block-tools'\nimport {ReactEditor} from '@sanity/slate-react'\nimport {PortableTextFeatures, PortableTextBlock, PortableTextChild} from '../../types/portableText'\nimport {EditorChanges, PortableTextSlateEditor} from '../../types/editor'\nimport {fromSlateValue, toSlateValue} from '../../utils/values'\nimport {validateValue} from '../../utils/validateValue'\nimport {debugWithName} from '../../utils/debug'\n\nconst debug = debugWithName('plugin:withInsertData')\n\n/**\n * This plugin handles copy/paste in the editor\n *\n */\nexport function createWithInsertData(\n  change$: EditorChanges,\n  portableTextFeatures: PortableTextFeatures,\n  keyGenerator: () => string\n) {\n  return function withInsertData(editor: PortableTextSlateEditor): PortableTextSlateEditor {\n    const blockTypeName = portableTextFeatures.types.block.name\n    const spanTypeName = portableTextFeatures.types.span.name\n\n    const toPlainText = (blocks: PortableTextBlock[]) => {\n      return blocks\n        .map((block) => {\n          if (block._type === blockTypeName) {\n            return block.children\n              .map((child: PortableTextChild) => {\n                if (child._type === spanTypeName) {\n                  return child.text\n                }\n                return `[${\n                  portableTextFeatures.types.inlineObjects.find((t) => t.name === child._type)\n                    ?.title || 'Object'\n                }]`\n              })\n              .join('')\n          }\n          return `[${\n            portableTextFeatures.types.blockObjects.find((t) => t.name === block._type)?.title ||\n            'Object'\n          }]`\n        })\n        .join('\\n\\n')\n    }\n\n    editor.setFragmentData = (data: DataTransfer, originEvent) => {\n      const {selection} = editor\n\n      if (!selection) {\n        return\n      }\n\n      const [start, end] = Range.edges(selection)\n      const startVoid = Editor.void(editor, {at: start.path})\n      const endVoid = Editor.void(editor, {at: end.path})\n\n      if (Range.isCollapsed(selection) && !startVoid) {\n        return\n      }\n\n      // Create a fake selection so that we can add a Base64-encoded copy of the\n      // fragment to the HTML, to decode on future pastes.\n      const domRange = ReactEditor.toDOMRange(editor, selection)\n      let contents = domRange.cloneContents()\n      // COMPAT: If the end node is a void node, we need to move the end of the\n      // range from the void node's spacer span, to the end of the void node's\n      // content, since the spacer is before void's content in the DOM.\n      if (endVoid) {\n        const [voidNode] = endVoid\n        const r = domRange.cloneRange()\n        const domNode = ReactEditor.toDOMNode(editor, voidNode)\n        r.setEndAfter(domNode)\n        contents = r.cloneContents()\n      }\n      // Remove any zero-width space spans from the cloned DOM so that they don't\n      // show up elsewhere when pasted.\n      Array.from(contents.querySelectorAll('[data-slate-zero-width]')).forEach((zw) => {\n        const isNewline = zw.getAttribute('data-slate-zero-width') === 'n'\n        zw.textContent = isNewline ? '\\n' : ''\n      })\n      // Clean up the clipboard HTML for editor spesific attributes\n      Array.from(contents.querySelectorAll('*')).forEach((elm) => {\n        elm.removeAttribute('contentEditable')\n        elm.removeAttribute('data-slate-inline')\n        elm.removeAttribute('data-slate-leaf')\n        elm.removeAttribute('data-slate-node')\n        elm.removeAttribute('data-slate-spacer')\n        elm.removeAttribute('data-slate-string')\n        elm.removeAttribute('data-slate-zero-width')\n        elm.removeAttribute('draggable')\n        for (const key in elm.attributes) {\n          if (elm.hasAttribute(key)) {\n            elm.removeAttribute(key)\n          }\n        }\n      })\n      const div = contents.ownerDocument.createElement('div')\n      div.appendChild(contents)\n      div.setAttribute('hidden', 'true')\n      contents.ownerDocument.body.appendChild(div)\n      const asHTML = div.innerHTML\n      contents.ownerDocument.body.removeChild(div)\n      const fragment = editor.getFragment()\n      const portableText = fromSlateValue(fragment as Node[], portableTextFeatures.types.block.name)\n\n      const asJSON = JSON.stringify(portableText)\n      const asPlainText = toPlainText(portableText)\n      data.clearData()\n      data.setData('text/plain', asPlainText)\n      data.setData('text/html', asHTML)\n      data.setData('application/json', asJSON)\n      data.setData('application/x-portable-text', asJSON)\n      debug('text', asPlainText)\n      data.setData('application/x-portable-text-event-origin', originEvent || 'external')\n      debug('Set fragment data', asJSON, asHTML)\n    }\n\n    editor.insertPortableTextData = (data: DataTransfer): boolean => {\n      if (!editor.selection) {\n        return false\n      }\n      const pText = data.getData('application/x-portable-text')\n      const origin = data.getData('application/x-portable-text-event-origin')\n      debug(`Inserting portable text from ${origin} event`, pText)\n      if (pText) {\n        const parsed = JSON.parse(pText) as PortableTextBlock[]\n        if (Array.isArray(parsed) && parsed.length > 0) {\n          const slateValue = regenerateKeys(\n            editor,\n            toSlateValue(parsed, {portableTextFeatures}),\n            keyGenerator,\n            spanTypeName\n          )\n          // Validate the result\n          const validation = validateValue(parsed, portableTextFeatures, keyGenerator)\n          // Bail out if it's not valid\n          if (!validation.valid) {\n            const errorDescription = `${validation.resolution?.description}`\n            change$.next({\n              type: 'error',\n              level: 'warning',\n              name: 'pasteError',\n              description: errorDescription,\n              data: validation,\n            })\n            debug('Invalid insert result', validation)\n            return false\n          }\n          mixMarkDefs(editor, slateValue)\n          editor.insertFragment(slateValue)\n          editor.onChange()\n          return true\n        }\n      }\n      return false\n    }\n\n    editor.insertTextOrHTMLData = (data: DataTransfer): boolean => {\n      if (!editor.selection) {\n        debug('No selection, not inserting')\n        return false\n      }\n      change$.next({type: 'loading', isLoading: true}) // This could potentially take some time\n      const html = data.getData('text/html')\n      const text = data.getData('text/plain')\n      if (html || text) {\n        debug('Inserting data', data)\n        let portableText: PortableTextBlock[]\n        let fragment: Node[]\n        let insertedType\n\n        if (html) {\n          portableText = htmlToBlocks(html, portableTextFeatures.types.portableText).map((block) =>\n            normalizeBlock(block, {blockTypeName})\n          )\n          fragment = toSlateValue(portableText, {portableTextFeatures})\n          insertedType = 'HTML'\n        } else {\n          // plain text\n          const blocks = escapeHtml(text)\n            .split(/\\n{2,}/)\n            .map((line) =>\n              line ? `<p>${line.replace(/(?:\\r\\n|\\r|\\n)/g, '<br/>')}</p>` : '<p></p>'\n            )\n            .join('')\n          const textToHtml = `<html><body>${blocks}</body></html>`\n          portableText = htmlToBlocks(textToHtml, portableTextFeatures.types.portableText).map(\n            (block) => normalizeBlock(block, {blockTypeName})\n          )\n          fragment = toSlateValue(portableText, {\n            portableTextFeatures,\n          })\n          insertedType = 'text'\n        }\n\n        // Validate the result\n        const validation = validateValue(portableText, portableTextFeatures, keyGenerator)\n\n        // Bail out if it's not valid\n        if (!validation.valid) {\n          const errorDescription = `Could not validate the resulting portable text to insert.\\n${validation.resolution?.description}\\nTry to insert as plain text (shift-paste) instead.`\n          change$.next({\n            type: 'error',\n            level: 'warning',\n            name: 'pasteError',\n            description: errorDescription,\n            data: validation,\n          })\n          debug('Invalid insert result', validation)\n          return false\n        }\n        debug(`Inserting ${insertedType} fragment at ${JSON.stringify(editor.selection)}`)\n        mixMarkDefs(editor, fragment)\n        editor.insertFragment(fragment)\n        editor.onChange()\n        change$.next({type: 'loading', isLoading: false})\n        return true\n      }\n      change$.next({type: 'loading', isLoading: false})\n      return false\n    }\n\n    editor.insertData = (data: DataTransfer) => {\n      if (!editor.insertPortableTextData(data)) {\n        editor.insertTextOrHTMLData(data)\n      }\n    }\n\n    editor.insertFragmentData = (data: DataTransfer): boolean => {\n      const fragment = data.getData('application/x-portable-text')\n      if (fragment) {\n        const parsed = JSON.parse(fragment) as Node[]\n        editor.insertFragment(parsed)\n        return true\n      }\n      return false\n    }\n\n    return editor\n  }\n}\n\nconst entityMap: Record<string, string> = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;',\n  '`': '&#x60;',\n  '=': '&#x3D;',\n}\nfunction escapeHtml(str: string) {\n  return String(str).replace(/[&<>\"'`=/]/g, (s: string) => entityMap[s])\n}\n\nfunction regenerateKeys(\n  editor: PortableTextSlateEditor,\n  fragment: Descendant[],\n  keyGenerator: () => string,\n  spanTypeName: string\n) {\n  return fragment.map((node) => {\n    const newNode: Element = {...(node as Element)}\n    // Ensure the copy has new keys\n    if (editor.isTextBlock(newNode)) {\n      newNode.markDefs = newNode.markDefs.map((def) => {\n        const oldKey = def._key\n        const newKey = keyGenerator()\n        if (Array.isArray(newNode.children)) {\n          newNode.children = newNode.children.map((child) =>\n            child._type === spanTypeName && Text.isText(child)\n              ? {\n                  ...child,\n                  marks:\n                    child.marks && child.marks.includes(oldKey)\n                      ? // eslint-disable-next-line max-nested-callbacks\n                        [...child.marks].filter((mark) => mark !== oldKey).concat(newKey)\n                      : child.marks,\n                }\n              : child\n          )\n        }\n        return {...def, _key: newKey}\n      })\n    }\n    const nodeWithNewKeys = {...newNode, _key: keyGenerator()} as Element\n    if (editor.isTextBlock(nodeWithNewKeys)) {\n      nodeWithNewKeys.children = nodeWithNewKeys.children.map((child) => ({\n        ...child,\n        _key: keyGenerator(),\n      }))\n    }\n    return nodeWithNewKeys\n  })\n}\n\nfunction mixMarkDefs(editor: PortableTextSlateEditor, fragment: any) {\n  if (!editor.selection) {\n    return false\n  }\n  const [focusBlock, focusPath] = Editor.node(editor, editor.selection, {depth: 1})\n  if (editor.isTextBlock(focusBlock) && editor.isTextBlock(fragment[0])) {\n    const {markDefs} = focusBlock\n    debug('Mixing markDefs of focusBlock and fragments[0] block', markDefs, fragment[0].markDefs)\n    // As the first block will be inserted into another block (potentially), mix those markDefs\n    Transforms.setNodes(\n      editor,\n      {\n        markDefs: [...fragment[0].markDefs, ...markDefs],\n      },\n      {at: focusPath, mode: 'lowest', voids: false}\n    )\n    return true\n  }\n  return false\n}\n","import {Editor} from 'slate'\nimport {PortableTextSlateEditor} from '../../types/editor'\nimport {createEditorOptions} from '../../types/options'\nimport {createOperationToPatches} from '../../utils/operationToPatches'\nimport {createWithMaxBlocks} from './createWithMaxBlocks'\nimport {createWithObjectKeys} from './createWithObjectKeys'\nimport {createWithPatches} from './createWithPatches'\nimport {createWithPortableTextBlockStyle} from './createWithPortableTextBlockStyle'\nimport {createWithPortableTextLists} from './createWithPortableTextLists'\nimport {createWithPortableTextMarkModel} from './createWithPortableTextMarkModel'\nimport {createWithPortableTextSelections} from './createWithPortableTextSelections'\nimport {createWithSchemaTypes} from './createWithSchemaTypes'\nimport {createWithUndoRedo} from './createWithUndoRedo'\nimport {createWithUtils} from './createWithUtils'\n\nexport {createWithEditableAPI} from './createWithEditableAPI'\nexport {createWithHotkeys} from './createWithHotKeys'\nexport {createWithInsertData} from './createWithInsertData'\nexport {createWithMaxBlocks} from './createWithMaxBlocks'\nexport {createWithObjectKeys} from './createWithObjectKeys'\nexport {createWithPatches} from './createWithPatches'\nexport {createWithPortableTextBlockStyle} from './createWithPortableTextBlockStyle'\nexport {createWithPortableTextLists} from './createWithPortableTextLists'\nexport {createWithPortableTextMarkModel} from './createWithPortableTextMarkModel'\nexport {createWithPortableTextSelections} from './createWithPortableTextSelections'\nexport {createWithSchemaTypes} from './createWithSchemaTypes'\nexport {createWithUndoRedo} from './createWithUndoRedo'\nexport {createWithUtils} from './createWithUtils'\n\nexport const withPlugins = <T extends Editor>(\n  editor: T,\n  options: createEditorOptions\n): PortableTextSlateEditor => {\n  const e = editor as T & PortableTextSlateEditor\n  e.maxBlocks = options.maxBlocks || -1\n  e.readOnly = options.readOnly || false\n  const {portableTextFeatures, keyGenerator, change$, incomingPatches$, syncValue} = options\n  const operationToPatches = createOperationToPatches(portableTextFeatures)\n  const withObjectKeys = createWithObjectKeys(portableTextFeatures, keyGenerator)\n  const withSchemaTypes = createWithSchemaTypes(portableTextFeatures)\n  const [withPatches, withPatchesCleanupFunction] = options.readOnly\n    ? []\n    : createWithPatches(\n        operationToPatches,\n        change$,\n        portableTextFeatures,\n        syncValue,\n        incomingPatches$\n      )\n  const withMaxBlocks = createWithMaxBlocks()\n  const withPortableTextLists = createWithPortableTextLists(portableTextFeatures)\n  const [withUndoRedo, withUndoRedoCleanupFunction] = options.readOnly\n    ? []\n    : createWithUndoRedo(incomingPatches$)\n  const withPortableTextMarkModel = createWithPortableTextMarkModel(\n    portableTextFeatures,\n    keyGenerator\n  )\n  const withPortableTextBlockStyle = createWithPortableTextBlockStyle(portableTextFeatures, change$)\n  const withUtils = createWithUtils({keyGenerator, portableTextFeatures})\n  const withPortableTextSelections = createWithPortableTextSelections(change$, portableTextFeatures)\n  e.destroy = () => {\n    if (withPatchesCleanupFunction) {\n      withPatchesCleanupFunction()\n    }\n    if (withUndoRedoCleanupFunction) {\n      withUndoRedoCleanupFunction()\n    }\n  }\n  const minimal = withSchemaTypes(\n    withObjectKeys(\n      withPortableTextMarkModel(withPortableTextBlockStyle(withUtils(withPortableTextLists(e))))\n    )\n  )\n  const full =\n    (withUndoRedo &&\n      withPatches &&\n      withSchemaTypes(\n        withObjectKeys(\n          withPortableTextMarkModel(\n            withPortableTextBlockStyle(\n              withPortableTextLists(\n                withUtils(withMaxBlocks(withUndoRedo(withPatches(withPortableTextSelections(e)))))\n              )\n            )\n          )\n        )\n      )) ||\n    e\n  // Ordering is important here, selection dealing last, data manipulation in the middle and core model stuff first.\n  return options.readOnly ? minimal : full\n}\n","import React from 'react'\nimport {ArraySchemaType, Path} from '@sanity/types'\nimport {Subscription, Subject, defer, of, EMPTY, Observable, OperatorFunction} from 'rxjs'\nimport {concatMap, share, switchMap, tap} from 'rxjs/operators'\nimport {randomKey} from '@sanity/util/content'\nimport {createEditor, Descendant} from 'slate'\nimport {debounce, isEqual, throttle} from 'lodash'\nimport {Slate} from '@sanity/slate-react'\nimport {compileType} from '../utils/schema'\nimport {getPortableTextFeatures} from '../utils/getPortableTextFeatures'\nimport {PortableTextBlock, PortableTextFeatures, PortableTextChild} from '../types/portableText'\nimport {RawType, Type} from '../types/schema'\nimport type {Patch} from '../types/patch'\nimport {\n  EditorSelection,\n  EditorChange,\n  EditorChanges,\n  EditableAPI,\n  InvalidValueResolution,\n  PatchObservable,\n  PortableTextSlateEditor,\n  EditableAPIDeleteOptions,\n} from '../types/editor'\nimport {validateValue} from '../utils/validateValue'\nimport {debugWithName} from '../utils/debug'\nimport {getValueOrInitialValue, isEqualToEmptyEditor, toSlateValue} from '../utils/values'\nimport {KEY_TO_SLATE_ELEMENT, KEY_TO_VALUE_ELEMENT} from '../utils/weakMaps'\nimport {PortableTextEditorContext} from './hooks/usePortableTextEditor'\nimport {PortableTextEditorSelectionContext} from './hooks/usePortableTextEditorSelection'\nimport {PortableTextEditorValueContext} from './hooks/usePortableTextEditorValue'\nimport {withPlugins} from './plugins'\n\n// Debounce time for flushing local patches (ms since user haven't produced a patch)\n// (lower time for tests to speed them up)\nexport const FLUSH_PATCHES_DEBOUNCE_MS = process.env.NODE_ENV === 'test' ? 50 : 1000\n\nexport const defaultKeyGenerator = () => randomKey(12)\n\nconst debug = debugWithName('component:PortableTextEditor')\n\n/**\n * Props for the PortableTextEditor component\n *\n * @public\n */\n/**\n * Props for the PortableTextEditor component\n *\n * @public\n */\nexport interface PortableTextEditorProps {\n  /**\n   * Function that gets called when the editor changes the value\n   */\n  onChange: (change: EditorChange) => void\n\n  /**\n   * (Compiled or raw JSON) schema type for the portable text field\n   */\n  type: ArraySchemaType<PortableTextBlock> | RawType\n\n  /**\n   * Maximum number of blocks to allow within the editor\n   */\n  maxBlocks?: number | string\n\n  /**\n   * Whether or not the editor should be in read-only mode\n   */\n  readOnly?: boolean\n\n  /**\n   * The current value of the portable text field\n   */\n  value?: PortableTextBlock[]\n\n  /**\n   * Function used to generate keys for array items (`_key`)\n   */\n  keyGenerator?: () => string\n\n  /**\n   * Observable of incoming patches - used for undo/redo operations,\n   * adjusting editor selections on concurrent editing and similar\n   */\n  incomingPatches$?: PatchObservable\n}\n\n/**\n * @internal\n */\n\nexport interface PortableTextEditorState {\n  invalidValueResolution: InvalidValueResolution | null\n  selection: EditorSelection | null\n  initialValue: Descendant[]\n}\nexport class PortableTextEditor extends React.Component<\n  PortableTextEditorProps,\n  PortableTextEditorState\n> {\n  public change$: EditorChanges = new Subject()\n  public keyGenerator: () => string\n  public maxBlocks: number | undefined\n  public portableTextFeatures: PortableTextFeatures\n  public readOnly: boolean\n  public slateInstance: PortableTextSlateEditor\n  public type: ArraySchemaType<PortableTextBlock>\n\n  private changeSubscription: Subscription\n  private editable?: EditableAPI\n  private incomingPatches$?: PatchObservable\n  private pendingPatches: Patch[] = []\n  private returnedPatches: Patch[] = []\n  hasPendingLocalPatches: React.MutableRefObject<boolean | null>\n\n  constructor(props: PortableTextEditorProps) {\n    super(props)\n\n    if (!props.type) {\n      throw new Error('PortableTextEditor: missing \"type\" property')\n    }\n\n    this.hasPendingLocalPatches = React.createRef()\n    this.hasPendingLocalPatches.current = false\n\n    this.state = {\n      invalidValueResolution: null,\n      selection: null,\n      initialValue: [], // Created in the constructor\n    }\n\n    // Test if we have a compiled schema type, if not, conveniently compile it\n    this.type = props.type.hasOwnProperty('jsonType') ? props.type : compileType(props.type)\n    // Indicate that we are loading\n    this.change$.next({type: 'loading', isLoading: true})\n\n    // Get the block types feature set (lookup table)\n    this.portableTextFeatures = getPortableTextFeatures(this.type)\n\n    // Setup keyGenerator (either from props, or default)\n    this.keyGenerator = props.keyGenerator || defaultKeyGenerator\n\n    // Setup processed incoming patches stream\n    if (props.incomingPatches$) {\n      // Buffer patches until we are no longer producing local patches\n      this.incomingPatches$ = props.incomingPatches$\n        .pipe(\n          tap(({patches}: {patches: Patch[]; snapshot: PortableTextBlock[] | undefined}) => {\n            // Reset hasPendingLocalPatches when local patches are returned\n            if (patches.some((p) => p.origin === 'local')) {\n              this.hasPendingLocalPatches.current = false\n            }\n          })\n        )\n        .pipe(\n          bufferUntil(() => !this.hasPendingLocalPatches.current),\n          concatMap((incoming) => {\n            return incoming\n          }),\n          share()\n        )\n    }\n\n    // Subscribe to editor events and set state for selection and pending patches\n    this.changeSubscription = this.change$.subscribe((next: EditorChange): void => {\n      const {onChange} = this.props\n      switch (next.type) {\n        case 'patch':\n          this.pendingPatches.push(next.patch)\n          if (this.props.incomingPatches$) {\n            this.hasPendingLocalPatches.current = true\n          }\n          this.flushDebounced()\n          onChange(next)\n          break\n        case 'selection':\n          onChange(next)\n          this.setState({selection: next.selection})\n          break\n        default:\n          onChange(next)\n      }\n    })\n\n    // Set maxBlocks and readOnly\n    this.maxBlocks =\n      typeof props.maxBlocks === 'undefined'\n        ? undefined\n        : parseInt(props.maxBlocks.toString(), 10) || undefined\n    this.readOnly = Boolean(props.readOnly) || false\n    // Validate the incoming value\n    if (props.value) {\n      const validation = validateValue(props.value, this.portableTextFeatures, this.keyGenerator)\n      if (props.value && !validation.valid) {\n        this.change$.next({type: 'loading', isLoading: false})\n        this.change$.next({\n          type: 'invalidValue',\n          resolution: validation.resolution,\n          value: props.value,\n        })\n        this.state = {...this.state, invalidValueResolution: validation.resolution}\n      }\n    }\n\n    // Create the slate instance\n    this.slateInstance = withPlugins(createEditor(), {\n      change$: this.change$,\n      incomingPatches$: this.incomingPatches$,\n      keyGenerator: this.keyGenerator,\n      maxBlocks: this.maxBlocks,\n      portableTextFeatures: this.portableTextFeatures,\n      readOnly: this.readOnly,\n      syncValue: this.syncValue,\n    })\n\n    this.state = {\n      ...this.state,\n      initialValue: toSlateValue(\n        getValueOrInitialValue(props.value, [this.slateInstance.createPlaceholderBlock()]),\n        {portableTextFeatures: this.portableTextFeatures},\n        KEY_TO_SLATE_ELEMENT.get(this.slateInstance)\n      ),\n    }\n    KEY_TO_VALUE_ELEMENT.set(this.slateInstance, {})\n    KEY_TO_SLATE_ELEMENT.set(this.slateInstance, {})\n  }\n\n  componentWillUnmount() {\n    this.flush()\n    this.changeSubscription.unsubscribe()\n    this.slateInstance.destroy()\n  }\n\n  componentDidUpdate(prevProps: PortableTextEditorProps) {\n    // Whenever readOnly toggles, recreate the editor's plugin chain\n    if (this.props.readOnly !== prevProps.readOnly) {\n      this.readOnly = Boolean(this.props.readOnly)\n      this.slateInstance = withPlugins(this.slateInstance, {\n        change$: this.change$,\n        incomingPatches$: this.incomingPatches$,\n        keyGenerator: this.keyGenerator,\n        maxBlocks: this.maxBlocks,\n        portableTextFeatures: this.portableTextFeatures,\n        readOnly: this.readOnly,\n        syncValue: this.syncValue,\n      })\n    }\n    // Update the maxBlocks prop\n    if (this.props.maxBlocks !== prevProps.maxBlocks) {\n      this.maxBlocks =\n        typeof this.props.maxBlocks === 'undefined'\n          ? undefined\n          : parseInt(this.props.maxBlocks.toString(), 10) || undefined\n      this.slateInstance.maxBlocks = this.maxBlocks\n    }\n    // Sync value from props, but not when we are responding to incoming patches\n    // (if this is the case, we sync the value after the incoming patches has been processed - see createWithPatches plugin)\n    if (\n      this.props.value !== prevProps.value &&\n      (!prevProps.value || this.readOnly || !this.props.incomingPatches$)\n    ) {\n      this.syncValue()\n    }\n  }\n\n  public setEditable = (editable: EditableAPI) => {\n    this.editable = {...this.editable, ...editable}\n    this.change$.next({type: 'value', value: this.props.value || undefined})\n    this.change$.next({type: 'ready'})\n  }\n\n  render() {\n    if (this.state.invalidValueResolution) {\n      return this.state.invalidValueResolution.description\n    }\n\n    return (\n      <PortableTextEditorContext.Provider value={this}>\n        <PortableTextEditorValueContext.Provider value={this.props.value}>\n          <PortableTextEditorSelectionContext.Provider value={this.state.selection}>\n            <Slate onChange={NOOP} editor={this.slateInstance} value={this.state.initialValue}>\n              {this.props.children}\n            </Slate>\n          </PortableTextEditorSelectionContext.Provider>\n        </PortableTextEditorValueContext.Provider>\n      </PortableTextEditorContext.Provider>\n    )\n  }\n\n  public syncValue: (userCallbackFn?: () => void) => void = (userCallbackFn) => {\n    const val = this.props.value\n    const callbackFn = () => {\n      debug('Updating slate instance')\n      this.slateInstance.onChange()\n      this.change$.next({type: 'value', value: val})\n      if (userCallbackFn) {\n        userCallbackFn()\n      }\n    }\n    if (this.hasPendingLocalPatches.current) {\n      debug('Not syncing value (has pending local patches)')\n      retrySync(() => this.syncValue(), callbackFn)\n      return\n    }\n    // If the  editor is empty and there is a new value, just set that value directly.\n    if (\n      isEqualToEmptyEditor(this.slateInstance.children, this.portableTextFeatures) &&\n      this.props.value\n    ) {\n      this.slateInstance.children = toSlateValue(\n        val,\n        {\n          portableTextFeatures: this.portableTextFeatures,\n        },\n        KEY_TO_SLATE_ELEMENT.get(this.slateInstance)\n      )\n      callbackFn()\n      return\n    }\n    // Test for diffs between our state value and the incoming value.\n    const isEqualToValue = !(val || []).some((blk, index) => {\n      const compareBlock = toSlateValue(\n        [blk],\n        {portableTextFeatures: this.portableTextFeatures},\n        KEY_TO_SLATE_ELEMENT.get(this.slateInstance)\n      )[0]\n      if (!isEqual(compareBlock, this.slateInstance.children[index])) {\n        return true\n      }\n      return false\n    })\n    if (isEqualToValue) {\n      debug('Not syncing value (value is equal)')\n      return\n    }\n    // Value is different - validate it.\n    debug('Validating')\n    const validation = validateValue(val, this.portableTextFeatures, this.keyGenerator)\n    if (val && !validation.valid) {\n      this.change$.next({\n        type: 'invalidValue',\n        resolution: validation.resolution,\n        value: val,\n      })\n      this.setState({invalidValueResolution: validation.resolution})\n    }\n    // Set the new value\n    debug('Replacing changed nodes')\n    if (this.props.value) {\n      const slateValueFromProps = toSlateValue(\n        val,\n        {\n          portableTextFeatures: this.portableTextFeatures,\n        },\n        KEY_TO_SLATE_ELEMENT.get(this.slateInstance)\n      )\n      this.slateInstance.children = slateValueFromProps\n    } else {\n      this.slateInstance.children = [this.slateInstance.createPlaceholderBlock()]\n    }\n    callbackFn()\n  }\n\n  private flush = () => {\n    const {onChange} = this.props\n    const finalPatches = [...this.pendingPatches]\n    if (finalPatches.length > 0) {\n      debug('Flushing', finalPatches)\n      finalPatches.forEach((p) => {\n        this.returnedPatches.push(p)\n      })\n      onChange({type: 'mutation', patches: finalPatches})\n      this.pendingPatches = []\n    }\n  }\n  private flushDebounced = debounce(this.flush, FLUSH_PATCHES_DEBOUNCE_MS, {\n    leading: false,\n    trailing: true,\n  })\n\n  // Static API methods\n  static activeAnnotations = (editor: PortableTextEditor): PortableTextBlock[] => {\n    return editor && editor.editable ? editor.editable.activeAnnotations() : []\n  }\n  static addAnnotation = (\n    editor: PortableTextEditor,\n    type: Type,\n    value?: {[prop: string]: unknown}\n  ): {spanPath: Path; markDefPath: Path} | undefined => editor.editable?.addAnnotation(type, value)\n  static blur = (editor: PortableTextEditor): void => {\n    debug('Host blurred')\n    editor.editable?.blur()\n  }\n  static delete = (\n    editor: PortableTextEditor,\n    selection: EditorSelection,\n    options?: EditableAPIDeleteOptions\n  ) => editor.editable?.delete(selection, options)\n  static findDOMNode = (\n    editor: PortableTextEditor,\n    element: PortableTextBlock | PortableTextChild\n  ) => {\n    // eslint-disable-next-line react/no-find-dom-node\n    return editor.editable?.findDOMNode(element)\n  }\n  static findByPath = (editor: PortableTextEditor, path: Path) => {\n    return editor.editable?.findByPath(path) || []\n  }\n  static focus = (editor: PortableTextEditor): void => {\n    debug('Host requesting focus')\n    editor.editable?.focus()\n  }\n  static focusBlock = (editor: PortableTextEditor) => {\n    return editor.editable?.focusBlock()\n  }\n  static focusChild = (editor: PortableTextEditor): PortableTextChild | undefined => {\n    return editor.editable?.focusChild()\n  }\n  static getPortableTextFeatures = (editor: PortableTextEditor) => {\n    return editor.portableTextFeatures\n  }\n  static getSelection = (editor: PortableTextEditor) => {\n    return editor.editable ? editor.editable.getSelection() : null\n  }\n  static getValue = (editor: PortableTextEditor) => {\n    return editor.editable?.getValue()\n  }\n  static hasBlockStyle = (editor: PortableTextEditor, blockStyle: string) => {\n    return editor.editable?.hasBlockStyle(blockStyle)\n  }\n  static hasListStyle = (editor: PortableTextEditor, listStyle: string) => {\n    return editor.editable?.hasListStyle(listStyle)\n  }\n  static isCollapsedSelection = (editor: PortableTextEditor) =>\n    editor.editable?.isCollapsedSelection()\n  static isExpandedSelection = (editor: PortableTextEditor) =>\n    editor.editable?.isExpandedSelection()\n  static isMarkActive = (editor: PortableTextEditor, mark: string) =>\n    editor.editable?.isMarkActive(mark)\n  static insertChild = (\n    editor: PortableTextEditor,\n    type: Type,\n    value?: {[prop: string]: unknown}\n  ): Path | undefined => {\n    debug(`Host inserting child`)\n    return editor.editable?.insertChild(type, value)\n  }\n  static insertBlock = (\n    editor: PortableTextEditor,\n    type: Type,\n    value?: {[prop: string]: unknown}\n  ): Path | undefined => {\n    return editor.editable?.insertBlock(type, value)\n  }\n  static isVoid = (editor: PortableTextEditor, element: PortableTextBlock | PortableTextChild) => {\n    return editor.editable?.isVoid(element)\n  }\n  static isObjectPath = (editor: PortableTextEditor, path: Path): boolean => {\n    if (!path || !Array.isArray(path)) return false\n    const isChildObjectEditPath = path.length > 3 && path[1] === 'children'\n    const isBlockObjectEditPath = path.length > 1 && path[1] !== 'children'\n    return isBlockObjectEditPath || isChildObjectEditPath\n  }\n  static marks = (editor: PortableTextEditor) => {\n    return editor.editable?.marks()\n  }\n  static select = (editor: PortableTextEditor, selection: EditorSelection | null) => {\n    debug(`Host setting selection`, selection)\n    editor.editable?.select(selection)\n  }\n  static removeAnnotation = (editor: PortableTextEditor, type: Type) =>\n    editor.editable?.removeAnnotation(type)\n  static toggleBlockStyle = (editor: PortableTextEditor, blockStyle: string) => {\n    debug(`Host is toggling block style`)\n    return editor.editable?.toggleBlockStyle(blockStyle)\n  }\n  static toggleList = (editor: PortableTextEditor, listStyle: string): void => {\n    return editor.editable?.toggleList(listStyle)\n  }\n  static toggleMark = (editor: PortableTextEditor, mark: string): void => {\n    debug(`Host toggling mark`, mark)\n    editor.editable?.toggleMark(mark)\n  }\n}\n\nconst retrySync = throttle((syncFn, callbackFn) => syncFn(callbackFn), 100)\n\nfunction bufferUntil<T>(emitWhen: (currentBuffer: T[]) => boolean): OperatorFunction<T, T[]> {\n  return (source: Observable<T>) =>\n    defer(() => {\n      let buffer: T[] = [] // custom buffer\n      return source.pipe(\n        tap((v) => buffer.push(v)), // add values to buffer\n        switchMap(() => (emitWhen(buffer) ? of(buffer) : EMPTY)), // emit the buffer when the condition is met\n        tap(() => (buffer = [])) // clear the buffer\n      )\n    })\n}\n\nconst NOOP = () => undefined\n","import {isEqual} from 'lodash'\nimport type {Patch} from '../types/patch'\n\n/**\n * Try to compact a set of patches\n *\n */\nexport function compactPatches(patches: Patch[]) {\n  // If the last patch is unsetting everything, just do that\n  const lastPatch = patches.slice(-1)[0]\n  if (lastPatch && lastPatch.type === 'unset' && lastPatch.path.length === 0) {\n    return [lastPatch]\n  }\n  let finalPatches = patches\n  // Run through the patches and remove any redundant ones.\n  finalPatches = finalPatches.filter((patch, index) => {\n    if (!patch) {\n      return false\n    }\n    const nextPatch = finalPatches[index + 1]\n    if (\n      nextPatch &&\n      nextPatch.type === 'set' &&\n      patch.type === 'set' &&\n      isEqual(patch.path, nextPatch.path)\n    ) {\n      return false\n    }\n    return true\n  })\n  if (finalPatches.length !== patches.length) {\n    return finalPatches\n  }\n  return patches\n}\n","import {isEqual} from 'lodash'\nimport {PortableTextBlock} from '../types/portableText'\nimport {EditorSelection, EditorSelectionPoint} from '../types/editor'\n\nexport function normalizePoint(\n  point: EditorSelectionPoint,\n  value: PortableTextBlock[]\n): EditorSelectionPoint | null {\n  if (!point || !value) {\n    return null\n  }\n  const newPath: any = []\n  let newOffset: number = point.offset || 0\n  const blockKey =\n    typeof point.path[0] === 'object' && '_key' in point.path[0] && point.path[0]._key\n  const childKey =\n    typeof point.path[2] === 'object' && '_key' in point.path[2] && point.path[2]._key\n  const block: PortableTextBlock | undefined = value.find((blk) => blk._key === blockKey)\n  if (block) {\n    newPath.push({_key: block._key})\n  } else {\n    return null\n  }\n  if (block && point.path[1] === 'children') {\n    if (!block.children || block.children.length === 0) {\n      return null\n    }\n    const child = block.children.find((cld: any) => cld._key === childKey)\n    if (child) {\n      newPath.push('children')\n      newPath.push({_key: child._key})\n      newOffset =\n        child.text && child.text.length >= point.offset\n          ? point.offset\n          : (child.text && child.text.length) || 0\n    } else {\n      return null\n    }\n  }\n  return {path: newPath, offset: newOffset}\n}\n\nexport function normalizeSelection(\n  selection: EditorSelection,\n  value: PortableTextBlock[] | undefined\n): EditorSelection | null {\n  if (!selection || !value || value.length === 0) {\n    return null\n  }\n  let newAnchor: EditorSelectionPoint | null = null\n  let newFocus: EditorSelectionPoint | null = null\n  const {anchor, focus} = selection\n  if (anchor && value.find((blk) => isEqual({_key: blk._key}, anchor.path[0]))) {\n    newAnchor = normalizePoint(anchor, value)\n  }\n  if (focus && value.find((blk) => isEqual({_key: blk._key}, focus.path[0]))) {\n    newFocus = normalizePoint(focus, value)\n  }\n  if (newAnchor && newFocus) {\n    return {anchor: newAnchor, focus: newFocus}\n  }\n  return null\n}\n","import React, {useCallback} from 'react'\nimport {PortableTextBlock} from '../../types/portableText'\n\ntype Props = {\n  annotation: PortableTextBlock\n  children: React.ReactNode\n}\nexport function DefaultAnnotation(props: Props) {\n  // eslint-disable-next-line no-alert\n  const handleClick = useCallback(() => alert(JSON.stringify(props.annotation)), [props.annotation])\n  return (\n    <span style={{color: 'blue'}} onClick={handleClick}>\n      {props.children}\n    </span>\n  )\n}\n","import React, {ReactElement, useRef, useMemo, useCallback} from 'react'\nimport {Element as SlateElement, Transforms, Editor} from 'slate'\nimport {ReactEditor, useSlateStatic} from '@sanity/slate-react'\nimport {debugWithName} from '../utils/debug'\nimport {IS_DRAGGING, IS_DRAGGING_ELEMENT_RANGE, IS_DRAGGING_CHILD_ELEMENT} from '../utils/weakMaps'\n\nconst debug = debugWithName('components:DraggableChild')\ndeclare global {\n  interface Document {\n    // TypeScript removed this function from the default types (2021-08-26)\n    caretPositionFromPoint?(x: number, y: number): {offsetNode: Node; offset: number}\n  }\n}\n\ntype ElementProps = {\n  children: ReactElement\n  element: SlateElement\n  readOnly: boolean\n}\n\nexport const DraggableChild = ({children, element, readOnly}: ElementProps) => {\n  const editor = useSlateStatic()\n  const dragGhostRef: React.MutableRefObject<undefined | HTMLElement> = useRef()\n  const isVoid = useMemo(() => Editor.isVoid(editor, element), [editor, element])\n\n  // Note: this is called not for the dragging block, but for the targets when the block is dragged over them\n  const handleDragOver = useCallback(\n    (event: React.DragEvent<HTMLDivElement>) => {\n      const isMyDragOver = IS_DRAGGING_CHILD_ELEMENT.get(editor)\n      if (!isMyDragOver) {\n        return\n      }\n      debug('handle drag over')\n      event.preventDefault() // Needed to get the dropEffect showing\n      event.dataTransfer.dropEffect = 'move'\n      // Find the range where the drop happened\n      const range = ReactEditor.findEventRange(editor, event)\n      if (range) {\n        IS_DRAGGING_ELEMENT_RANGE.set(editor, range)\n        Transforms.select(editor, range)\n      }\n    },\n    [editor]\n  )\n\n  // Note: this is called for the dragging child\n  const handleDragStart = useCallback(\n    (event: React.DragEvent<HTMLDivElement>) => {\n      debug('Drag start')\n      IS_DRAGGING.set(editor, true)\n      IS_DRAGGING_CHILD_ELEMENT.set(editor, element)\n      if (isVoid) {\n        event.dataTransfer.effectAllowed = 'move'\n        // Specify dragImage so that single elements in the preview will not be the drag image,\n        // but always the whole block preview itself.\n        // Also clone it so that it will not be visually clipped by scroll-containers etc.\n        const elm = event.currentTarget\n        if (elm instanceof HTMLElement) {\n          const dragGhost = elm.cloneNode(true) as HTMLElement\n          dragGhostRef.current = dragGhost\n          dragGhost.style.width = `${elm.clientWidth}px`\n          dragGhost.style.height = `${elm.clientHeight}px`\n          dragGhost.style.position = 'absolute'\n          dragGhost.style.top = '-99999px'\n          dragGhost.style.left = '-99999px'\n          if (document.body) {\n            document.body.appendChild(dragGhost)\n            const rect = elm.getBoundingClientRect()\n            const x = event.clientX - rect.left\n            const y = event.clientY - rect.top\n            dragGhost.style.width = `${rect.width}px`\n            dragGhost.style.height = `${rect.height}px`\n            event.dataTransfer.setDragImage(dragGhost, x, y)\n          }\n        }\n      }\n    },\n    [editor, element, isVoid]\n  )\n\n  if (readOnly) {\n    return children\n  }\n\n  return (\n    <span draggable={isVoid} onDragStart={handleDragStart} onDragOver={handleDragOver}>\n      {children}\n    </span>\n  )\n}\n","import React, {ReactElement, SyntheticEvent, useCallback} from 'react'\nimport {Element, Range, Text} from 'slate'\nimport {useSelected, useSlateStatic} from '@sanity/slate-react'\nimport {uniq} from 'lodash'\nimport {PortableTextBlock, PortableTextFeatures, TextBlock} from '../types/portableText'\nimport {\n  RenderChildFunction,\n  RenderDecoratorFunction,\n  RenderAnnotationFunction,\n} from '../types/editor'\nimport {debugWithName} from '../utils/debug'\nimport {DefaultAnnotation} from './nodes/DefaultAnnotation'\nimport {DraggableChild} from './DraggableChild'\nimport {ElementAttributes} from './Element'\n\nconst debug = debugWithName('components:Leaf')\nconst debugRenders = false\n\ntype LeafProps = {\n  attributes: ElementAttributes\n  children: ReactElement\n  keyGenerator: () => string\n  leaf: Element\n  portableTextFeatures: PortableTextFeatures\n  renderAnnotation?: RenderAnnotationFunction\n  renderChild?: RenderChildFunction\n  renderDecorator?: RenderDecoratorFunction\n  readOnly: boolean\n}\n\nexport const Leaf = (props: LeafProps) => {\n  const editor = useSlateStatic()\n  const selected = useSelected()\n  const {attributes, children, leaf, portableTextFeatures, keyGenerator, renderChild, readOnly} =\n    props\n  const spanRef = React.useRef(null)\n  let returnedChildren = children\n  const focused = (selected && editor.selection && Range.isCollapsed(editor.selection)) || false\n  const handleMouseDown = useCallback(\n    (event: SyntheticEvent) => {\n      // Slate will deselect this when it is already selected and clicked again, so prevent that. 2020/05/04\n      if (focused) {\n        event.stopPropagation()\n        event.preventDefault()\n      }\n    },\n    [focused]\n  )\n  if (Text.isText(leaf) && leaf._type === portableTextFeatures.types.span.name) {\n    const blockElement = children.props.parent as TextBlock | undefined\n    const path = blockElement ? [{_key: blockElement._key}, 'children', {_key: leaf._key}] : []\n    const decoratorValues = portableTextFeatures.decorators.map((dec) => dec.value)\n    const marks: string[] = uniq(\n      (Array.isArray(leaf.marks) ? leaf.marks : []).filter((mark) => decoratorValues.includes(mark))\n    )\n    marks.forEach((mark) => {\n      const type = portableTextFeatures.decorators.find((dec) => dec.value === mark)\n      if (type) {\n        // TODO: look into this API!\n        if (type?.blockEditor?.render) {\n          const CustomComponent = type?.blockEditor?.render\n          returnedChildren = <CustomComponent mark={mark}>{returnedChildren}</CustomComponent>\n        }\n        if (props.renderDecorator) {\n          returnedChildren = props.renderDecorator(\n            mark,\n            type,\n            {focused, selected, path},\n            () => <>{returnedChildren}</>,\n            spanRef\n          )\n        }\n      }\n    })\n    const annotationMarks = Array.isArray(leaf.marks) ? leaf.marks : []\n    const annotations = annotationMarks\n      .map(\n        (mark) =>\n          !decoratorValues.includes(mark) &&\n          blockElement &&\n          blockElement.markDefs &&\n          (blockElement.markDefs.find((def) => def._key === mark) as PortableTextBlock | undefined)\n      )\n      .filter(Boolean) as PortableTextBlock[]\n\n    if (annotations.length > 0) {\n      annotations.forEach((annotation) => {\n        const type = portableTextFeatures.types.annotations.find((t) => t.name === annotation._type)\n        // TODO: look into this API!\n        const CustomComponent = (type as any)?.blockEditor?.render\n        const defaultRender = (): JSX.Element =>\n          // TODO: annotation should be an own prop here, keeping for backward compability (2020/05/18).\n          CustomComponent ? (\n            <CustomComponent {...annotation} attributes={attributes}>\n              {returnedChildren}\n            </CustomComponent>\n          ) : (\n            <>{returnedChildren}</>\n          )\n\n        if (type) {\n          if (props.renderAnnotation) {\n            returnedChildren = (\n              <span ref={spanRef} key={keyGenerator()}>\n                {props.renderAnnotation(\n                  annotation,\n                  type,\n                  {focused, selected, path, annotations},\n                  defaultRender,\n                  spanRef\n                )}\n              </span>\n            )\n          } else {\n            returnedChildren = (\n              <DefaultAnnotation annotation={annotation}>\n                <span ref={spanRef} key={keyGenerator()} onMouseDown={handleMouseDown}>\n                  {defaultRender()}\n                </span>\n              </DefaultAnnotation>\n            )\n          }\n        }\n      })\n    }\n    if (blockElement && renderChild) {\n      const child = blockElement.children.find((_child) => _child._key === leaf._key) // Ensure object equality\n      if (child) {\n        returnedChildren = renderChild(\n          child,\n          portableTextFeatures.types.span,\n          {focused, selected, path, annotations},\n          () => returnedChildren,\n          spanRef\n        )\n      }\n    }\n  }\n  if (debugRenders) {\n    debug(`Render ${leaf._key} (span)`)\n  }\n  const key = leaf._key || keyGenerator()\n\n  return (\n    <span key={key} {...attributes} ref={spanRef}>\n      <DraggableChild element={leaf} readOnly={readOnly}>\n        {returnedChildren}\n      </DraggableChild>\n    </span>\n  )\n}\n","import styled from 'styled-components'\n\nexport const DefaultBlockObject = styled.div`\n  user-select: none;\n  border: ${(props: {selected: boolean}) => {\n    if (props.selected) {\n      return '1px solid blue'\n    }\n    return '1px solid transparent'\n  }};\n`\n\nexport const DefaultInlineObject = styled.span`\n  background: #999;\n  border: ${(props: {selected: boolean}) => {\n    if (props.selected) {\n      return '1px solid blue'\n    }\n    return '1px solid transparent'\n  }};\n`\n\ntype ListItemProps = {listLevel: number; listStyle: string}\n\nexport const DefaultListItem = styled.div<ListItemProps>`\n  &.pt-list-item {\n    width: fit-content;\n    position: relative;\n    display: block;\n\n    /* Important 'transform' in order to force refresh the ::before and ::after rules\n      in Webkit: https://stackoverflow.com/a/21947628/831480\n    */\n    transform: translateZ(0);\n    margin-left: ${(props: ListItemProps) => getLeftPositionForListLevel(props.listLevel)};\n  }\n  &.pt-list-item > .pt-list-item-inner {\n    display: flex;\n    margin: 0;\n    padding: 0;\n    &:before {\n      justify-content: flex-start;\n      vertical-align: top;\n    }\n  }\n  &.pt-list-item-bullet > .pt-list-item-inner:before {\n      content: '${(props: ListItemProps) =>\n        getContentForListLevelAndStyle(props.listLevel, props.listStyle)}';\n      font-size: 0.4375rem; /* 7px */\n      line-height: 1.5rem; /* Same as body text */\n      /* Optical alignment */\n      position: relative;\n    }\n  }\n  &.pt-list-item-bullet > .pt-list-item-inner {\n    &:before {\n      min-width: 1.5rem; /* Make sure space between bullet and text never shrinks */\n    }\n  }\n  &.pt-list-item-number {\n    counter-increment: ${(props: {listLevel: number}) =>\n      getCounterIncrementForListLevel(props.listLevel)};\n    counter-reset: ${(props: {listLevel: number}) => getCounterResetForListLevel(props.listLevel)};\n  }\n  & + :not(.pt-list-item-number) {\n    counter-reset: listItemNumber;\n  }\n  &.pt-list-item-number > .pt-list-item-inner:before {\n    content: ${(props) => getCounterContentForListLevel(props.listLevel)};\n    min-width: 1.5rem; /* Make sure space between number and text never shrinks */\n    /* Optical alignment */\n    position: relative;\n    top: 1px;\n  }\n`\n\nexport const DefaultListItemInner = styled.div``\n\nfunction getLeftPositionForListLevel(level: number) {\n  switch (Number(level)) {\n    case 1:\n      return '1.5em'\n    case 2:\n      return '3em'\n    case 3:\n      return '4.5em'\n    case 4:\n      return '6em'\n    case 5:\n      return '7.5em'\n    case 6:\n      return '9em'\n    case 7:\n      return '10.5em'\n    case 8:\n      return '12em'\n    case 9:\n      return '13.5em'\n    case 10:\n      return '15em'\n    default:\n      return '0em'\n  }\n}\n\nconst bullets = ['●', '○', '■']\n\nfunction getContentForListLevelAndStyle(level: number, style: string) {\n  const normalizedLevel = (level - 1) % 3\n  if (style === 'bullet') {\n    return bullets[normalizedLevel]\n  }\n  return '*'\n}\n\nfunction getCounterIncrementForListLevel(level: number) {\n  switch (level) {\n    case 1:\n      return 'listItemNumber'\n    case 2:\n      return 'listItemAlpha'\n    case 3:\n      return 'listItemRoman'\n    case 4:\n      return 'listItemNumberNext'\n    case 5:\n      return 'listItemLetterNext'\n    case 6:\n      return 'listItemRomanNext'\n    case 7:\n      return 'listItemNumberNextNext'\n    case 8:\n      return 'listItemAlphaNextNext'\n    case 9:\n      return 'listItemRomanNextNext'\n    default:\n      return 'listItemNumberNextNextNext'\n  }\n}\n\nfunction getCounterResetForListLevel(level: number) {\n  switch (level) {\n    case 1:\n      return 'listItemAlpha'\n    case 2:\n      return 'listItemRoman'\n    case 3:\n      return 'listItemNumberNext'\n    case 4:\n      return 'listItemLetterNext'\n    case 5:\n      return 'listItemRomanNext'\n    case 6:\n      return 'listItemNumberNextNext'\n    case 7:\n      return 'listItemAlphaNextNext'\n    case 8:\n      return 'listItemRomanNextNext'\n    case 9:\n      return 'listItemNumberNextNextNext'\n    default:\n      return 'listItemNumberNextNextNext'\n  }\n}\n\nfunction getCounterContentForListLevel(level: number) {\n  switch (level) {\n    case 1:\n      return `counter(listItemNumber) '. '`\n    case 2:\n      return `counter(listItemAlpha, lower-alpha) '. '`\n    case 3:\n      return `counter(listItemRoman, lower-roman) '. '`\n    case 4:\n      return `counter(listItemNumberNext) '. '`\n    case 5:\n      return `counter(listItemLetterNext, lower-alpha) '. '`\n    case 6:\n      return `counter(listItemRomanNext, lower-roman) '. '`\n    case 7:\n      return `counter(listItemNumberNextNext) '. '`\n    case 8:\n      return `counter(listItemAlphaNextNext, lower-alpha) '. '`\n    case 9:\n      return `counter(listItemRomanNextNext, lower-roman) '. '`\n    default:\n      return `counter(listItemNumberNextNextNext) '. '`\n  }\n}\n","import React from 'react'\nimport {PortableTextBlock, PortableTextFeatures} from '../../types/portableText'\nimport {DefaultListItem, DefaultListItemInner} from '.'\n\ntype Props = {\n  children: JSX.Element\n  block: PortableTextBlock\n  portableTextFeatures: PortableTextFeatures\n}\nexport default function TextBlock(props: Props) {\n  const {portableTextFeatures, children, block} = props\n  const style = block.style || portableTextFeatures.styles[0].value\n  // Should we render a custom style?\n  // TODO: Look into this API. This is legacy support for older Sanity Studio versions via the type\n  let CustomStyle\n  const blockStyle =\n    portableTextFeatures && style\n      ? portableTextFeatures.styles.find((item) => item.value === style)\n      : undefined\n  if (blockStyle) {\n    CustomStyle = blockStyle.blockEditor && blockStyle.blockEditor.render\n  }\n\n  let renderedBlock = children\n  if ('listItem' in block && block.listItem) {\n    renderedBlock = (\n      <DefaultListItem\n        listStyle={block.listItem || portableTextFeatures.lists[0].value}\n        listLevel={block.level || 0}\n      >\n        <DefaultListItemInner>{renderedBlock}</DefaultListItemInner>\n      </DefaultListItem>\n    )\n  }\n  return (\n    <>\n      {!CustomStyle && renderedBlock}\n      {CustomStyle && <CustomStyle style={style}>{renderedBlock}</CustomStyle>}\n    </>\n  )\n}\n","import React from 'react'\nimport {PortableTextBlock, PortableTextChild} from '../../types/portableText'\n\ntype Props = {\n  value: PortableTextBlock | PortableTextChild\n}\n\nconst DefaultObject = (props: Props): JSX.Element => {\n  return <pre>{JSON.stringify(props.value, null, 2)}</pre>\n}\n\nexport default DefaultObject\n","import React, {useState, useRef, useMemo, useCallback, DragEvent, useEffect} from 'react'\nimport {Element as SlateElement, Transforms, Path, Editor} from 'slate'\nimport {ReactEditor, useSlateStatic} from '@sanity/slate-react'\nimport {debugWithName} from '../utils/debug'\nimport {\n  IS_DRAGGING_CHILD_ELEMENT,\n  IS_DRAGGING_ELEMENT_TARGET,\n  IS_DRAGGING_BLOCK_ELEMENT,\n  IS_DRAGGING,\n  IS_DRAGGING_BLOCK_TARGET_POSITION,\n} from '../utils/weakMaps'\n\nconst debug = debugWithName('components:DraggableBlock')\nconst debugRenders = false\n\ntype ElementProps = {\n  children: React.ReactNode\n  element: SlateElement\n  readOnly: boolean\n  blockRef: React.MutableRefObject<HTMLDivElement | null>\n}\n\nexport const DraggableBlock = ({children, element, readOnly, blockRef}: ElementProps) => {\n  const editor = useSlateStatic()\n  const dragGhostRef: React.MutableRefObject<undefined | HTMLElement> = useRef()\n  const [isDragOver, setIsDragOver] = useState(false)\n  const isVoid = useMemo(() => Editor.isVoid(editor, element), [editor, element])\n  const isInline = useMemo(() => Editor.isInline(editor, element), [editor, element])\n\n  const [blockElement, setBlockElement] = useState<HTMLElement | null>(null)\n\n  useEffect(\n    () => setBlockElement(blockRef ? blockRef.current : ReactEditor.toDOMNode(editor, element)),\n    [editor, element, blockRef]\n  )\n\n  // Note: this is called not for the dragging block, but for the targets when the block is dragged over them\n  const handleDragOver = useCallback(\n    (event: DragEvent) => {\n      const isMyDragOver = IS_DRAGGING_BLOCK_ELEMENT.get(editor)\n      // debug('Drag over', blockElement)\n      if (!isMyDragOver || !blockElement) {\n        return\n      }\n      event.preventDefault()\n      event.dataTransfer.dropEffect = 'move'\n      IS_DRAGGING_ELEMENT_TARGET.set(editor, element)\n      const elementRect = blockElement.getBoundingClientRect()\n      const offset = elementRect.top\n      const height = elementRect.height\n      const Y = event.pageY\n      const loc = Math.abs(offset - Y)\n      let position: 'top' | 'bottom' = 'bottom'\n      if (element === editor.children[0]) {\n        position = 'top'\n      } else if (loc < height / 2) {\n        position = 'top'\n        IS_DRAGGING_BLOCK_TARGET_POSITION.set(editor, position)\n      } else {\n        position = 'bottom'\n        IS_DRAGGING_BLOCK_TARGET_POSITION.set(editor, position)\n      }\n      if (isMyDragOver === element) {\n        event.dataTransfer.dropEffect = 'none'\n        return\n      }\n      setIsDragOver(true)\n    },\n    [blockElement, editor, element]\n  )\n\n  // Note: this is called not for the dragging block, but for the targets when the block is dragged over them\n  const handleDragLeave = useCallback(() => {\n    setIsDragOver(false)\n  }, [])\n\n  // Note: this is called for the dragging block\n  const handleDragEnd = useCallback(\n    (event: DragEvent) => {\n      const targetBlock = IS_DRAGGING_ELEMENT_TARGET.get(editor)\n      if (targetBlock) {\n        IS_DRAGGING.set(editor, false)\n        event.preventDefault()\n        event.stopPropagation()\n        IS_DRAGGING_ELEMENT_TARGET.delete(editor)\n        if (dragGhostRef.current) {\n          debug('Removing drag ghost')\n          document.body.removeChild(dragGhostRef.current)\n        }\n        const dragPosition = IS_DRAGGING_BLOCK_TARGET_POSITION.get(editor)\n        IS_DRAGGING_BLOCK_TARGET_POSITION.delete(editor)\n        let targetPath = ReactEditor.findPath(editor, targetBlock)\n        const myPath = ReactEditor.findPath(editor, element)\n        const isBefore = Path.isBefore(myPath, targetPath)\n        if (dragPosition === 'bottom' && !isBefore) {\n          // If it is already at the bottom, don't do anything.\n          if (targetPath[0] >= editor.children.length - 1) {\n            debug('target is already at the bottom, not moving')\n            return\n          }\n          const originalPath = targetPath\n          targetPath = Path.next(targetPath)\n          debug(\n            `Adjusting targetPath from ${JSON.stringify(originalPath)} to ${JSON.stringify(\n              targetPath\n            )}`\n          )\n        }\n        if (dragPosition === 'top' && isBefore && targetPath[0] !== editor.children.length - 1) {\n          const originalPath = targetPath\n          targetPath = Path.previous(targetPath)\n          debug(\n            `Adjusting targetPath from ${JSON.stringify(originalPath)} to ${JSON.stringify(\n              targetPath\n            )}`\n          )\n        }\n        if (Path.equals(targetPath, myPath)) {\n          event.preventDefault()\n          debug('targetPath and myPath is the same, not moving')\n          return\n        }\n        debug(\n          `Moving element ${element._key} from path ${JSON.stringify(myPath)} to ${JSON.stringify(\n            targetPath\n          )} (${dragPosition})`\n        )\n        Transforms.moveNodes(editor, {at: myPath, to: targetPath})\n        editor.onChange()\n        return\n      }\n      debug('No target element, not doing anything')\n    },\n    [editor, element]\n  )\n  // Note: this is called not for the dragging block, but for the drop target\n  const handleDrop = useCallback(\n    (event: DragEvent) => {\n      if (IS_DRAGGING_BLOCK_ELEMENT.get(editor)) {\n        debug('On drop (prevented)', element)\n        event.preventDefault()\n        event.stopPropagation()\n        setIsDragOver(false)\n      }\n    },\n    [editor, element]\n  )\n  // Note: this is called for the dragging block\n  const handleDrag = useCallback(\n    (event: DragEvent) => {\n      if (!isVoid) {\n        IS_DRAGGING_BLOCK_ELEMENT.delete(editor)\n        return\n      }\n      IS_DRAGGING.set(editor, true)\n      IS_DRAGGING_BLOCK_ELEMENT.set(editor, element)\n      event.stopPropagation() // Stop propagation so that leafs don't get this and take focus/selection!\n\n      const target = event.target\n\n      if (target instanceof HTMLElement) {\n        target.style.opacity = '1'\n      }\n    },\n    [editor, element, isVoid]\n  )\n\n  // Note: this is called for the dragging block\n  const handleDragStart = useCallback(\n    (event: DragEvent) => {\n      if (!isVoid || isInline) {\n        debug('Not dragging block')\n        IS_DRAGGING_BLOCK_ELEMENT.delete(editor)\n        IS_DRAGGING.set(editor, false)\n        return\n      }\n      debug('Drag start')\n      IS_DRAGGING.set(editor, true)\n      if (event.dataTransfer) {\n        event.dataTransfer.setData('application/portable-text', 'something')\n        event.dataTransfer.effectAllowed = 'move'\n      }\n      // Clone blockElement so that it will not be visually clipped by scroll-containers etc.\n      // The application that uses the portable-text-editor may indicate the element used as\n      // drag ghost by adding a truthy data attribute 'data-pt-drag-ghost-element' to a HTML element.\n      if (blockElement && blockElement instanceof HTMLElement) {\n        let dragGhost = blockElement.cloneNode(true) as HTMLElement\n        const customGhost = dragGhost.querySelector('[data-pt-drag-ghost-element]')\n        if (customGhost) {\n          dragGhost = customGhost as HTMLElement\n        }\n\n        // Set the `data-dragged` attribute so the consumer can style the element while it’s dragged\n        dragGhost.setAttribute('data-dragged', '')\n\n        if (document.body) {\n          dragGhostRef.current = dragGhost\n          dragGhost.style.position = 'absolute'\n          dragGhost.style.left = '-99999px'\n          dragGhost.style.boxSizing = 'border-box'\n          document.body.appendChild(dragGhost)\n          const rect = blockElement.getBoundingClientRect()\n          const x = event.clientX - rect.left\n          const y = event.clientY - rect.top\n          dragGhost.style.width = `${rect.width}px`\n          dragGhost.style.height = `${rect.height}px`\n          event.dataTransfer.setDragImage(dragGhost, x, y)\n        }\n      }\n      handleDrag(event)\n    },\n    [blockElement, editor, handleDrag, isInline, isVoid]\n  )\n\n  const isDraggingOverFirstBlock =\n    isDragOver && editor.children[0] === IS_DRAGGING_ELEMENT_TARGET.get(editor)\n  const isDraggingOverLastBlock =\n    isDragOver &&\n    editor.children[editor.children.length - 1] === IS_DRAGGING_ELEMENT_TARGET.get(editor)\n  const dragPosition = IS_DRAGGING_BLOCK_TARGET_POSITION.get(editor)\n\n  const isDraggingOverTop =\n    isDraggingOverFirstBlock ||\n    (isDragOver && !isDraggingOverFirstBlock && !isDraggingOverLastBlock && dragPosition === 'top')\n  const isDraggingOverBottom =\n    isDraggingOverLastBlock ||\n    (isDragOver &&\n      !isDraggingOverFirstBlock &&\n      !isDraggingOverLastBlock &&\n      dragPosition === 'bottom')\n\n  const dropIndicator = useMemo(\n    () => (\n      <div\n        className=\"pt-drop-indicator\"\n        style={{\n          position: 'absolute',\n          width: '100%',\n          height: 1,\n          borderBottom: '1px solid currentColor',\n          zIndex: 5,\n        }}\n      />\n    ),\n    []\n  )\n\n  if (readOnly) {\n    return <>{children}</>\n  }\n\n  if (debugRenders) {\n    debug('render')\n  }\n\n  return (\n    <div\n      draggable={isVoid}\n      onDragStart={handleDragStart}\n      onDrag={handleDrag}\n      onDragOver={handleDragOver}\n      onDragLeave={handleDragLeave}\n      onDragEnd={handleDragEnd}\n      onDrop={handleDrop}\n    >\n      {isDraggingOverTop && dropIndicator}\n      {children}\n      {isDraggingOverBottom && dropIndicator}\n    </div>\n  )\n}\n","import React, {ReactElement, FunctionComponent, useRef} from 'react'\nimport {Element as SlateElement, Editor, Range} from 'slate'\nimport {Path} from '@sanity/types'\nimport {useSelected, useSlateStatic, ReactEditor} from '@sanity/slate-react'\nimport {PortableTextBlock, PortableTextFeatures} from '../types/portableText'\nimport {RenderAttributes, RenderBlockFunction, RenderChildFunction} from '../types/editor'\nimport {fromSlateValue} from '../utils/values'\nimport {debugWithName} from '../utils/debug'\nimport {KEY_TO_VALUE_ELEMENT} from '../utils/weakMaps'\nimport TextBlock from './nodes/TextBlock'\nimport ObjectNode from './nodes/DefaultObject'\nimport {DefaultBlockObject} from './nodes/index'\nimport {DraggableBlock} from './DraggableBlock'\nimport {DraggableChild} from './DraggableChild'\n\nconst debug = debugWithName('components:Element')\nconst debugRenders = false\n\nexport interface ElementAttributes {\n  'data-slate-node': 'element'\n  'data-slate-void'?: true\n  'data-slate-inline'?: true\n  contentEditable?: false\n  dir?: 'rtl'\n  ref: any\n}\n\ntype ElementProps = {\n  attributes: ElementAttributes\n  children: ReactElement\n  element: SlateElement\n  portableTextFeatures: PortableTextFeatures\n  readOnly: boolean\n  renderBlock?: RenderBlockFunction\n  renderChild?: RenderChildFunction\n  spellCheck?: boolean\n}\n\nconst inlineBlockStyle = {display: 'inline-block'}\n\nconst defaultRender = (value: PortableTextBlock) => {\n  return <ObjectNode value={value} />\n}\n\n// eslint-disable-next-line max-statements\nexport const Element: FunctionComponent<ElementProps> = ({\n  attributes,\n  children,\n  element,\n  portableTextFeatures,\n  readOnly,\n  renderBlock,\n  renderChild,\n  spellCheck,\n}) => {\n  const editor = useSlateStatic()\n  const selected = useSelected()\n  const blockRef = useRef<HTMLDivElement | null>(null)\n  const inlineBlockObjectRef = useRef(null)\n  const focused = (selected && editor.selection && Range.isCollapsed(editor.selection)) || false\n  let className\n\n  if (typeof element._type !== 'string') {\n    throw new Error(`Expected element to have a _type property`)\n  }\n\n  if (typeof element._key !== 'string') {\n    throw new Error(`Expected element to have a _key property`)\n  }\n\n  // Test for inline objects first\n  if (editor.isInline(element)) {\n    const path = ReactEditor.findPath(editor, element)\n    const [block] = Editor.node(editor, path, {depth: 1})\n    const type = portableTextFeatures.types.inlineObjects.find(\n      (_type) => _type.name === element._type\n    )\n    if (!type) {\n      throw new Error('Could not find type for inline block element')\n    }\n    if (SlateElement.isElement(block)) {\n      const elmPath: Path = [{_key: block._key}, 'children', {_key: element._key}]\n      if (debugRenders) {\n        debug(`Render ${element._key} (inline object)`)\n      }\n      return (\n        <span {...attributes}>\n          {/* Note that children must follow immediately or cut and selections will not work properly in Chrome. */}\n          {children}\n          <DraggableChild element={element} readOnly={readOnly}>\n            <span\n              className=\"pt-inline-object\"\n              ref={inlineBlockObjectRef}\n              key={element._key}\n              style={inlineBlockStyle}\n              contentEditable={false}\n            >\n              {renderChild &&\n                renderChild(\n                  fromSlateValue(\n                    [element],\n                    portableTextFeatures.types.block.name,\n                    KEY_TO_VALUE_ELEMENT.get(editor)\n                  )[0],\n                  type,\n                  {focused, selected, path: elmPath},\n                  defaultRender,\n                  inlineBlockObjectRef\n                )}\n              {!renderChild &&\n                defaultRender(\n                  fromSlateValue(\n                    [element],\n                    portableTextFeatures.types.block.name,\n                    KEY_TO_VALUE_ELEMENT.get(editor)\n                  )[0]\n                )}\n            </span>\n          </DraggableChild>\n        </span>\n      )\n    }\n    throw new Error('Block not found!')\n  }\n\n  const renderAttribs: RenderAttributes = {focused, selected, path: [{_key: element._key}]}\n\n  // If not inline, it's either a block (text) or a block object (non-text)\n  // NOTE: text blocks aren't draggable with DraggableBlock (yet?)\n  if (element._type === portableTextFeatures.types.block.name) {\n    className = `pt-block pt-text-block`\n    const isListItem = 'listItem' in element\n    const hasStyle = 'style' in element\n    if (debugRenders) {\n      debug(`Render ${element._key} (text block)`)\n    }\n    if (hasStyle) {\n      renderAttribs.style = element.style || 'normal'\n      className = `pt-block pt-text-block pt-text-block-style-${element.style}`\n    }\n    if (isListItem) {\n      renderAttribs.listItem = element.listItem\n      if (Number.isInteger(element.level)) {\n        renderAttribs.level = element.level\n      } else {\n        renderAttribs.level = 1\n      }\n      className += ` pt-list-item pt-list-item-${renderAttribs.listItem} pt-list-item-level-${renderAttribs.level}`\n    }\n    const textBlock = (\n      <TextBlock block={element} portableTextFeatures={portableTextFeatures}>\n        {children}\n      </TextBlock>\n    )\n    const propsOrDefaultRendered = renderBlock\n      ? renderBlock(\n          fromSlateValue([element], element._type, KEY_TO_VALUE_ELEMENT.get(editor))[0],\n          portableTextFeatures.types.block,\n          renderAttribs,\n          () => textBlock,\n          blockRef\n        )\n      : textBlock\n    return (\n      <div key={element._key} {...attributes} className={className} spellCheck={spellCheck}>\n        <DraggableBlock element={element} readOnly={readOnly} blockRef={blockRef}>\n          <div ref={blockRef}>{propsOrDefaultRendered}</div>\n        </DraggableBlock>\n      </div>\n    )\n  }\n  const type = portableTextFeatures.types.blockObjects.find((_type) => _type.name === element._type)\n  if (!type) {\n    throw new Error(`Could not find schema type for block element of _type ${element._type}`)\n  }\n  if (debugRenders) {\n    debug(`Render ${element._key} (object block)`)\n  }\n  className = 'pt-block pt-object-block'\n  const block = fromSlateValue(\n    [element],\n    portableTextFeatures.types.block.name,\n    KEY_TO_VALUE_ELEMENT.get(editor)\n  )[0]\n  const renderedBlockFromProps =\n    renderBlock && renderBlock(block, type, renderAttribs, defaultRender, blockRef)\n  return (\n    <div key={element._key} {...attributes} className={className}>\n      {children}\n      <DraggableBlock element={element} readOnly={readOnly} blockRef={blockRef}>\n        {renderedBlockFromProps && (\n          <div ref={blockRef} contentEditable={false}>\n            {renderedBlockFromProps}\n          </div>\n        )}\n        {!renderedBlockFromProps && (\n          <DefaultBlockObject selected={selected}>\n            {defaultRender(\n              fromSlateValue(\n                [element],\n                portableTextFeatures.types.block.name,\n                KEY_TO_VALUE_ELEMENT.get(editor)\n              )[0]\n            )}\n          </DefaultBlockObject>\n        )}\n      </DraggableBlock>\n    </div>\n  )\n}\n","import React, {useRef, useLayoutEffect, useEffect} from 'react'\n\nconst useIsomorphicEffect = typeof window === 'undefined' ? useEffect : useLayoutEffect\n\nexport function useForwardedRef<T>(ref: React.ForwardedRef<T>): React.MutableRefObject<T | null> {\n  const innerRef = useRef<T | null>(null)\n\n  useIsomorphicEffect(() => {\n    if (!ref) return\n\n    if (typeof ref === 'function') {\n      ref(innerRef.current)\n    } else {\n      ref.current = innerRef.current\n    }\n  })\n\n  return innerRef\n}\n","import {BaseRange, Transforms} from 'slate'\nimport React, {useCallback, useMemo, useEffect, forwardRef} from 'react'\nimport {Editable as SlateEditable, ReactEditor, withReact} from '@sanity/slate-react'\nimport {\n  EditorSelection,\n  OnBeforeInputFn,\n  OnCopyFn,\n  OnPasteFn,\n  OnPasteResult,\n  OnPasteResultOrPromise,\n  RenderAnnotationFunction,\n  RenderBlockFunction,\n  RenderChildFunction,\n  RenderDecoratorFunction,\n  ScrollSelectionIntoViewFunction,\n} from '../types/editor'\nimport {HotkeyOptions} from '../types/options'\nimport {fromSlateValue, isEqualToEmptyEditor, toSlateValue} from '../utils/values'\nimport {normalizeSelection} from '../utils/selection'\nimport {toSlateRange} from '../utils/ranges'\nimport {debugWithName} from '../utils/debug'\nimport {Leaf} from './Leaf'\nimport {Element} from './Element'\nimport {usePortableTextEditor} from './hooks/usePortableTextEditor'\nimport {PortableTextEditor} from './PortableTextEditor'\nimport {createWithEditableAPI, createWithHotkeys, createWithInsertData} from './plugins'\nimport {useForwardedRef} from './hooks/useForwardedRef'\n\nconst debug = debugWithName('component:Editable')\n\nconst PLACEHOLDER_STYLE: React.CSSProperties = {\n  opacity: 0.5,\n  position: 'absolute',\n  userSelect: 'none',\n  pointerEvents: 'none',\n}\n\nconst NOOP = () => {\n  // Nope\n}\ntype DOMNode = globalThis.Node\n\nconst isDOMNode = (value: unknown): value is DOMNode => {\n  return value instanceof Node\n}\n\n/**\n * Check if the target is editable and in the editor.\n */\nexport const hasEditableTarget = (\n  editor: ReactEditor,\n  target: EventTarget | null\n): target is DOMNode => {\n  return isDOMNode(target) && ReactEditor.hasDOMNode(editor, target, {editable: true})\n}\n\nexport type PortableTextEditableProps = {\n  hotkeys?: HotkeyOptions\n  onBeforeInput?: OnBeforeInputFn\n  onPaste?: OnPasteFn\n  onCopy?: OnCopyFn\n  readOnly?: boolean\n  renderAnnotation?: RenderAnnotationFunction\n  renderBlock?: RenderBlockFunction\n  renderChild?: RenderChildFunction\n  renderDecorator?: RenderDecoratorFunction\n  renderPlaceholder?: () => React.ReactNode\n  scrollSelectionIntoView?: ScrollSelectionIntoViewFunction\n  selection?: EditorSelection\n  spellCheck?: boolean\n}\n\nconst EMPTY_DECORATORS: BaseRange[] = []\n\nexport const PortableTextEditable = forwardRef(function PortableTextEditable(\n  props: PortableTextEditableProps & Omit<React.HTMLProps<HTMLDivElement>, 'as' | 'onPaste'>,\n  forwardedRef: React.ForwardedRef<HTMLDivElement>\n) {\n  const {\n    hotkeys,\n    onBeforeInput,\n    onPaste,\n    onCopy,\n    renderAnnotation,\n    renderBlock,\n    renderChild,\n    renderDecorator,\n    renderPlaceholder,\n    readOnly,\n    selection: propsSelection,\n    scrollSelectionIntoView,\n    spellCheck,\n    ...restProps\n  } = props\n\n  const portableTextEditor = usePortableTextEditor()\n  const ref = useForwardedRef(forwardedRef)\n\n  const {\n    change$,\n    keyGenerator,\n    portableTextFeatures,\n    slateInstance: slateEditor,\n  } = portableTextEditor\n\n  const isEmpty = useMemo(\n    () => isEqualToEmptyEditor(slateEditor.children, portableTextFeatures),\n    [portableTextFeatures, slateEditor.children]\n  )\n\n  // React/UI-spesific plugins\n  const withInsertData = useMemo(\n    () => createWithInsertData(change$, portableTextFeatures, keyGenerator),\n    [change$, keyGenerator, portableTextFeatures]\n  )\n  const withHotKeys = useMemo(\n    () => createWithHotkeys(portableTextFeatures, keyGenerator, portableTextEditor, hotkeys),\n    [hotkeys, keyGenerator, portableTextEditor, portableTextFeatures]\n  )\n\n  // Create the PortableTextEditor API\n  const withEditableAPI = useMemo(\n    () => createWithEditableAPI(portableTextEditor, portableTextFeatures, keyGenerator),\n    [keyGenerator, portableTextEditor, portableTextFeatures]\n  )\n\n  // Update the Slate instance's plugins which are dependent on props for Editable\n  useMemo(() => {\n    if (readOnly) {\n      debug('Editable is in read only mode')\n      return withReact(slateEditor)\n    }\n    debug('Editable is in edit mode')\n    return withEditableAPI(withInsertData(withHotKeys(withReact(slateEditor))))\n  }, [readOnly, slateEditor, withEditableAPI, withHotKeys, withInsertData])\n\n  const renderElement = useCallback(\n    (eProps) => (\n      <Element\n        {...eProps}\n        portableTextFeatures={portableTextFeatures}\n        readOnly={readOnly}\n        renderBlock={renderBlock}\n        renderChild={renderChild}\n        spellCheck={spellCheck}\n      />\n    ),\n    [portableTextFeatures, spellCheck, readOnly, renderBlock, renderChild]\n  )\n\n  const renderLeaf = useCallback(\n    (lProps) => {\n      if (renderPlaceholder && lProps.leaf.placeholder && lProps.text.text === '') {\n        return (\n          <>\n            <div style={PLACEHOLDER_STYLE} contentEditable={false}>\n              {renderPlaceholder()}\n            </div>\n            <Leaf\n              {...lProps}\n              keyGenerator={keyGenerator}\n              portableTextFeatures={portableTextFeatures}\n              renderAnnotation={renderAnnotation}\n              renderChild={renderChild}\n              renderDecorator={renderDecorator}\n              readOnly={readOnly}\n            />\n          </>\n        )\n      }\n      return (\n        <Leaf\n          {...lProps}\n          keyGenerator={keyGenerator}\n          portableTextFeatures={portableTextFeatures}\n          renderAnnotation={renderAnnotation}\n          renderChild={renderChild}\n          renderDecorator={renderDecorator}\n          readOnly={readOnly}\n        />\n      )\n    },\n    [\n      readOnly,\n      keyGenerator,\n      portableTextFeatures,\n      renderAnnotation,\n      renderChild,\n      renderDecorator,\n      renderPlaceholder,\n    ]\n  )\n\n  // Restore selection from props\n  useEffect(() => {\n    if (propsSelection) {\n      debug(`Selection from props ${JSON.stringify(propsSelection)}`)\n      const normalizedSelection = normalizeSelection(\n        propsSelection,\n        fromSlateValue(slateEditor.children, portableTextFeatures.types.block.name)\n      )\n      if (normalizedSelection !== null) {\n        debug(`Normalized selection from props ${JSON.stringify(normalizedSelection)}`)\n        const slateRange = toSlateRange(normalizedSelection, slateEditor)\n        if (slateRange) {\n          Transforms.select(slateEditor, slateRange)\n          // Output selection here in those cases where the editor selection was the same, and there are no set selection operations in the\n          // editor (this is usually automatically outputted by the withPortableTextSelections plugin)\n          if (!slateEditor.operations.some((o) => o.type === 'set_selection')) {\n            change$.next({type: 'selection', selection: normalizedSelection})\n          }\n          slateEditor.onChange()\n        }\n      }\n    }\n  }, [slateEditor, propsSelection, portableTextFeatures.types.block.name, change$])\n\n  // Set initial selection from props\n  useEffect(() => {\n    if (propsSelection) {\n      PortableTextEditor.select(portableTextEditor, propsSelection)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []) // Only initial\n\n  // Handle from props onCopy function\n  const handleCopy = useCallback(\n    (event: React.ClipboardEvent<HTMLDivElement>): void | ReactEditor => {\n      if (onCopy) {\n        const result = onCopy(event)\n        // CopyFn may return something to avoid doing default stuff\n        if (result !== undefined) {\n          event.preventDefault()\n        }\n      }\n    },\n    [onCopy]\n  )\n\n  // Handle incoming pasting events in the editor\n  const handlePaste = useCallback(\n    (event: React.ClipboardEvent<HTMLDivElement>): Promise<void> | void => {\n      if (!slateEditor.selection) {\n        return\n      }\n      if (onPaste) {\n        const resolveOnPasteResultOrError = (): OnPasteResultOrPromise | Error => {\n          try {\n            return onPaste({\n              event,\n              value: PortableTextEditor.getValue(portableTextEditor),\n              path: slateEditor.selection?.focus.path || [],\n              portableTextFeatures, // New key added in v.2.23.2\n              type: portableTextFeatures.types.portableText, // For legacy support\n            })\n          } catch (error) {\n            return error as Error\n          }\n        }\n        // Resolve it as promise (can be either async promise or sync return value)\n        const resolved: OnPasteResultOrPromise | Error = Promise.resolve(\n          resolveOnPasteResultOrError()\n        )\n        resolved\n          .then((result: OnPasteResult) => {\n            debug('Custom paste function from client resolved', result)\n            change$.next({type: 'loading', isLoading: true})\n            if (!result) {\n              return\n            }\n            if (result instanceof Error) {\n              throw result\n            }\n            if (result && result.insert) {\n              event.preventDefault() // Stop the chain\n              slateEditor.insertFragment(toSlateValue(result.insert, {portableTextFeatures}))\n              change$.next({type: 'loading', isLoading: false})\n              return\n            }\n            console.warn('Your onPaste function returned something unexpected:', result)\n          })\n          .catch((error) => {\n            change$.next({type: 'loading', isLoading: false})\n            console.error(error) // eslint-disable-line no-console\n            return error\n          })\n      }\n      event.preventDefault()\n      slateEditor.insertData(event.clipboardData)\n    },\n    [change$, onPaste, portableTextEditor, portableTextFeatures, slateEditor]\n  )\n\n  const handleOnFocus = useCallback(() => {\n    change$.next({type: 'focus'})\n  }, [change$])\n\n  const handleOnBlur = useCallback(() => {\n    change$.next({type: 'blur'})\n  }, [change$])\n\n  const handleOnBeforeInput = useCallback(\n    (event: Event) => {\n      if (onBeforeInput) {\n        onBeforeInput(event)\n      }\n    },\n    [onBeforeInput]\n  )\n\n  const handleKeyDown = slateEditor.pteWithHotKeys\n\n  const scrollSelectionIntoViewToSlate = useMemo(() => {\n    // Use slate-react default scroll into view\n    if (scrollSelectionIntoView === undefined) {\n      return undefined\n    }\n    // Disable scroll into view totally\n    if (scrollSelectionIntoView === null) {\n      return NOOP\n    }\n    // Translate PortableTextEditor prop fn to Slate plugin fn\n    return (editor: ReactEditor, domRange: Range) => {\n      scrollSelectionIntoView(portableTextEditor, domRange)\n    }\n  }, [portableTextEditor, scrollSelectionIntoView])\n\n  const decorate = useCallback(() => {\n    if (isEmpty && slateEditor.children.length <= 1) {\n      return [\n        {\n          anchor: {\n            path: [0, 0],\n            offset: 0,\n          },\n          focus: {\n            path: [0, 0],\n            offset: 0,\n          },\n          placeholder: true,\n        },\n      ]\n    }\n    return EMPTY_DECORATORS\n  }, [isEmpty, slateEditor.children])\n\n  // The editor\n  const slateEditable = useMemo(\n    () => (\n      <SlateEditable\n        autoFocus={false}\n        className=\"pt-editable\"\n        decorate={decorate}\n        onBlur={handleOnBlur}\n        onCopy={handleCopy}\n        onDOMBeforeInput={handleOnBeforeInput}\n        onFocus={handleOnFocus}\n        onKeyDown={handleKeyDown}\n        onPaste={handlePaste}\n        readOnly={readOnly}\n        renderElement={renderElement}\n        renderLeaf={renderLeaf}\n        scrollSelectionIntoView={scrollSelectionIntoViewToSlate}\n      />\n    ),\n    [\n      decorate,\n      handleCopy,\n      handleKeyDown,\n      handleOnBeforeInput,\n      handleOnBlur,\n      handleOnFocus,\n      handlePaste,\n      readOnly,\n      renderElement,\n      renderLeaf,\n      scrollSelectionIntoViewToSlate,\n    ]\n  )\n\n  if (!portableTextEditor) {\n    return null\n  }\n  return (\n    <div ref={ref} {...restProps}>\n      {slateEditable}\n    </div>\n  )\n})\n"],"names":["dmp","insert","flatten","debug","Element","apply","applyPatch","OPERATIONS","SUPPORTED_PATCH_TYPES","applyArrayPatch","applyStringPatch","applyObjectPatch","applyPrimitivePatch","SlateElement","SlateText","NOOP","ObjectNode","SlateEditable"],"mappings":"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"}