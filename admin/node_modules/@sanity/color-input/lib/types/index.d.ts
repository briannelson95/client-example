import { ObjectInputProps, ObjectSchemaType } from "sanity";
import { HSLColor, HSVColor, RGBColor } from "react-color";
export const hslaColor: {
    title: string;
    name: string;
    type: string;
    fields: {
        name: string;
        type: string;
        title: string;
    }[];
};
export const rgbaColor: {
    title: string;
    name: string;
    type: string;
    fields: {
        name: string;
        type: string;
        title: string;
    }[];
};
export interface ColorValue {
    hex: string;
    hsl: HSLColor;
    hsv: HSVColor;
    rgb: RGBColor;
}
export interface ColorOptions {
    disableAlpha?: boolean;
}
export type ColorSchemaType = ObjectSchemaType & {
    options?: ColorOptions;
};
export type ColorInputProps = ObjectInputProps<ColorValue, ColorSchemaType>;
export function ColorInput(props: ColorInputProps): JSX.Element;
export const color: {
    name: string;
    type: string;
    title: string;
    components: {
        input: typeof ColorInput;
    };
    fields: {
        title: string;
        name: string;
        type: string;
    }[];
    preview: {
        select: {
            title: string;
            alpha: string;
            hex: string;
            hsl: string;
        };
        prepare({ title, hex, hsl, alpha, }: {
            title?: string | undefined;
            alpha?: number | undefined;
            hex?: string | undefined;
            hsl?: {
                h: number;
                s: number;
                l: number;
            } | undefined;
        }): {
            title: string | undefined;
            subtitle: string;
            media: () => JSX.Element;
        };
    };
};
export const hsvaColor: {
    title: string;
    name: string;
    type: string;
    fields: {
        name: string;
        type: string;
        title: string;
    }[];
};
export const colorInput: import("sanity").Plugin<void>;

//# sourceMappingURL=index.d.ts.map
