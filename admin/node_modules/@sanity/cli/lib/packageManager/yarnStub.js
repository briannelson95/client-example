"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getYarnStub = getYarnStub;

var _installPackages = require("./installPackages");

var _packageManagerChoice = require("./packageManagerChoice");

var _uninstallPackages = require("./uninstallPackages");

function getYarnStub(context) {
  return async function yarnStub(args, options) {
    const workDir = (options === null || options === void 0 ? void 0 : options.rootDir) || context.workDir;
    const yarnContext = {
      workDir,
      output: context.output
    };
    const {
      chosen
    } = await (0, _packageManagerChoice.getPackageManagerChoice)(workDir, {
      interactive: false
    });
    const [command, ...packages] = args;

    if (command === 'add') {
      await (0, _installPackages.installNewPackages)({
        packageManager: chosen,
        packages
      }, yarnContext);
    } else if (command === 'remove') {
      await (0, _uninstallPackages.uninstallPackages)({
        packageManager: chosen,
        packages
      }, yarnContext);
    } else if (command === 'install') {
      await (0, _installPackages.installDeclaredPackages)(workDir, chosen, yarnContext);
    } else {
      throw new Error("Unsupported package manager command \"".concat(command, "\""));
    }
  };
}