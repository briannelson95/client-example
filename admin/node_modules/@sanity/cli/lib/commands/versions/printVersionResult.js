"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
exports.getFormatters = getFormatters;
exports.printResult = printResult;

var _padEnd2 = _interopRequireDefault(require("lodash/padEnd"));

var _padStart2 = _interopRequireDefault(require("lodash/padStart"));

var _chalk = _interopRequireDefault(require("chalk"));

var _findSanityModuleVersions = require("../../actions/versions/findSanityModuleVersions");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const printVersionResultCommand = async (args, context) => {
  const versions = await (0, _findSanityModuleVersions.findSanityModuleVersions)(context, {
    target: 'latest'
  });
  printResult(versions, context.output.print);
};

var _default = printVersionResultCommand;
exports.default = _default;

function printResult(versions, print) {
  const {
    versionLength,
    formatName
  } = getFormatters(versions);
  versions.forEach(mod => {
    const version = (0, _padStart2.default)(mod.installed || '<missing>', versionLength);
    const latest = mod.installed === mod.latest ? _chalk.default.green('(up to date)') : "(latest: ".concat(_chalk.default.yellow(mod.latest), ")");
    print("".concat(formatName(getDisplayName(mod)), " ").concat(version, " ").concat(latest));
  });
}

function getFormatters(versions) {
  const nameLength = versions.reduce((max, mod) => Math.max(max, getDisplayName(mod).length), 0);
  const versionLength = versions.reduce((max, mod) => Math.max(max, (mod.installed || '<missing>').length), 0);

  const formatName = name => (0, _padEnd2.default)(name, nameLength + 1).replace(/^@sanity\/(.*?)(\s|$)/, "".concat(_chalk.default.yellow('@sanity/')).concat(_chalk.default.cyan('$1'), "$2")).replace(/^sanity(\s|$)/, "".concat(_chalk.default.yellow('sanity'), "$1"));

  return {
    nameLength,
    versionLength,
    formatName
  };
}

function getDisplayName(mod) {
  return mod.isGlobal ? "".concat(mod.name, " (global)") : mod.name;
}