"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initCommand = exports.default = void 0;

var _initProject = _interopRequireDefault(require("../../actions/init-project/initProject"));

var _initPlugin = _interopRequireDefault(require("../../actions/init-plugin/initPlugin"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const helpText = "\nOptions\n  -y, --yes Use unattended mode, accepting defaults and using only flags for choices\n  --project <projectId> Project ID to use for the studio\n  --organization <organizationId> Organization ID to use for the project\n  --dataset <dataset> Dataset name for the studio\n  --dataset-default Set up a project with a public dataset named \"production\"\n  --output-path <path> Path to write studio project to\n  --template <template> Project template to use [default: \"clean\"]\n  --provider <provider> Login provider to use\n  --visibility <mode> Visibility mode for dataset (public/private)\n  --create-project <name> Create a new project with the given name\n  --project-plan <name> Optionally select a plan for a new project\n  --coupon <name> Optionally select a coupon for a new project (cannot be used with --project-plan)\n  --reconfigure Reconfigure Sanity studio in current folder with new project/dataset\n  --typescript Use TypeScript for template files\n\nExamples\n  # Initialize a new project, prompt for required information along the way\n  sanity init\n\n  # Initialize a new project with a public dataset named \"production\"\n  sanity init --dataset-default\n\n  # Initialize a project with the given project ID and dataset to the given path\n  sanity init -y --project abc123 --dataset production --output-path ~/myproj\n\n  # Initialize a project with the given project ID and dataset using the moviedb\n  # template to the given path\n  sanity init -y --project abc123 --dataset staging --template moviedb --output-path .\n\n  # Create a brand new project with name \"Movies Unlimited\"\n  sanity init -y \\\n    --create-project \"Movies Unlimited\" \\\n    --dataset moviedb \\\n    --visibility private \\\n    --template moviedb \\\n    --output-path /Users/espenh/movies-unlimited\n";
const initCommand = {
  name: 'init',
  signature: '',
  description: 'Initialize a new Sanity studio project',
  helpText,
  action: (args, context) => {
    const [type] = args.argsWithoutOptions;

    if (!type) {
      return (0, _initProject.default)(args, context);
    }

    if (type === 'plugin') {
      return context.sanityMajorVersion === 2 ? (0, _initPlugin.default)(args, context) : Promise.reject(new Error("'sanity init plugin' is not available in modern studios"));
    }

    return Promise.reject(new Error("Unknown init type \"".concat(type, "\"")));
  }
};
exports.initCommand = initCommand;
var _default = initCommand;
exports.default = _default;