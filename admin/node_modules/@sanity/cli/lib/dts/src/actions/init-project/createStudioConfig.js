import { parse, print } from 'recast';
import * as parser from 'recast/parsers/typescript';
import traverse from '@babel/traverse';
const defaultTemplate = `
import {createConfig} from 'sanity'
import {deskTool} from 'sanity/desk'
import {schemaTypes} from './schemas'

export default createConfig({
  name: '%sourceName%',
  title: '%projectName%',

  projectId: '%projectId%',
  dataset: '%dataset%',

  plugins: [deskTool()],

  schema: {
    types: schemaTypes,
  },
})
`;
const defaultVariables = {
    projectName: 'Sanity Studio',
    sourceName: 'default',
    sourceTitle: 'Default',
};
export function createStudioConfig(options) {
    const variables = { ...defaultVariables, ...options.variables };
    if (typeof options.template === 'function') {
        return options.template(variables).trimStart();
    }
    const template = (options.template || defaultTemplate).trimStart();
    const ast = parse(template, { parser });
    traverse(ast, {
        StringLiteral: {
            enter({ node }) {
                const value = node.value;
                if (!value.startsWith('%') || !value.endsWith('%')) {
                    return;
                }
                const variableName = value.slice(1, -1);
                if (!(variableName in variables)) {
                    throw new Error(`Template variable '${value}' not defined`);
                }
                node.value = variables[variableName] || '';
            },
        },
    });
    return print(ast, { quote: 'single' }).code;
}
//# sourceMappingURL=createStudioConfig.js.map