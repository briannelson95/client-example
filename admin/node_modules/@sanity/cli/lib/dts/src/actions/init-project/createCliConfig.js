import { parse, print } from 'recast';
import * as parser from 'recast/parsers/typescript';
import traverse from '@babel/traverse';
const defaultTemplate = `
import {createCliConfig} from 'sanity/cli'

export default createCliConfig({
  api: {
    projectId: '%projectId%',
    dataset: '%dataset%'
  }
})
`;
export function createCliConfig(options) {
    const variables = options;
    const template = defaultTemplate.trimStart();
    const ast = parse(template, { parser });
    traverse(ast, {
        StringLiteral: {
            enter({ node }) {
                const value = node.value;
                if (!value.startsWith('%') || !value.endsWith('%')) {
                    return;
                }
                const variableName = value.slice(1, -1);
                if (!(variableName in variables)) {
                    throw new Error(`Template variable '${value}' not defined`);
                }
                node.value = variables[variableName] || '';
            },
        },
    });
    return print(ast, { quote: 'single' }).code;
}
//# sourceMappingURL=createCliConfig.js.map