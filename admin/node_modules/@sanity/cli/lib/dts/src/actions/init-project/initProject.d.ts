import type { InitFlags } from '../../commands/init/initCommand';
import { CliCommandArguments, CliCommandContext } from '../../types';
import { GenerateConfigOptions } from './createStudioConfig';
export interface InitOptions {
    template: string;
    outputDir: string;
    name: string;
    displayName: string;
    dataset: string;
    projectId: string;
    author: string | undefined;
    description: string | undefined;
    gitRemote: string | undefined;
    license: string | undefined;
    outputPath: string | undefined;
    projectName: string;
    useTypeScript: boolean;
}
export interface ProjectTemplate {
    datasetUrl?: string;
    dependencies?: Record<string, string>;
    devDependencies?: Record<string, string>;
    importPrompt?: string;
    configTemplate?: string | ((variables: GenerateConfigOptions['variables']) => string);
}
export interface ProjectOrganization {
    id: string;
    name: string;
    slug: string;
}
export default function initSanity(args: CliCommandArguments<InitFlags>, context: CliCommandContext): Promise<void>;
//# sourceMappingURL=initProject.d.ts.map