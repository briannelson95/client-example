import execa from 'execa';
import { getPartialEnvWithNpmPath } from './packageManagerChoice';
export async function installDeclaredPackages(cwd, packageManager, context) {
    const { output } = context;
    const execOptions = {
        encoding: 'utf8',
        env: getPartialEnvWithNpmPath(cwd),
        cwd,
        stdio: 'inherit',
    };
    const npmArgs = ['install', '--legacy-peer-deps'];
    let result;
    if (packageManager === 'npm') {
        output.print(`Running 'npm ${npmArgs.join(' ')}'`);
        result = await execa('npm', npmArgs, execOptions);
    }
    else if (packageManager === 'yarn') {
        const yarnArgs = ['install'];
        output.print(`Running 'yarn ${yarnArgs.join(' ')}'`);
        result = await execa('yarn', yarnArgs, execOptions);
    }
    else if (packageManager === 'pnpm') {
        const pnpmArgs = ['install'];
        output.print(`Running 'pnpm ${pnpmArgs.join(' ')}'`);
        result = await execa('pnpm', pnpmArgs, execOptions);
    }
    else if (packageManager === 'manual') {
        output.print(`Manual installation selected - run 'npm ${npmArgs.join(' ')}' or similar`);
    }
    if (result?.exitCode || result?.failed) {
        throw new Error('Dependency installation failed');
    }
}
export async function installNewPackages(options, context) {
    const { packageManager, packages } = options;
    const { output, workDir } = context;
    const execOptions = {
        encoding: 'utf8',
        env: getPartialEnvWithNpmPath(workDir),
        cwd: workDir,
        stdio: 'inherit',
    };
    const npmArgs = ['install', '--legacy-peer-deps', '--save', ...packages];
    let result;
    if (packageManager === 'npm') {
        output.print(`Running 'npm ${npmArgs.join(' ')}'`);
        result = await execa('npm', npmArgs, execOptions);
    }
    else if (packageManager === 'yarn') {
        const yarnArgs = ['add', ...packages];
        output.print(`Running 'yarn ${yarnArgs.join(' ')}'`);
        result = await execa('yarn', yarnArgs, execOptions);
    }
    else if (packageManager === 'pnpm') {
        const pnpmArgs = ['add', '--save-prod', ...packages];
        output.print(`Running 'pnpm ${pnpmArgs.join(' ')}'`);
        result = await execa('pnpm', pnpmArgs, execOptions);
    }
    else if (packageManager === 'manual') {
        output.print(`Manual installation selected - run 'npm ${npmArgs.join(' ')}' or equivalent`);
    }
    if (result?.exitCode || result?.failed) {
        throw new Error('Package installation failed');
    }
}
//# sourceMappingURL=installPackages.js.map