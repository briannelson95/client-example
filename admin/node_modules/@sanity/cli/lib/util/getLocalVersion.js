"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getLocalVersion = getLocalVersion;

var _path = _interopRequireDefault(require("path"));

var _resolveFrom = _interopRequireDefault(require("resolve-from"));

var _dynamicRequire = require("./dynamicRequire");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function getLocalVersion(moduleId, workDir) {
  const fromPath = workDir || process.cwd();

  const modulePath = _resolveFrom.default.silent(fromPath, _path.default.join(moduleId, 'package.json'));

  if (modulePath) {
    return tryGetVersion(modulePath);
  } // In the case of packages with an `exports` key, we may not be able to resolve `package.json`.
  // If this happens, try to resolve the module itself and look for the last occurence of the
  // package name, then append `package.json` to that path


  const pathSegment = _path.default.normalize(moduleId);

  const parentPath = _resolveFrom.default.silent(fromPath, moduleId);

  if (!parentPath) {
    return undefined;
  }

  const moduleRoot = parentPath.slice(0, parentPath.lastIndexOf(pathSegment) + pathSegment.length);

  const manifestPath = _path.default.join(moduleRoot, 'package.json');

  return tryGetVersion(manifestPath);
}

function tryGetVersion(modulePath) {
  try {
    return (0, _dynamicRequire.dynamicRequire)(modulePath).version;
  } catch (err) {
    return undefined;
  }
}